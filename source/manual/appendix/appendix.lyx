#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage{a4wide}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding latin1
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 5
\tocdepth 5
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
appendix
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Reference part
\begin_inset CommandInset label
LatexCommand label
name "cha:Reference-part"

\end_inset


\end_layout

\begin_layout Standard

\series bold
This chapter is only part of the TANGO device server reference guide.
 To get reference documentation about the C++ library classes, see 
\begin_inset CommandInset citation
LatexCommand cite
key "TANGO_ref_man"

\end_inset

.
 To get reference documentation about the Java classes, also see 
\begin_inset CommandInset citation
LatexCommand cite
key "TANGO_ref_man"

\end_inset

.
\end_layout

\begin_layout Section
Device parameter
\end_layout

\begin_layout Standard
A black box, a device description field, a device state and status are associate
d with each TANGO device.
\end_layout

\begin_layout Subsection
The device black box
\end_layout

\begin_layout Standard
The device black box
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
black-box
\end_layout

\end_inset

 is managed as a circular buffer.
 It is possible to tune the buffer depth via a device property.
 This property name is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

device name->blackbox_depth
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset

 A default value is hard-coded to 50 if the property is not defined.
 This black box depth property is retrieved from the Tango property database
 during the device creation phase.
\end_layout

\begin_layout Subsection
The device description field
\end_layout

\begin_layout Standard
There are two ways to intialise the device description
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
description
\end_layout

\end_inset

 field.
\end_layout

\begin_layout Itemize
At device creation time.
 Some constructors of the DeviceImpl class supports this field as parameter.
 If these constructor are not used, the device description field is set
 to a default value which is 
\emph on
A Tango device
\emph default
.
\end_layout

\begin_layout Itemize
With a property.
 A description field defines with this method overrides a device description
 defined at construction time.
 The property name is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

device name->description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
The device state and status
\end_layout

\begin_layout Standard
Some constructors of the DeviceImpl class allows the initialisation of device
 state
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
state
\end_layout

\end_inset

 and/or status
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
status
\end_layout

\end_inset

 or device creation time.
 If these fields are not defined, a default value is applied.
 The default state is Tango::UNKOWN, the default status is 
\emph on
Not Initialised.
\end_layout

\begin_layout Subsection
The device polling
\begin_inset CommandInset label
LatexCommand label
name "sub:The-device-polling-prop"

\end_inset


\end_layout

\begin_layout Standard
Seven device properties allow the polling tunning.
 These properties are described in the following table 
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="3">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="bottom" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Property name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
property rule
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
default value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
poll_ring_depth
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Polling buffer depth
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cmd_poll_ring_depth
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cmd polling buffer depth
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
attr_poll_ring_depth
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attr polling buffer depth
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
poll_old_factor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"Data too old" factor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
min_poll_period
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Minimun polling period
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cmd_min_poll_period
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Min.
 polling period for cmd
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
attr_min_poll_period
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Min.
 polling period for attr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
The rule of the poll_ring_depth
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
poll-ring-depth
\end_layout

\end_inset

 property is obvious.
 It defines the polling ring depth for all the device polled command(s)
 and attribute(s).
 Nevertheless, when filling the polling buffer via the fill_cmd_polling_buffer()
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
fill-cmd-polling-buffer
\end_layout

\end_inset

 (or fill_attr_polling_buffer()
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
fill-attr-polling-buffer
\end_layout

\end_inset

) method, it could be helpfull to define specific polling ring depth for
 a command (or an attribute).
 This is the rule of the cmd_poll_ring_depth
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
cmd-poll-ring-depth
\end_layout

\end_inset

 and attr_poll_ring_depth
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
attr-poll-ring-depth
\end_layout

\end_inset

 properties.
 For each polled object with specific polling depth (command or attribute),
 the syntax of this property is the object name followed by the ring depth
 (ie State,20,Status,15).
 If one of these properties is defined, for the specific command or attribute,
 it will overwrite the value set by the poll_ring_depth property.
 The poll_old_factor
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
poll-old-factor
\end_layout

\end_inset

 property allows the user to tune how long the data recorded in the polling
 buffer are valid.
 Each time some data are read from the polling buffer, a check is done between
 the date when the data were recorded in the polling buffer and the date
 when the user request these data.
 If the interval is greater than the object polling period multiply by the
 value of the poll_old_factor factory, an exception is returned to the caller.
 These two properties are defined at device level and therefore, it is not
 possible to tune this parameter for each polled object (command or attribute).
 The last 3 properties are dedicated to define a polling period minimum
 threshold.
 The property min_poll_period
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
min-poll-period
\end_layout

\end_inset

 defines in (mS) a device minimum polling period.
 Property cmd_min_poll_period
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
cmd-min-poll-period
\end_layout

\end_inset

 defines (in mS) a minimum polling period for a specific command.
 The syntax of this property is the command name followed by the minimum
 polling period (ie MyCmd,400).
 Property attr_min_poll_period
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
attr-min-poll-period
\end_layout

\end_inset

 defines (in mS) a minimum polling period for a specific attribute.
 The syntax of this property is the attribute name followed by the minimum
 polling period (ie MyAttr,600).
 These two properties has a higher priority than the min_poll_period property.
 By default these three properties are not defined mening that there is
 no minimun polling period.
\end_layout

\begin_layout Standard
Four other properties are used by the Tango core classes to manage the polling
 thread.
 These properties are :
\end_layout

\begin_layout Itemize
polled_cmd to memorize the name of the device polled command
\end_layout

\begin_layout Itemize
polled_attr to memorize the name of the device polled attribute
\end_layout

\begin_layout Itemize
non_auto_polled_cmd to memorize the name of the command which shoule not
 be polled automatically at the first request
\end_layout

\begin_layout Itemize
non_auto_polled_attr to memorize the name of the attribute which should
 not be polled automatically at the first request
\end_layout

\begin_layout Standard
You don't have to change these properties values by yourself.
 They are automatically created/modified/deleted by Tango core classes.
\end_layout

\begin_layout Subsection
The device logging
\end_layout

\begin_layout Standard
The Tango Logging Service (TLS) uses device properties to control device
 logging at startup (static configuration).
 These properties are described in the following table 
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Property name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
property rule
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
default value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logging_level
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial device logging level
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
WARN
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logging_target
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial device logging target
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No default
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logging_rft
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Logging rolling file threshold
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20 Mega bytes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logging_path
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Logging file path
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
/tmp/tango-<logging name> or
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C:/tango-<logging name> (Windows)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Itemize
The logging_level
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
logging-level
\end_layout

\end_inset

 property controls the initial logging level of a device.
 Its set of possible values is: "OFF", "FATAL", "ERROR", "WARN", "INFO"
 or "DEBUG".
 This property is overwritten by the verbose command line option (-v).
\end_layout

\begin_layout Itemize
The logging_target
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
logging-target
\end_layout

\end_inset

 property is a multi-valued property containing the initial target list.
 Each entry must have the following format: target_type::target_name (where
 target_type is one of the supported target types and target_name, the name
 of the target).
 Supported target types are: 
\emph on
console
\emph default
, 
\emph on
file
\emph default
 and 
\emph on
device
\emph default
.
 For a device target, target_name must contain the name of a log consumer
 device (as defined in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tango-log-consumer"

\end_inset

).
 For a file target, target_name is the name of the file to log to.
 If omitted the device's name is used to build the file name (domain_family_memb
er.log).
 Finally, target_name is ignored in the case of a console target.
 The TLS does not report any error occurred while trying to setup the initial
 targets.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Logging_target property example : 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

logging_target = [ "console", "file", "file::/home/me/mydevice.log", "device::tmp
/log/1"]
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

In this case, the device will automatically logs to the standard output,
 to its default file (which is something like domain_family_member.log),
 to a file named mydevice.log and located in /home/me.
 Finally, the device logs are also sent to a log consumer device named tmp/log/1.
 
\end_layout

\end_deeper
\begin_layout Itemize
The logging_rft
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
logging-rft
\end_layout

\end_inset

 property specifies the rolling file threshold (rft), of the device's file
 targets.
 This threshold is expressed in Kb.
 When the size of a log file reaches the so-called rolling-file-threshold
 (rft), it is backuped as "
\emph on
current_log_file_name
\emph default
" + "
\emph on
_1
\emph default
" and a new current_log_file_name is opened.
 Obviously, there is only one backup file at a time (i.e.
 any existing backup is destroyed before the current log file is backuped).
 The default threshold is 20 Mb, the minimum is 500 Kb and the maximum is
 1000 Mb.
\end_layout

\begin_layout Itemize
The logging_path
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
logging-path
\end_layout

\end_inset

 property overwrites the TANGO_LOG_PATH
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TANGO-LOG-PATH
\end_layout

\end_inset

 environment variable.
 This property can only be applied to a DServer class device and has no
 effect on other devices.
\end_layout

\begin_layout Section
Device attribute
\end_layout

\begin_layout Standard
Attribute are configured with two kind of parameters: Parameters hard-coded
 in source code and modifiable parameters
\end_layout

\begin_layout Subsection
Hard-coded device attribute parameters
\end_layout

\begin_layout Standard
Seven attribute parameters are defined at attribute
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
attribute
\end_layout

\end_inset

 creation time in the Tango class source code.
 Obviously, these parameters are not modifiable except with a new source
 code compilation.
 These parameters are 
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
data_type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute data type
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
data_format
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute data format
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
writable
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
writable
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute read/write type
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max_dim_x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum X dimension
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max_dim_y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum Y dimension
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
writable_attr_name
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
writable-attr-name
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Associated write attribute
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
level
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
level
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute display level
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
root_attr_name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Root attribute name
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Subsubsection
The Attribute data type
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
data-type
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Thirteen data types are supported.
 These data types are
\end_layout

\begin_layout Itemize
Tango::DevBoolean 
\end_layout

\begin_layout Itemize
Tango::DevShort
\end_layout

\begin_layout Itemize
Tango::DevLong
\end_layout

\begin_layout Itemize
Tango::DevLong64
\end_layout

\begin_layout Itemize
Tango::DevFloat
\end_layout

\begin_layout Itemize
Tango::DevDouble
\end_layout

\begin_layout Itemize
Tango::DevUChar
\end_layout

\begin_layout Itemize
Tango::DevUShort
\end_layout

\begin_layout Itemize
Tango::DevULong
\end_layout

\begin_layout Itemize
Tango::DevULong64
\end_layout

\begin_layout Itemize
Tango::DevString
\end_layout

\begin_layout Itemize
Tango::DevState
\end_layout

\begin_layout Itemize
Tango::DevEncoded
\end_layout

\begin_layout Subsubsection
The attribute data format
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
data-format
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Three data format are supported for attribute
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Format
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::SCALAR
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
SCALAR
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The attribute value is a single number
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::SPECTRUM
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
SPECTRUM
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The attribute value is a one dimension number
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::IMAGE
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
IMAGE
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The attribute value is a two dimension number
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Subsubsection
The max_dim_x
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
max-dim-x
\end_layout

\end_inset

 and max_dim_y
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
max-dim-y
\end_layout

\end_inset

 parameters
\end_layout

\begin_layout Standard
These two parameters defined the maximum size for attributes of the SPECTRUM
 and IMAGE data format.
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
data format
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max_dim_x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max_dim_y
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::SCALAR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::SPECTRUM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User Defined
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::IMAGE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User Defined
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User Defined
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
For attribute of the Tango::IMAGE data format, all the data are also returned
 in a one dimension array.
 The first array is value[0],[0], array element X is value[0],[X-1], array
 element X+1 is value[1][0] and so forth.
\end_layout

\begin_layout Subsubsection
The attribute read/write type
\end_layout

\begin_layout Standard
Tango supports four kind of read/write attribute which are :
\end_layout

\begin_layout Itemize
Tango::READ
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
READ
\end_layout

\end_inset

 for read only attribute
\end_layout

\begin_layout Itemize
Tango::WRITE
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
WRITE
\end_layout

\end_inset

 for writable attribute
\end_layout

\begin_layout Itemize
Tango::READ_WRITE
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
READ-WRITE
\end_layout

\end_inset

 for attribute which can be read and write
\end_layout

\begin_layout Itemize
Tango::READ_WITH_WRITE
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
READ-WITH-WRITE
\end_layout

\end_inset

 for a readable attribute associated to a writable attribute (For a power
 supply device, the current really generated is not the wanted current.
 To handle this, two attributes are defined which are 
\emph on
generated_current
\emph default
 and 
\emph on
wanted_current
\emph default
.
 The 
\emph on
wanted_current
\emph default
 is a Tango::WRITE attribute.
 When the 
\emph on
generated_current
\emph default
 attribute is read, it is very convenient to also get the 
\emph on
wanted_current
\emph default
 attribute.
 This is exactly what the Tango::READ_WITH_WRITE attribute is doing)
\end_layout

\begin_layout Standard
When read, attribute values are always returned within an array even for
 scalar attribute.
 The length of this array and the meaning of its elements is detailed in
 the following table for scalar attribute.
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Array length
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Array[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Array[1]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::READ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::WRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Last write value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::READ_WRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Last write value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::READ_WITH_WRITE 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Associated attributelast write value
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
When a spectrum or image attribute is read, it is possible to code the device
 class in order to send only some part of the attribute data (For instance
 only a Region Of Interest for an image) but never more than what is defined
 by the attribute configuration parameters max_dim_x and max_dim_y.
 The number of data sent is also transferred with the data and is named
 
\series bold
dim_x
\series default

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
dim-x
\end_layout

\end_inset

 and 
\series bold
dim_y
\series default

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
dim-y
\end_layout

\end_inset

.
 When a spectrum or image attribute is written, it is also possible to send
 only some of the attribute data but always less than max_dim_x for spectrum
 and max_dim_x * max_dim_y for image.
 The following table describe how data are returned for spectrum attribute.
 dim_x is the data size sent by the server when the attribute is read and
 dim_x_w is the data size used during the last attribute write call.
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Array length
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Array[0->dim_x-1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Array[dim_x -> dim_x + dim_x_w -1]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::READ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dim_x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read values
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::WRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dim_x_w
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Last write values
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::READ_WRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dim_x + dim_x_w
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Last write values
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::READ_WITH_WRITE 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dim_x + dim_x_w
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Associated attributelast write values
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
The following table describe how data are returned for image attribute.
 dim_r is the data size sent by the server when the attribute is read (dim_x
 * dim_y) and dim_w is the data size used during the last attribute write
 call (dim_x_w * dim_y_w).
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Array length
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Array[0->dim_r-1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Array[dim_r-> dim_r + dim_w -1]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::READ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dim_r
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read values
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::WRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dim_w
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Last write values
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::READ_WRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dim_r + dim_w
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Last write values
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::READ_WITH_WRITE 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dim_r + dim_w
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Associated attributelast write values
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
Until a write operation has been performed, the last write value is initialized
 to 
\emph on
0
\emph default
 for scalar attribute of the numeriacal type, to 
\emph on
"Not Initialised"
\emph default
 for scalar string attribute and to 
\emph on
true
\emph default
 for scalar boolean attribute.
 For spectrum or image attribute, the last write value is initialized to
 an array of one element set to 
\emph on
0
\emph default
 for numerical type, to an array of one element set to 
\emph on
true
\emph default
 for boolean attribute and to an array of one element set to "
\emph on
Not initialized
\emph default
" for string attribute
\end_layout

\begin_layout Subsubsection
The associated write attribute parameter
\end_layout

\begin_layout Standard
This parameter has a meaning only for attribute with a Tango::READ_WITH_WRITE
 read/write type.
 This is the name of the associated write attribute.
\end_layout

\begin_layout Subsubsection
The attribute display level
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
level
\end_layout

\end_inset

 parameter
\begin_inset CommandInset label
LatexCommand label
name "display level"

\end_inset


\end_layout

\begin_layout Standard
This parameter is only an help for graphical application.
 It is a C++ enumeration starting at 0.
 The code associated with each attribute display level is defined in the
 following table (Tango::DispLevel
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
DispLevel
\end_layout

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::OPERATOR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::EXPERT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
This parameter allows a graphical application to support two types of operation
 :
\end_layout

\begin_layout Itemize
An operator mode for day to day operation
\end_layout

\begin_layout Itemize
An expert mode when tuning is necessary
\end_layout

\begin_layout Standard
According to this parameter, a graphical application knows if the attribute
 is for the operator mode or for the expert mode.
\end_layout

\begin_layout Subsubsection
The root attribute
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout

\series medium
root-attribute
\end_layout

\end_inset

 name parameter
\end_layout

\begin_layout Standard
In case the attribute is a forwarded one, this parameter is the name of
 the associated root attribute.
 In case of classical attribute, this string is set to "Not specified".
\end_layout

\begin_layout Subsection
Modifiable attribute parameters
\end_layout

\begin_layout Standard
Each attribute has a configuration set of 20 modifiable parameters.
 These can be grouped in three different purposes:
\end_layout

\begin_layout Enumerate
General purpose parameters
\end_layout

\begin_layout Enumerate
Alarm related parameters
\end_layout

\begin_layout Enumerate
Event related parameters
\end_layout

\begin_layout Subsubsection
General purpose parameters
\end_layout

\begin_layout Standard
Eight attribute parameters are modifiable at run-time via a device call
 or via the property database.
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
label
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute label
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute unit
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
standard_unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Conversion factor to MKSA unit
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
display_unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The attribute unit in a printable form
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
format
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
How to print attribute value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
min_value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute min value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max_value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute max value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
enum_labels
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enumerated labels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
memorized
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute memorization
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
The 
\series bold
description
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
description
\end_layout

\end_inset


\series default
 parameter describes the attribute.
 The 
\series bold
label
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
label
\end_layout

\end_inset


\series default
 parameter is used by graphical application to display a label when this
 attribute is used in a graphical application.
 The 
\series bold
unit
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
unit
\end_layout

\end_inset


\series default
 parameter is the attribute value unit.
 The 
\series bold
standard_unit
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
standard-unit
\end_layout

\end_inset


\series default
 parameter is the conversion factor to get attribute value in MKSA units.
 Even if this parameter is a number, it is returned as a string by the device
 
\emph on
get_attribute_config
\emph default
 call.
 The 
\series bold
display_unit
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
display-unit
\end_layout

\end_inset


\series default
 parameter is the string used by graphical application to display attribute
 unit to application user.
 The 
\series bold
enum_labels
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout

\series medium
enum_labels
\end_layout

\end_inset


\series default
 parameter is defined only for attribute of the DEV_ENUM data type.
 This is a vector of strings with one string for each enumeration label.
 It is an ordered list.
\end_layout

\begin_layout Paragraph
The format
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
format
\end_layout

\end_inset

 attribute parameter
\end_layout

\begin_layout Standard
This parameter specifies how the attribute value should be printed.
 It is not valid for string attribute.
 This format is a string of C++ streams manipulators separated by the 
\series bold
;
\series default
 character.
 The supported manipulators are :
\end_layout

\begin_layout Itemize
fixed
\end_layout

\begin_layout Itemize
scientific
\end_layout

\begin_layout Itemize
uppercase
\end_layout

\begin_layout Itemize
showpoint
\end_layout

\begin_layout Itemize
showpos
\end_layout

\begin_layout Itemize
setprecision()
\end_layout

\begin_layout Itemize
setw()
\end_layout

\begin_layout Standard
Their definition are the same than for C++ streams.
 An example of format parameter is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

scientific;uppercase;setprecision(3)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset

.
 A class called Tango::AttrManip has been written to handle this format
 string.
 Once the attribute format string has been retrieved from the device, its
 value can be printed with 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

cout << Tango::AttrManip(format) << value << endl;
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset

.
\end_layout

\begin_layout Paragraph
The min_value
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
min-value
\end_layout

\end_inset

 and max_value
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
max-value
\end_layout

\end_inset

 parameters
\end_layout

\begin_layout Standard
These two parameters have a meaning only for attribute of the Tango::WRITE
 read/write type and for numerical data types.
 Trying to set the value of an attribute to something less than or equal
 to the min_value parameter is an error.
 Trying to set the value of the attribute to something more or equal to
 the max_value parameter is also an error.
 Even if these parameters are numbers, they are returned as strings by the
 device 
\emph on
get_attribute_config()
\emph default
 call.
 
\end_layout

\begin_layout Standard
These two parameters have no meaning for attribute with data type DevString,
 DevBoolean or DevState.
 An exception is thrown in case the user try to set them for attribute of
 these 3 data types.
\end_layout

\begin_layout Paragraph
The memorized
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout

\series medium
memorized
\end_layout

\end_inset

 attribute parameter
\end_layout

\begin_layout Standard
This parameter describes the attribute memorization.
 It is an enumeration with the following values:
\end_layout

\begin_layout Itemize
NOT_KNOWN : The device is too old to return this information.
\end_layout

\begin_layout Itemize
NONE : The attribute is not memorized
\end_layout

\begin_layout Itemize
MEMORIZED : The attribute is memorized
\end_layout

\begin_layout Itemize
MEMORIZED_WRITE_INIT : The attribute is memorized and the memorized value
 is applied at device initialization time.
\end_layout

\begin_layout Subsubsection
The alarm related configuration parameters
\end_layout

\begin_layout Standard
Six alarm related attribute parameters are modifiable at run-time via a
 device call or via the property database.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
min_alarm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute low level alarm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max_alarm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute high level alarm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
min_warning
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute low level warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max_warning
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute high level warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
delta_t
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
delta time for RDS alarm (mS)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
delta_val
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
delta value for RDS alarm (absolute)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset

These parameters have no meaning for attribute with data type DevString,
 DevBoolean or DevState.
 An exception is thrown in case the user try to set them for attribute of
 these 3 data types.
\end_layout

\begin_layout Paragraph
The min_alarm
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
min-alarm
\end_layout

\end_inset

 and max_alarm
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
max-alarm
\end_layout

\end_inset

 parameters
\end_layout

\begin_layout Standard
These two parameters have a meaning only for attribute of the Tango::READ,
 Tango::READ_WRITE and Tango::READ_WITH_WRITE read/write type and for numerical
 data type.
 When the attribute is read, if its value is something less than or equal
 to the min_alarm parameter or if it is something more or equal to the max_alarm
 parameter, the attribute quality factor will be set to Tango::ATTR_ALARM
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ATTR-ALARM
\end_layout

\end_inset

 and if the device state is Tango::ON, it is switched to Tango::ALARM
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ALARM
\end_layout

\end_inset

.
 Even if these parameters are numbers, they are returned as strings by the
 device 
\emph on
get_attribute_config()
\emph default
 call.
\end_layout

\begin_layout Paragraph
The min_warning
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
min-warning
\end_layout

\end_inset

 and max_warning
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
max-warning
\end_layout

\end_inset

 parameters
\end_layout

\begin_layout Standard
These two parameters have a meaning only for attribute of the Tango::READ,
 Tango::READ_WRITE and Tango::READ_WITH_WRITE read/write type and for numerical
 data type.
 When the attribute is read, if its value is something less than or equal
 to the min_warning parameter or if it is something more or equal to the
 max_warning parameter, the attribute quality factor will be set to Tango::ATTR_
WARNING
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ATTR-WARNING
\end_layout

\end_inset

 and if the device state is Tango::ON, it is switched to Tango::ALARM
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ALARM
\end_layout

\end_inset

.
 Even if these parameters are numbers, they are returned as strings by the
 device 
\emph on
get_attribute_config()
\emph default
 call.
\end_layout

\begin_layout Paragraph
The delta_t
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
delta-t
\end_layout

\end_inset

 and delta_val
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
delta-val
\end_layout

\end_inset

 parameters
\end_layout

\begin_layout Standard
These two parameters have a meaning only for attribute of the Tango::READ_WRITE
 and Tango::READ_WITH_WRITE read/write type and for numerical data type.
 They specify if and how the RDS
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
RDS
\end_layout

\end_inset

 alarm is used.
 When the attribute is read, if the difference between its read value and
 the last written value is something more than or equal to the delta_val
 parameter and if at least delta_val milli seconds occurs since the last
 write operation, the attribute quality factor will be set to Tango::ATTR_ALARM
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ATTR-ALARM
\end_layout

\end_inset

 and if the device state is Tango::ON, it is switched to Tango::ALARM
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ALARM
\end_layout

\end_inset

.
 Even if these parameters are numbers, they are returned as strings by the
 device 
\emph on
get_attribute_config()
\emph default
 call.
\end_layout

\begin_layout Subsubsection
The event related configuration parameters
\end_layout

\begin_layout Standard
Six event
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
event
\end_layout

\end_inset

 related attribute parameters are modifiable at run-time via a device call
 or via the property database.
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rel_change
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Relative change triggering change event
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
abs_change
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Absolute change triggering change event
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
period 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Period for periodic event
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
archive_rel_change 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Relative change for archive event
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
archive_abs_change
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Absolute change for archive event
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
archive_period 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Period for change archive event
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Paragraph
The rel_change and abs_change parameters
\end_layout

\begin_layout Standard
Rel_change
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
rel-change
\end_layout

\end_inset

 is a property with a maximum of 2 values (comma separated).
 It specifies the increasing and decreasing relative change of the attribute
 value (w.r.t.
 the value of the previous change event) which will trigger the event.
 If the attribute is a spectrum or an image then a change event is generated
 if any one of the attribute value's satisfies the above criterium.
 It's the absolute value of these values which is taken into account.
 If only one value is specified then it is used for the increasing and decreasin
g change.
\end_layout

\begin_layout Standard
Abs_change
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
abs-change
\end_layout

\end_inset

 is a property of maximum 2 values (comma separated).
 It specifies the increasing and decreasing absolute change of the attribute
 value (w.r.t the value of the previous change event) which will trigger the
 event.
 If the attribute is a spectrum or an image then a change event is generated
 if any one of the attribute value's satisfies the above criterium.
 If only one value is specified then it is used for the increasing and decreasin
g change.
 If no values are specified then the relative change is used.
\end_layout

\begin_layout Paragraph
The periodic period
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
period
\end_layout

\end_inset

 parameter
\end_layout

\begin_layout Standard
The minimum time between events (in milliseconds).
 If no property is specified then a default value of 1 second is used.
\end_layout

\begin_layout Paragraph
The archive_rel_change
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
archive-rel-change
\end_layout

\end_inset

, archive_abs_change
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
archive-abs-change
\end_layout

\end_inset

 and archive_period
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
archive-period
\end_layout

\end_inset

 parameters
\end_layout

\begin_layout Standard
archive_rel_change is an array property of maximum 2 values which specifies
 the positive and negative relative change w.r.t.
 the previous attribute value which will trigger the event.
 If the attribute is a spectrum or an image then an archive event is generated
 if any one of the attribute value's satisfies the above criterium.
 If only one property is specified then it is used for the positive and
 negative change.
 If no properties are specified then a default fo +-10% is used
\end_layout

\begin_layout Standard
archive_abs_change is an array property of maximum 2 values which specifies
 the positive and negative absolute change w.r.t the previous attribute value
 which will trigger the event.
 If the attribute is a spectrum or an image then an archive event is generated
 if any one of the attribute value's satisfies the above criterium.
 If only one property is specified then it is used for the positive and
 negative change.
 If no properties are specified then the relative change is used.
\end_layout

\begin_layout Standard
archive_period is the minimum time between archive events (in milliseconds).
 If no property is specified, no periodic archiving events are send.
\end_layout

\begin_layout Subsection
Setting modifiable attribute parameters
\end_layout

\begin_layout Standard
A default value is given to all modifiable attribute parameters by the Tango
 core classes.
 Nevertheless, it is possible to modify these values in source code at attribute
 creation time or via the database.
 Values retrieved from the database have a higher priority than values given
 at attribute creation time.
 The attribute parameters are therefore initialized from:
\end_layout

\begin_layout Enumerate
The Database
\end_layout

\begin_layout Enumerate
If nothing in database, from the Tango class default
\end_layout

\begin_layout Enumerate
If nothing in database nor in Tango class default, from the library default
 value
\end_layout

\begin_layout Standard
The default value set by the Tango core library are
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="21" columns="3">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Library default value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"No description"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
label
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
attribute name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
One empty string
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
general
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
standard_unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"No standard unit"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
purpose
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
display_unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"No display unit"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
format
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6 characters with 2 decimal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
min_value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"Not specified"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max_value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"Not specified"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
min_alarm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"Not specified"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max_alarm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"Not specified"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
alarm 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
min_warning
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"Not specified"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
parameters
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max_warning
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"Not specified"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
delta_t
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"Not specified"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
delta_val
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"Not specified"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rel_change
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"Not specified"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
abs_change
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"Not specified"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
event
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
period
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000 (mS)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
parameters
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
archive_rel_change
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"Not specified"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
archive_abs_change
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"Not specified"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
archive_period
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"Not specified"
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
It is possible to set modifiable parameters via the database at two levels
 :
\end_layout

\begin_layout Enumerate
At class level
\end_layout

\begin_layout Enumerate
At device level.
 Each device attribute have all its modifiable parameters sets to the value
 defined at class level.
 If the setting defined at class level is not correct for one device, it
 is possible to re-define it.
\end_layout

\begin_layout Standard
If we take the example of a class called 
\emph on
BumperPowerSupply
\emph default
 with three devices called 
\emph on
sr/bump/1
\emph default
, 
\emph on
sr/bump/2
\emph default
 and 
\emph on
sr/bump/3
\emph default
 and one attribute called 
\emph on
wanted_current
\emph default
.
 For the first two bumpers, the max_value is equal to 500.
 For the third one, the max_value is only 400.
 If the max_value parameter is defined at class level with the value 500,
 all devices will have 500 as max_value for the 
\emph on
wanted_current
\emph default
 attribute.
 It is necessary to re-defined this parameter at device level in order to
 have the max_value for device sr/bump/3 set to 400.
\end_layout

\begin_layout Standard
For the description, label, unit, standard_unit, display_unit and format
 parameters, it is possible to return them to their default value by setting
 them to an empty string.
\end_layout

\begin_layout Subsection
Resetting modifiable attribute parameters
\end_layout

\begin_layout Standard
It is possible to reset attribute parameters to their default value at any
 moment.
 This could be done via the network call available through the DeviceProxy::set_
attribute_config() method family.
 This call takes attribute parameters as strings.
 The following table describes which string has to be used to reset attribute
 parameters to their default value.
 In this table, the user default are the values given within Pogo in the
 "Properties" tab of the attribute edition window (or in in Tango class
 code using the Tango::UserDefaultAttrProp class).
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input string
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Action
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"Not specified"
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reset to 
\series bold
library
\series default
 default
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"" (empty string)
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reset to 
\series bold
user
\series default
 default if any.
 Otherwise, reset to 
\series bold
library
\series default
 default
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"NaN"
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reset to Tango 
\series bold
class
\series default
 default if any
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Otherwise, reset to 
\series bold
user
\series default
 default (if any) or to 
\series bold
library
\series default
 default
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
Let's take one exemple: For one attribute belonging to a device, we have
 the following attribute parameters:
\begin_inset VSpace 0.3cm
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Def.
 class
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Def.
 user
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Def.
 lib
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
standard_unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No standard unit
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
min_value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not specified
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max_value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
50
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not specified
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rel_change
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not specified
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
The string "Not specified" sent to each attribute parameter will set attribute
 parameter value to "No standard unit" for standard_unit, "Not specified"
 for min_value, "Not specified" for max_value and "Not specified" as well
 for rel_change.
 The empty string sent to each attribute parameter will result with "No
 stanadard unit" for standard_unit, 5 for min_value, "Not specified" for
 max_value and 10 for rel_change.
 The string "NaN" will give "No standard unit" for standard_unit, 5 for
 min_value, 50 for max_value and 5 for rel_change.
\end_layout

\begin_layout Standard
C++ specific: Instead of the string "Not specified" and "NaN", the preprocessor
 define
\series bold
 AlrmValueNotSpec
\series default
 and 
\series bold
NotANumber
\series default
 can be used.
\end_layout

\begin_layout Section
Device pipe
\end_layout

\begin_layout Standard
Pipe are configured with two kind of parameters: Parameters hard-coded in
 source code and modifiable parameters
\end_layout

\begin_layout Subsection
Hard-coded device pipe parameters
\end_layout

\begin_layout Standard
Three pipe parameters are defined at pipe
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
pipe
\end_layout

\end_inset

 creation time in the Tango class source code.
 Obviously, these parameters are not modifiable except with a new source
 code compilation.
 These parameters are 
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pipe name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
writable
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
writable
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pipe read/write type
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
disp_level
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
disp_level
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pipe display level
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
The pipe read/write type.
 
\end_layout

\begin_layout Standard
Tango supports two kinds of read/write pipe which are :
\end_layout

\begin_layout Itemize
Tango::PIPE_READ
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
READ
\end_layout

\end_inset

 for read only pipe
\end_layout

\begin_layout Itemize
Tango::PIPE_READ_WRITE
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
READ-WRITE
\end_layout

\end_inset

 for pipe which can be read and written
\end_layout

\begin_layout Subsubsection
The pipe display level
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
level
\end_layout

\end_inset

 parameter
\end_layout

\begin_layout Standard
This parameter is only an help for graphical application.
 It is a C++ enumeration starting at 0.
 The code associated with each pipe display level is defined in the following
 table (Tango::DispLevel
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
DispLevel
\end_layout

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::OPERATOR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::EXPERT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
This parameter allows a graphical application to support two types of operation
 :
\end_layout

\begin_layout Itemize
An operator mode for day to day operation
\end_layout

\begin_layout Itemize
An expert mode when tuning is necessary
\end_layout

\begin_layout Standard
According to this parameter, a graphical application knows if the pipe is
 for the operator mode or for the expert mode.
\end_layout

\begin_layout Subsection
Modifiable pipe parameters
\end_layout

\begin_layout Standard
Each pipe has a configuration set of 2 modifiable parameters.
 These parameters are modifiable at run-time via a device call or via the
 property database.
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pipe description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
label
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pipe label
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
The 
\series bold
description
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
description
\end_layout

\end_inset


\series default
 parameter describes the pipe.
 The 
\series bold
label
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
label
\end_layout

\end_inset


\series default
 parameter is used by graphical application to display a label when this
 pipe is used in a graphical application.
\end_layout

\begin_layout Subsection
Setting modifiable pipe parameters
\end_layout

\begin_layout Standard
A default value is given to all modifiable pipe parameters by the Tango
 core classes.
 Nevertheless, it is possible to modify these values in source code at pipe
 creation time or via the database.
 Values retrieved from the database have a higher priority than values given
 at pipe creation time.
 The pipe parameters are therefore initialized from:
\end_layout

\begin_layout Enumerate
The Database
\end_layout

\begin_layout Enumerate
If nothing in database, from the Tango class default
\end_layout

\begin_layout Enumerate
If nothing in database nor in Tango class default, from the library default
 value
\end_layout

\begin_layout Standard
The default value set by the Tango core library are
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Library default value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
"No description"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
label
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pipe name
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
It is possible to set modifiable parameters via the database at two levels
 :
\end_layout

\begin_layout Enumerate
At class level
\end_layout

\begin_layout Enumerate
At device level.
 Each device pipe have all its modifiable parameters sets to the value defined
 at class level.
 If the setting defined at class level is not correct for one device, it
 is possible to re-define it.
\end_layout

\begin_layout Standard
This is the same principle than the one used for attribute configuration
 modifiable parameters.
\end_layout

\begin_layout Subsection
Resetting modifiable pipe parameters
\end_layout

\begin_layout Standard
It is possible to reset pipe parameters to their default value at any moment.
 This could be done via the network call available through the DeviceProxy::set_
pipe_config() method family.
 It uses the same principle than the one used for resetting modifiable attribute
 pipe parameters.
 Refer to their documentation if you want to know details about this feature.
\end_layout

\begin_layout Section
Device class parameter
\end_layout

\begin_layout Standard
A device documentation
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
documentation
\end_layout

\end_inset

 field is also defined at Tango device class level.
 It is defined as Tango device class level because each device belonging
 to a Tango device class should have the same behaviour and therefore the
 same documentation.
 This field is store in the DeviceClass class.
 It is possible to set this field via a class property.
 This property name is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

class name->doc_url
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center} 
\end_layout

\end_inset

and is retrieved when instance of the DeviceClass object is created.
 A default value is defined for this field.
\end_layout

\begin_layout Section
The device black box
\end_layout

\begin_layout Standard
This black box
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
black-box
\end_layout

\end_inset

 is a help tool to ease debugging session for a running device server.
 The TANGO core software records every device request in this black box.
 A tango client is able to retrieve the black box contents with a specific
 CORBA
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
CORBA
\end_layout

\end_inset

 operation availabble for every device.
 Each black box entry is returned as a string with the following information
 :
\end_layout

\begin_layout Itemize
The date where the request has been executed by the device.
 The date format is dd/mm/yyyy hh24:mi:ss:SS (The last field is the second
 hundredth number).
\end_layout

\begin_layout Itemize
The type of CORBA requests.
 In case of attributes, the name of the requested attribute is returned.
 In case of operation, the operation type is returned.
 For 
\begin_inset Quotes eld
\end_inset

command_inout
\begin_inset Quotes erd
\end_inset

 operation, the command name is returned.
\end_layout

\begin_layout Itemize
The client host name
\end_layout

\begin_layout Section
Automatically added commands
\end_layout

\begin_layout Standard
As already mentionned in this documentation, each Tango device supports
 at least three commands which are State
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
State
\end_layout

\end_inset

, Status
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Status
\end_layout

\end_inset

 and Init
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Init
\end_layout

\end_inset

.
 The following array details command input and output data type
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input data type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output data type
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
State
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevState
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Status
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevString
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Init
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Subsection
The State command
\end_layout

\begin_layout Standard
This command gets the device state (stored in its 
\emph on
device_state
\emph default
 data member) and returns it to the caller.
 The device state is a variable of the Tango_DevState type (packed into
 a CORBA Any object when it is returned by a command)
\end_layout

\begin_layout Subsection
The Status command
\end_layout

\begin_layout Standard
This command gets the device status (stored in its 
\emph on
device_status
\emph default
 data member) and returns it to the caller.
 The device status is a variable of the string type.
\end_layout

\begin_layout Subsection
The Init command
\end_layout

\begin_layout Standard
This commands re-initialise a device keeping the same network connection.
 After an Init command executed on a device, it is not necessary for client
 to re-connect to the device.
 This command first calls the device 
\emph on
delete_device()
\emph default
 method and then execute its 
\emph on
init_device()
\emph default
 method.
 For C++ device server, all the memory allocated in the 
\emph on
init_device()
\emph default
 method must be freed in the 
\emph on
delete_device()
\emph default
 method.
 The language device desctructor automatically calls the 
\emph on
delete_device()
\emph default
 method.
\end_layout

\begin_layout Section
DServer
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
DServer
\end_layout

\end_inset

 class device commands
\end_layout

\begin_layout Standard
As already explained in 
\begin_inset CommandInset ref
LatexCommand ref
reference "DServer_class"

\end_inset

, each device server process has its own Tango device.
 This device supports the three commands previously described plus 32 commands
 which are DevRestart
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
DevRestart
\end_layout

\end_inset

, RestartServer
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
RestartServer
\end_layout

\end_inset

, QueryClass
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
QueryClass
\end_layout

\end_inset

, QueryDevice
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
QueryDevice
\end_layout

\end_inset

, Kill
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Kill
\end_layout

\end_inset

, QueryWizardClassProperty
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
QueyWizardClassProperty
\end_layout

\end_inset

, QueryWizardDevProperty
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
QueryWizardDevProperty
\end_layout

\end_inset

, QuerySubDevice
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
QuerySubDevice
\end_layout

\end_inset

, the polling related commands which are StartPolling
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
StartPolling
\end_layout

\end_inset

, StopPolling
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
StopPolling
\end_layout

\end_inset

, AddObjPolling
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
AddObjPolling
\end_layout

\end_inset

, RemObjPolling
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
RemObjPolling
\end_layout

\end_inset

, UpdObjPollingPeriod
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
UpdObjPollingPeriod
\end_layout

\end_inset

, PolledDevice
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
PolledDevice
\end_layout

\end_inset

 and DevPollStatus
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
DevPollStatus
\end_layout

\end_inset

, the device locking related commands which are LockDevice
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
LockDevice
\end_layout

\end_inset

, UnLockDevice
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
UnLockDevice
\end_layout

\end_inset

, ReLockDevices
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ReLockDevices
\end_layout

\end_inset

 and DevLockStatus
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
DevLockStatus
\end_layout

\end_inset

, the event related commands called EventSubscriptionChange
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
EventSubscriptionChange
\end_layout

\end_inset

, ZmqEventSubscriptionChange
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ZmqEventSubscriptionChange
\end_layout

\end_inset

 and EventConfirmSubscription
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
EventConfirmSubscription
\end_layout

\end_inset

 and finally the logging related commands which are AddLoggingTarget
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
AddLoggingTarget
\end_layout

\end_inset

, RemoveLoggingTarget
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
RemoveLoggingTarget
\end_layout

\end_inset

, GetLoggingTarget
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
GetLoggingTarget
\end_layout

\end_inset

, GetLoggingLevel
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
GetLoggingLevel
\end_layout

\end_inset

, SetLoggingLevel
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
SetLoggingLevel
\end_layout

\end_inset

, StopLogging
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
StopLogging
\end_layout

\end_inset

 and StartLogging
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
StartLogging
\end_layout

\end_inset

.
 The following table give all commands input and output data types
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="33" columns="3">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="middle" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input data type 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output data type
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
State
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevState
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Status
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevString
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Init
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DevRestart
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevString
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RestartServer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
QueryClass
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
QueryDevice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kill
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
QueryWizardClassProperty
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevString
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
QueryWizardDevProperty
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevString
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
QuerySubDevice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
StartPolling
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
StopPolling
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AddObjPolling
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarLongStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RemObjPolling
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UpdObjPollingPeriod
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarLongStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PolledDevice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DevPollStatus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevString
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LockDevice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarLongStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UnLockDevice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarLongStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevLong
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ReLockDevices
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DevLockStatus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevString
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarLongStringArray
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
EventSubscribeChange
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevLong
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ZmqEventSubscriptionChange
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarLongStringArray
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
EventConfirmSubscription
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AddLoggingTarget 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RemoveLoggingTarget 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetLoggingTarget 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevString
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GetLoggingLevel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarLongStringArray
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SetLoggingLevel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarLongStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
StopLogging
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
StartLogging
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
void
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
The device description field is set to 
\begin_inset Quotes eld
\end_inset

A device server device
\begin_inset Quotes erd
\end_inset

.
 Device server started with the -file command line option also supports
 a command called QueryEventChannelIOR
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
QueryEventChannelIOR
\end_layout

\end_inset

.
 This command is used interanally by the Tango kernel classes when the event
 system is used with device server using database on file.
\end_layout

\begin_layout Subsection
The State command
\end_layout

\begin_layout Standard
This device state is always set to ON
\end_layout

\begin_layout Subsection
The Status command
\end_layout

\begin_layout Standard
This device status is always set to 
\begin_inset Quotes eld
\end_inset

The device is ON
\begin_inset Quotes erd
\end_inset

 followed by a new line character and a string describing polling thread
 status.
 This string is either 
\begin_inset Quotes eld
\end_inset

The polling is OFF
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

The polling is ON
\begin_inset Quotes erd
\end_inset

 according to polling state.
\end_layout

\begin_layout Subsection
The DevRestart command
\end_layout

\begin_layout Standard
The DevRestart command restart a device.
 The name of the device to be re-started is the command input parameter.
 The command destroys the device by calling its destructor and re-create
 it from its constructor.
\end_layout

\begin_layout Subsection
The RestartServer command
\end_layout

\begin_layout Standard
The DevRestartServer command restarts all the device pattern(s) embedded
 in the device server process.
 Therefore, all the devices implemented in the server process are destroyed
 and re-built
\begin_inset Foot
status open

\begin_layout Plain Layout
Their black-box is also destroyed and re-built
\end_layout

\end_inset

.
 The network connection between client(s) and device(s) implemented in the
 device server process is destroyed and re-built.
 
\end_layout

\begin_layout Standard
Executing this command allows a complete restart of the device server without
 stopping the process.
\end_layout

\begin_layout Subsection
The QueryClass
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
QueryClass
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command returns to the client the list of Tango device class(es) embedded
 in the device server.
 It returns only class(es) implemented by the device server programmer.
 The DServer device class name (implemented by the TANGO core software)
 is not returned by this command.
\end_layout

\begin_layout Subsection
The QueryDevice
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
QueryDevice
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command returns to the client the list of device name for all the device(s)
 implemented in the device server process.
 Each device name is returned using the following syntax : 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

<class name>::<device name>
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The name of the DServer class device is not returned by this command.
\end_layout

\begin_layout Subsection
The Kill
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Kill
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command stops the device server process.
 In order that the client receives a last answer from the server, this command
 starts a thread which will after a short delay, kills the device server
 process.
\end_layout

\begin_layout Subsection
The QueryWizardClassProperty
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
QueryWizardClassProperty
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command returns the list of property(ies) defined for a class stored
 in the device server process property wizard.
 For each property, its name, a description and a default value is returned.
\end_layout

\begin_layout Subsection
The QueryWizardDevProperty
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
QueryWizardDevProperty
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command returns the list of property(ies) defined for a device stored
 in the device server process property wizard.
 For each property, its name, a description and a default value is returned.
\end_layout

\begin_layout Subsection
The QuerySubDevice
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
QuerySubDevice
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command returns the list of sub-device(s) imported by each device within
 the server.
 A sub-device is a device used ( to execute command(s) and/or to read/write
 attribute(s) ) by one of the device server process devices.
 There is one element in the returned strings array for each sub-device.
 The syntax of each string is the device name, a space and the sub-device
 name.
 In case of device server process starting threads using a sub-device, it
 is not possible to link this sub-device to any process devices.
 In such a case, the string contains only the sub-device name
\end_layout

\begin_layout Subsection
The StartPolling
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
StartPolling
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command starts the polling thread
\end_layout

\begin_layout Subsection
The StopPolling
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
StopPolling
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command stops the polling thread
\end_layout

\begin_layout Subsection
The AddObjPolling
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
AddObjPolling
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command adds a new object in the list of object(s) to be polled.
 The command input parameters are embedded within a Tango::DevVarLongStringArray
 data type with one long data and three strings.
 The input parameters are:
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command parameter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter meaning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
svalue[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Device name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
svalue[1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Object type (
\begin_inset Quotes eld
\end_inset

command
\begin_inset Quotes eld
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

attribute
\begin_inset Quotes eld
\end_inset

)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
svalue[2]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Object name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lvalue[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
polling period in mS
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
The object type string is case independent.
 The object name string (command name or attribute name) is case dependant.
 This command does not start polling if it is stopped.
 This command is not allowed in case the device is locked and the command
 requester is not the lock owner.
\end_layout

\begin_layout Subsection
The RemObjPolling
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
RemObjPolling
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command removes an object of the list of polled objects.
 The command input data type is a Tango::DevVarStringArray with three strings.
 These strings meaning are :
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
String
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Meaning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
string[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Device name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
string[1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Object type (
\begin_inset Quotes eld
\end_inset

command
\begin_inset Quotes eld
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

attribute
\begin_inset Quotes eld
\end_inset

)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
string[2]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Object name
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
The object type string is case independent.
 The object name string (command name or attribute name) is case dependant.
 This command is not allowed in case the device is locked and the command
 requester is not the lock owner.
\end_layout

\begin_layout Subsection
The UpdObjPollingPeriod
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
UpdObjPollingPeriod
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command changes the polling period for a specified object.
 The command input parameters are embedded within a Tango::DevVarLongStringArray
 data type with one long data and three strings.
 The input parameters are:
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command parameter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter meaning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
svalue[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Device name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
svalue[1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Object type (
\begin_inset Quotes eld
\end_inset

command
\begin_inset Quotes eld
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

attribute
\begin_inset Quotes eld
\end_inset

)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
svalue[2]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Object name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lvalue[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
new polling period in mS
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
The object type string is case independent.
 The object name string (command name or attribute name) is case dependant.
 This command does not start polling if it is stopped.
 This command is not allowed in case the device is locked and the command
 requester is not the lock owner.
\end_layout

\begin_layout Subsection
The PolledDevice
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
PolledDevice
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command returns the name of device which are polled.
 Each string in the Tango::DevVarStringArray returned by the command is
 a device name which has at least one command or attribute polled.
 The list is alphabetically sorted.
\end_layout

\begin_layout Subsection
The DevPollStatus
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
DevPollStatus
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command returns a polling status for a specific device.
 The input parameter is a device name.
 Each string in the Tango::DevVarStringArray returned by the command is
 the polling status for each polled device objects (command or attribute).
 For each polled objects, the polling status is :
\end_layout

\begin_layout Itemize
The object name
\end_layout

\begin_layout Itemize
The object polling period (in mS)
\end_layout

\begin_layout Itemize
The object polling ring buffer depth
\end_layout

\begin_layout Itemize
The time needed (in mS) for the last command execution or attribute reading
\end_layout

\begin_layout Itemize
The time since data in the ring buffer has not been updated.
 This allows a check of the polling thread
\end_layout

\begin_layout Itemize
The delta time between the last records in the ring buffer.
 This allows checking that the polling period is respected by the polling
 thread.
\end_layout

\begin_layout Itemize
The exception parameters in case of the last command execution or the last
 attribute reading failed.
\end_layout

\begin_layout Standard
A new line character is inserted between each piece of information.
\end_layout

\begin_layout Subsection
The LockDevice
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
LockDevice
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command locks a device for the calling process.
 The command input parameters are embedded within a Tango::DevVarLongStringArray
 data type with one long data and one string.
 The input parameters are:
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command parameter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter meaning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
svalue[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Device name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lvalue[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lock validity
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Subsection
The UnLockDevice
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
UnLockDevice
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command unlocks a device.
 The command input parameters are embedded within a Tango::DevVarLongStringArray
 data type with one long data and one string.
 The input parameters are:
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command parameter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter meaning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
svalue[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Device name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lvalue[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Force flag
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
The force flag parameter allows a client to unlock a device already locked
 by another process (for admin usage only)
\end_layout

\begin_layout Subsection
The ReLockDevices
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ReLockDevices
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command re-lock devices.
 The input argument is the list of devices to be re-locked.
 It's an error to re-lock a device which is not already locked.
\end_layout

\begin_layout Subsection
The DevLockStatus
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
DevLockStatus
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command returns a device locking status to the caller.
 Its input parameter is the device name.
 The output parameters are embedded within a Tango::DevVarLongStringArray
 data type with three strings and six long.
 These data are
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command parameter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter meaning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
svalue[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Locking string
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
svalue[1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CPP client host IP address or "Not defined"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
svalue[2]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java VM main class for Java client or "Not defined"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lvalue[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lock flag (1 if locked, 0 othterwise)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lvalue[1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CPP client host IP address or 0 for Java locker
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lvalue[2]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java locker UUID part 1or 0 for CPP locker
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lvalue[3]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java locker UUID part 2 or 0 for CPP locker
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lvalue[4]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java locker UUID part 3 or 0 for CPP locker
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lvalue[5]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java locker UUID part 4 or 0 for CPP locker
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Subsection
The EventSubscriptionChange
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
EventSubscriptionChange
\end_layout

\end_inset

 command (C++ server only)
\end_layout

\begin_layout Standard
This command is used as a piece of the "heartbeat" system between an event
 client and the device server generating the event.
 There is no reason to generate events if there is no client which has subscribe
d to it.
 It is used by the 
\emph on
DeviceProxy::subscribe_event()
\emph default
 method and one of the event thread on the client side to inform the server
 to keep on generating events for the attribute in question.
 It reloads the subscription timer with the current time.
 Events are not generated when there are no clients subscribed within the
 last 10 minutes.
 The input parameters are:
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command parameter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter meaning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
argin[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Device name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
argin[1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
argin[2]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
action ("subscribe" or "unsubsribe")
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
argin[3]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
event name ("change", "periodic", "archive","attr_conf")
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
The command output data is the simply the Tango release used by the device
 server process.
 This is necessary for compatibility reason.
\end_layout

\begin_layout Subsection
The ZmqEventSubscriptionChange
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ZmqEventSubscriptionChange
\end_layout

\end_inset

 command 
\end_layout

\begin_layout Standard
This command is used as a piece of the "heartbeat" system between an event
 client and the device server generating the event when client and/or device
 server uses Tango release 8 or above.
 There is no reason to generate events if there is no client which has subscribe
d to it.
 It is used by the 
\emph on
DeviceProxy::subscribe_event()
\emph default
 method and one of the event thread on the client side to inform the server
 to keep on generating events for the attribute in question.
 It reloads the subscription timer with the current time.
 Events are not generated when there are no clients subscribed within the
 last 10 minutes.
 The input parameters are the same than the one used for the EventSubscriptionCh
ange command.
 They are:
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command in parameter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter meaning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
argin[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Device name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
argin[1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
argin[2]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
action ("subscribe" or "unsubsribe")
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
argin[3]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
event name ("change", "periodic", "archive","attr_conf")
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
The command output parameters aer all the necessary data to build one event
 connection between a client and the device server process generating the
 events.
 This means:
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command out parameter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter meaning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
svalue[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Heartbeat ZMQ socket connect end point
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
svalue[1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event ZMQ socket connect end point
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lvalue[0]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango lib release used by device server
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lvalue[1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Device IDL release
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lvalue[2]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Subscriber HWM
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lvalue[3]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rate (Multicasting related)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lvalue[4]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
IVL (Multicasting related)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Subsection
The EventConfirmSubscription
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
EventConfirmSubscription
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command is used by client to regularly notify to device server process
 their interest in receiving events.
 If this command is not received, after a delay of 600 sec (10 mins), event(s)
 will not be sent any more.
 The input parameters for the EventConfirmSubscription command must be a
 multiple of 3.
 They are 3 parameters for each event confirmed by this command.
 Per event, these parameters are:
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command in parameter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter meaning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
argin[x]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Device name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
argin[x + 1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attribute name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
argin[x + 2]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event name
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
The AddLoggingTarget
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
AddLoggingTarget
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
This command adds one (or more) logging target(s) to the specified device(s).
 The command input parameter is an array of string logically composed of
 {device_name, target_type::target_name} groups where the elements have
 the following semantic: 
\end_layout

\begin_layout Itemize
device_name is the name of the device which logging behavior is to be controlled.
 The wildcard "*" is supported to apply the modification to all devices
 encapsulated within the device server (e.g.
 to ask all devices to log to the same device target).
\end_layout

\begin_layout Itemize
target_type::target_name: target_type is one of the supported target types
 and target_name, the name of the target.
 Supported target types are: 
\emph on
console
\emph default
, 
\emph on
file
\emph default
 and 
\emph on
device
\emph default
.
 For a device target, target_name must contain the name of a log consumer
 device (as defined in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tango-log-consumer"

\end_inset

).
 For a file target, target_name is the full path to the file to log to.
 If omitted the device's name is used to build the file name (domain_family_memb
er.log).
 Finally, target_name is ignored in the case of a console target and can
 be omitted.
\end_layout

\begin_layout Standard
This command is not allowed in case the device is locked and the command
 requester is not the lock owner.
\end_layout

\begin_layout Subsection
The RemoveLoggingTarget
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
RemoveLoggingTarget
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
Remove one (or more) logging target(s) from the specified device(s).The command
 input parameter is an array of string logically composed of {device_name,
 target_type::target_name} groups where the elements have the following
 semantic:
\end_layout

\begin_layout Itemize
device_name: the name of the device which logging behavior is to be controlled.
 The wildcard "*" is supported to apply the modification to all devices
 encapsulated within the device server (e.g.
 to ask all devices to stop logging to a given device target).
\end_layout

\begin_layout Itemize
target_type::target_name: target_type is one of the supported target types
 and target_name, the name of the target.
 Supported target types are: 
\emph on
console
\emph default
, 
\emph on
file
\emph default
 and 
\emph on
device
\emph default
.
 For a device target, target_name must contain the name of a log consumer
 device (as defined in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tango-log-consumer"

\end_inset

).
 For a file target, target_name is the full path to the file to log to.
 If omitted the device's name is used to build the file name (domain_family_memb
er.log).
 Finally, target_name is ignored in the case of a console target and can
 be omitted.
\end_layout

\begin_layout Standard
The wildcard "*" is supported for target_name.
 For instance, RemoveLoggingTarget (["*", "device::*"]) removes all the
 device targets from all the devices running in the device server.
 This command is not allowed in case the device is locked and the command
 requester is not the lock owner.
\end_layout

\begin_layout Subsection
The GetLoggingTarget
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
GetLoggingTarget
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
Returns the current target list of the specified device.
 The command parameter device_name is the name of the device which logging
 target list is requested.
 The list is returned as a DevVarStringArray containing target_type::target_name
 elements.
\end_layout

\begin_layout Subsection
The GetLoggingLevel
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
GetLoggingLevel
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
Returns the logging level of the specified devices.
 The command input parameter device_list contains the names of the devices
 which logging target list is requested.
 The wildcard "*" is supported to get the logging level of all the devices
 running within the server.
 The string part of the result contains the name of the devices and its
 long part contains the levels.
 Obviously, result.lvalue[i] is the current logging level of the device named
 result.svalue[i].
\end_layout

\begin_layout Subsection
The SetLoggingLevel
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
SetLoggingLevel
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
Changes the logging level of the specified devices.
 The string part of the command input parameter contains the device names
 while its long part contains the logging levels.
 The set of possible values for levels is: 0=OFF, 1=FATAL, 2=ERROR, 3=WARNING,
 4=INFO, 5=DEBUG.
 
\end_layout

\begin_layout Standard
The wildcard "*" is supported to assign all devices the same logging level.
 For instance, SetLoggingLevel (["*"] [3]) set the logging level of all
 the devices running within the server to WARNING.
 This command is not allowed in case the device is locked and the command
 requester is not the lock owner.
\end_layout

\begin_layout Subsection
The StopLogging
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
StopLogging
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
For all the devices running within the server, StopLogging saves their current
 logging level and set their logging level to OFF.
 
\end_layout

\begin_layout Subsection
The StartLogging
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
StartLogging
\end_layout

\end_inset

 command
\end_layout

\begin_layout Standard
For each device running within the server, StartLogging restores their logging
 level to the value stored during a previous StopLogging call.
\end_layout

\begin_layout Section
DServer class device properties
\end_layout

\begin_layout Standard
This device has two properties related to polling threads pool management
 plus another one for the choice of polling algorithm.
 These properties are described in the following table 
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Property name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
property rule
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
default value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
polling_threads_pool_size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Max number of thread in the polling pool
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
polling_threads_pool_conf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Polling threads pool configuration
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
polling_before_9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Choice of the polling algorithm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
false
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
The rule of the polling_threads_pool_size
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
polling-threads-pool-size
\end_layout

\end_inset

 is to define the maximun number of thread created for the polling threads
 pool size.
 The rule of the polling_threads_pool_conf
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
polling-threads-pool-conf
\end_layout

\end_inset

 is to define which thread in the pool is in charge of all the polled object(s)
 of which device.
 This property is an array of strings with one string per used thread in
 the pool.
 The content of the string is simply a device name list with device name
 splitted by a comma.
 Example of polling_threads_pool_conf property for 3 threads used:
\end_layout

\begin_layout Verbatim
dserver/<ds exec name>/<inst.
 name>/polling_threads_pool_conf-> the/dev/01
\end_layout

\begin_layout Verbatim
                  the/dev/02,the/dev/06
\end_layout

\begin_layout Verbatim
                  the/dev/03
\end_layout

\begin_layout Standard
Thread number 2 is in charge of 2 devices.
 Note that there is an entry in this list only for the used threads in the
 pool.
\end_layout

\begin_layout Standard
The rule of the polling_before_9
\begin_inset Index idx
status open

\begin_layout Plain Layout
polling_before_9
\end_layout

\end_inset

 property is to select the polling algorithm which was used in Tango device
 server process before Tango release 9.
\end_layout

\begin_layout Section
Tango log consumer
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
consumer
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "sec:Tango-log-consumer"

\end_inset


\end_layout

\begin_layout Subsection
The available Log Consumer
\end_layout

\begin_layout Standard
One implementation of a log consumer associated to a graphical user interface
 is available within Tango.
 It is a standalone java application called 
\series bold
LogViewer
\series default
 based on the publicly available chainsaw application from the log4j package.
 It supports two way of running which are:
\end_layout

\begin_layout Itemize
The static mode: In this mode, LogViewer is started with a parameter which
 is the name of the log consumer device implemented by the application.
 All messages sent by devices with a logging target type set to 
\emph on
device
\emph default
 and with a logging target name set to the same device name than the device
 name passed as application parameter will be displayed (if the logging
 level allows it).
\end_layout

\begin_layout Itemize
The dynamic mode: In this mode, the name of the log consumer device implemented
 by the application is build at application startup and is dynamic.
 The user with the help of the graphical interface chooses device(s) for
 which he want to see log messages.
\end_layout

\begin_layout Subsection
The Log Consumer interface
\end_layout

\begin_layout Standard
A Tango Log Consumer device is nothing but a tango device supporting the
 following tango command : 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

void log (Tango::DevVarStringArray details)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset

 where details is an array of string carrying the log details.
 Its structure is:
\end_layout

\begin_layout Itemize
details[0] : the timestamp in millisecond since epoch (01.01.1970) 
\end_layout

\begin_layout Itemize
details[1] : the log level
\end_layout

\begin_layout Itemize
details[2] : the log source (i.e.
 device name)
\end_layout

\begin_layout Itemize
details[3] : the log message
\end_layout

\begin_layout Itemize
details[4] : the log NDC (contextual info) - Not used but reserved
\end_layout

\begin_layout Itemize
details[5] : the thread identifier (i.e.
 the thread from which the log request comes from)
\end_layout

\begin_layout Standard
These log details can easily be extended.
 Any tango device supporting this command can act as a device target for
 other devices.
 
\end_layout

\begin_layout Section
Control system specific
\end_layout

\begin_layout Standard
It is possible to define a few control system parameters.
 By control system, we mean for each set of computers having the same database
 device server (the same TANGO_HOST environment variable)
\end_layout

\begin_layout Subsection
The device class documentation default value
\end_layout

\begin_layout Standard
Each control system may have it's own default device class documentation
 value.
 This is defined via a class property.
 The property name is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

Default->doc_url
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset

 It's retrieved if the device class itself does not define any doc_url property.
 If the Default->doc_url property is also not defined, a hard-coded default
 value is provided.
\end_layout

\begin_layout Subsection
The services definition
\end_layout

\begin_layout Standard
The property used to defined control system services is named 
\series bold
Services
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Services
\end_layout

\end_inset


\series default
 and belongs to the free object 
\series bold
CtrlSystem
\series default

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
CtrlSystem
\end_layout

\end_inset

.
 This property is an array of strings.
 Each string defines a service available within the control system.
 The syntax of each service definition is 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

Service name/Instance name:service device name
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tuning the event system buffers (HWM)
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
HWM
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Starting with Tango release 8, ZMQ
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ZMQ
\end_layout

\end_inset

 is used for the event based communication between clients and device server
 processes.
 ZMQ implementation provides asynchronous communication in the sense that
 the data to be transmitted is first stored in a buffer and then really
 sent on the network by dedicated threads.
 The size of this buffers (on client and device server side) is called High
 Water Mark (HWM) and is tunable.
 This is tunable at several level.
\end_layout

\begin_layout Enumerate
The library set a default value of 
\series bold
1000
\series default
 for both buffers (client and device server side)
\end_layout

\begin_layout Enumerate
Control system properties used to tune these size are named 
\series bold
DSEventBufferHwm
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
DsEventBufferHwm
\end_layout

\end_inset


\series default
 (device server side) and 
\series bold
EventBufferHwm
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout

\series bold
EventBufferHwm
\end_layout

\end_inset


\series default
 (client side).
 They both belongs to the free object 
\series bold
CtrlSystem
\series default

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
CtrlSystem
\end_layout

\end_inset

.
 Each property is the max number of events storable in these buffer.
\end_layout

\begin_layout Enumerate
At client or device server level using the library calls 
\emph on
Util::set_ds_event_buffer_hwm()
\emph default
 documented in 
\begin_inset CommandInset citation
LatexCommand cite
key "Tango-dsclasses-doc"

\end_inset

 or 
\emph on
ApiUtil::set_event_buffer_hwm() 
\emph default
documented in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tango::ApiUtil"

\end_inset


\end_layout

\begin_layout Enumerate
Using environment variables TANGO_DS_EVENT_BUFFER_HWM
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TANGO-DS-EVENT-BUFFER-HWM
\end_layout

\end_inset

 or TANGO_EVENT_BUFFER_HWM
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TANGO-EVENT-BUFFER-HWM
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Allowing NaN when writing attributes (floating point)
\end_layout

\begin_layout Standard
A property named 
\series bold
WAttrNaNAllowed
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout

\series medium
WAttrNaNAllowed
\end_layout

\end_inset


\series default
 belonging to the free object 
\series bold
CtrlSystem
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout

\series medium
CtrlSystem
\end_layout

\end_inset


\series default
 allows a Tango control system administrator to allow or disallow NaN numbers
 when writing attributes of the DevFloat or DevDouble data type.
 This is a boolean property and by default, it's value is taken as false
 (Meaning NaN values are rejected).
\end_layout

\begin_layout Subsection
Tuning multicasting event propagation
\end_layout

\begin_layout Standard
Starting with Tango 8.1, it is possible to transfer event(s) between devices
 and clients using a multicast protocol.
 The properties 
\series bold
MulticastEvent
\series default

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
MulticastEvent
\end_layout

\end_inset

, 
\series bold
MulticastRate
\series default

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
MulticastRate
\end_layout

\end_inset

, 
\series bold
MulticastIvl
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout

\series medium
MulticastIvl
\end_layout

\end_inset


\series default
 and 
\series bold
MulticastHops
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout

\series medium
MulticastHops
\end_layout

\end_inset


\series default
 also belonging to the free object 
\series bold
CtrlSystem
\series default
 allow the user to configure which events has to be sent using multicasting
 and with which parameters.
 See chapter "Advanced features/Using multicast protocol to transfer events"
 to get details about these properties.
\end_layout

\begin_layout Subsection
Summary of CtrlSystem free object properties
\end_layout

\begin_layout Standard
The following table summarizes properties defined at control system level
 and belonging to the free object CtrlSystem
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
CtrlSystem
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="3">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Property name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
property rule
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
default value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Services
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
List of defined services
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No default
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DsEventBufferHwm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DS event buffer high water mark
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
EventBufferHwm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Client event buffer high water mark
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
WAttrNaNAllowed
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Allow NaN when writing attr.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
false
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MulticastEvent
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
List of multicasting events
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No default
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MulticastRate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rate for multicast event transport
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
80
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MulticastIvl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Time to keep data for re-transmission
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MulticastHops
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Max number of eleemnts to cross
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Section
C++ specific
\end_layout

\begin_layout Subsection
The Tango master include file (tango.h
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
tango.h
\end_layout

\end_inset

)
\end_layout

\begin_layout Standard
Tango has a master include file called 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

tango.h
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center} 
\end_layout

\end_inset

This master include file includes the following files :
\end_layout

\begin_layout Itemize
Tango configuration include file : 
\series bold
tango_config.h
\end_layout

\begin_layout Itemize
CORBA include file : 
\series bold
idl/tango.h
\end_layout

\begin_layout Itemize
Some network include files for WIN32 : 
\series bold
winsock2.h
\series default
 and 
\series bold
mswsock.h
\end_layout

\begin_layout Itemize
C++ streams include file :
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
iostream
\series default
, 
\series bold
sstream
\series default
 and 
\series bold
fstream
\series default
 
\end_layout

\end_deeper
\begin_layout Itemize
Some standard C++ library include files : 
\series bold
memory, string
\series default
 and 
\series bold
vector
\end_layout

\begin_layout Itemize
A long list of other Tango include files
\end_layout

\begin_layout Subsection
Tango specific pre-processor define
\end_layout

\begin_layout Standard
The tango.h previously described also defined some pre-processor macros allowing
 Tango release to be checked at compile time.
 These macros are:
\end_layout

\begin_layout Itemize
TANGO_VERSION_MAJOR
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TANGO-VERSION-MAJOR
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
TANGO_VERSION_MINOR
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TANGO-VERSION-MINOR
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
TANGO_VERSION_PATCH
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TANGO-VERSION-PATCH
\end_layout

\end_inset


\end_layout

\begin_layout Standard
For instance, with Tango release 8.1.2, TANGO_VERSION_MAJOR will be set to
 8 while TANGO_VERSION_MINOR will be 1 and TANGO_VERSION_PATCH will be 2.
\end_layout

\begin_layout Subsection
Tango specific types
\end_layout

\begin_layout Subsubsection*
Operating system free type
\end_layout

\begin_layout Standard
Some data type used in the TANGO core software have been defined.
 They are described in the following table.
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C++ name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TangoSys_MemStream
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stringstream
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TangoSys_OMemStream
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ostringstream
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TangoSys_Pid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TangoSys_Cout
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ostream
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
These types are defined in the tango_config.h file
\end_layout

\begin_layout Subsubsection
Template command model related type
\end_layout

\begin_layout Standard
As explained in 
\begin_inset CommandInset ref
LatexCommand ref
reference "Command fact"

\end_inset

, command created with the template command model uses static casting.
 Many type definition have been written for these casting.
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Class name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command allowed method (if any)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command execute method
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TemplCommand
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TemplCommand
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::StateMethodPtr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::CmdMethPtr
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TemplCommandIn
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TemplCommandIn
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::StateMethodPtr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::CmdMethPtr_xxx
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TemplCommandOut
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TemplCommandOut
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::StateMethodPtr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::xxx_CmdMethPtr
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TemplCommandInOut
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TemplCommandInOut
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::StateMethodPtr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::xxx_CmdMethPtr_yyy
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
The 
\series bold
Tango::StateMethPtr
\series default
 is a pointer to a method of the DeviceImpl class which returns a boolean
 and has one parameter which is a reference to a const CORBA::Any obect.
 
\end_layout

\begin_layout Standard
The 
\series bold
Tango::CmdMethPtr
\series default
 is a pointer to a method of the DeviceImpl class which returns nothing
 and needs nothing as parameter.
\end_layout

\begin_layout Standard
The 
\series bold
Tango::CmdMethPtr_xxx
\series default
 is a pointer to a method of the DeviceImpl class which returns nothing
 and has one parameter.
 xxx must be set according to the method parameter type as described in
 the next table
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="20" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
short cut (xxx)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevBoolean
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevShort
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sh
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevLong
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lg
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevFloat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fl
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevDouble
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Db
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevUshort
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
US
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevULong
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UL
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevString
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Str
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarCharArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ChA
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarShortArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ShA
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarLongArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LgA
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarFloatArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FlA
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarDoubleArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DbA
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarUShortArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
USA
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarULongArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ULA
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
StrA
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarLongStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LSA
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarDoubleStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DSA
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevState
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sta
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
For instance, a pointer to a method which takes a Tango::DevVarStringArray
 as input parameter must be statically casted to a Tango::CmdMethPtr_StrA,
 a pointer to a method which takes a Tango::DevLong data as input parameter
 must be statically casted to a Tango::CmdMethPtr_Lg.
\end_layout

\begin_layout Standard
The 
\series bold
Tango::xxx_CmdMethPtr
\series default
 is a pointer to a method of the DeviceImpl class which returns data of
 one of the Tango type and has no input parameter.
 xxx must be set according to the method return data type following the
 same rules than those described in the previous table.
 For instance, a pointer to a method which returns a Tango::DevDouble data
 must be statically casted to a Tango::Db_CmdMethPtr.
\end_layout

\begin_layout Standard
The 
\series bold
Tango::xxx_CmdMethPtr_yyy
\series default
 is a pointer to a method of the DeviceImpl class which returns data of
 one of the Tango type and has one input parameter of one of the Tango data
 type.
 xxx and yyy must be set according to the method return data type and parameter
 type following the same rules than those described in the previous table.
 For instance, a pointer to a method which returns a Tango::DevDouble data
 and which takes a Tango::DevVarLongStringArray must be statically casted
 to a Tango::Db_CmdMethPtr_LSA.
\end_layout

\begin_layout Standard
All those type are defined in the tango_const.h file.
\end_layout

\begin_layout Subsection
Tango device state code
\end_layout

\begin_layout Standard
The Tango::DevState type is a C++ enumeration starting at 0.
 The code associated with each state
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
state
\end_layout

\end_inset

 is defined in the following table.
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="15" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
State name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::ON
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::OFF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::CLOSE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::OPEN
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::INSERT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::EXTRACT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::MOVING
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::STANDBY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::FAULT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::INIT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::RUNNING
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::ALARM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DISABLE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::UNKNOWN
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
A strings array called 
\series bold
Tango::DevStateName
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
DevStateName
\end_layout

\end_inset


\series default
 can be used to get the device state as a string.
 Use the Tango device state code as index into the array to get the correct
 string.
\end_layout

\begin_layout Subsection
Tango data type 
\end_layout

\begin_layout Standard
A 
\begin_inset Quotes eld
\end_inset

define
\begin_inset Quotes erd
\end_inset

 has been created for each Tango data type.
 This is summarized in the following table
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="32" columns="3">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type code
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevBoolean
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_BOOLEAN
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevShort
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_SHORT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevLong
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_LONG
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevFloat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_FLOAT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevDouble
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_DOUBLE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevUShort
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_USHORT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevULong
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_ULONG
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevString
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_STRING
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarCharArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEVVAR_CHARARRAY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarShortArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEVVAR_SHORTARRAY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarLongArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEVVAR_LONGARRAY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarFloatArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEVVAR_FLOATARRAY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarDoubleArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEVVAR_DOUBLEARRAY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarUShortArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEVVAR_USHORTARRAY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarULongArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEVVAR_ULONGARRAY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEVVAR_STRINGARRAY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarLongStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEVVAR_LONGSTRINGARRAY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
17
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarDoubleStringArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEVVAR_DOUBLESTRINGARRAY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevState
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_STATE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
19
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::ConstDevString
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::CONST_DEV_STRING
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarBooleanArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEVVAR_BOOLEANARRAY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevUChar
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_UCHAR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevLong64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_LONG64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevULong64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_ULONG64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
24
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarLong64Array
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEVVAR_LONG64ARRAY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
25
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarULong64Array
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEVVAR_ULONG64ARRAY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
26
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevInt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_INT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
27
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevEncoded
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_ENCODED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
28
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevEnum
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_ENUM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevPipeBlob
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEV_PIPE_BLOB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DevVarStateArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tango::DEVVAR_STATEARRAY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
31
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.3cm
\end_inset


\end_layout

\begin_layout Standard
For command which do not take input parameter, the type code Tango::DEV_VOID
 (value = 0) has been defined.
\end_layout

\begin_layout Standard
A strings array called 
\series bold
Tango::CmdArgTypeName
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
CmdArgTypeName
\end_layout

\end_inset


\series default
 can be used to get the data type as a string.
 Use the Tango data type code as index into the array to get the correct
 string.
\end_layout

\begin_layout Subsection
Tango command display level
\end_layout

\begin_layout Standard
Like attribute, Tango command has a display level.
 The Tango::DispLevel type is a C++ enumeration starting at 0.
 The code associated with each command display level is already described
 in page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "display level"

\end_inset


\end_layout

\begin_layout Standard
As for attribute, this parameter allows a graphical application to support
 two types of operation :
\end_layout

\begin_layout Itemize
An operator mode for day to day operation
\end_layout

\begin_layout Itemize
An expert mode when tuning is necessary
\end_layout

\begin_layout Standard
According to this parameter, a graphical application knows if the command
 is for the operator mode or for the expert mode.
\end_layout

\begin_layout Section
Device server process option and environment variables
\end_layout

\begin_layout Subsection
Classical device server
\end_layout

\begin_layout Standard
The synopsis of a device server process is
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

ds_name instance_name [OPTIONS]
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset

The supported options are :
\end_layout

\begin_layout Itemize

\series bold
-h, -? -help
\series default

\begin_inset Newline newline
\end_inset

Print the device server synopsis and a list of instance name defined in
 the database for this device server.
 An instance name in not mandatory in the command line to use this option
\end_layout

\begin_layout Itemize

\series bold
-v[trace level]
\series default

\begin_inset Newline newline
\end_inset

Set the verbose level.
 If no trace level is given, a default value of 4 is used
\end_layout

\begin_layout Itemize

\series bold
-file=<file name path>
\series default

\begin_inset Newline newline
\end_inset

Start a device server using an ASCII file instead of the Tango database.
 
\end_layout

\begin_layout Itemize

\series bold
-nodb
\series default

\begin_inset Newline newline
\end_inset

Start a device server without using the database.
\end_layout

\begin_layout Itemize

\series bold
-dlist <device name list>
\series default

\begin_inset Newline newline
\end_inset

Give the device name list.
 This option is supported only with the -nodb option.
\end_layout

\begin_layout Itemize

\series bold
ORB options
\series default
 (started with -ORBxxx)
\begin_inset Newline newline
\end_inset

Options directly passed to the underlying ORB.
 Should be rarely used except the -ORBendPoint option for device server
 not using the database
\end_layout

\begin_layout Subsection
Device server process as Windows service
\end_layout

\begin_layout Standard
When used as a Windows service
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
service
\end_layout

\end_inset

, a Tango device server supports several new options.
 These options are :
\end_layout

\begin_layout Itemize

\series bold
-i
\series default

\begin_inset Newline newline
\end_inset

Install the service
\end_layout

\begin_layout Itemize

\series bold
-s
\series default

\begin_inset Newline newline
\end_inset

Install the service and choose the automatic startup mode
\end_layout

\begin_layout Itemize

\series bold
-u
\series default

\begin_inset Newline newline
\end_inset

Un-install the service
\end_layout

\begin_layout Itemize

\series bold
-dbg
\series default

\begin_inset Newline newline
\end_inset

Run in console mode to debug service.
 The service must have been installed prior to use it.
\end_layout

\begin_layout Standard
Note that these options must be used after the device server instance name.
\end_layout

\begin_layout Subsection
Environment variables
\end_layout

\begin_layout Standard
A few environment variables can be used to tune a Tango control system.
 TANGO_HOST
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TANGO-HOST
\end_layout

\end_inset

 is the most important one but on top it, some Tango features like Tango
 logging service or controlled access (if used) can be tuned using environment
 variable.
 If these environment variables are not defined, the software searches in
 the file 
\series bold
$HOME/.tangorc
\series default
 for its value.
 If the file is not defined or if the environment variable is also not defined
 in this file, the software searches in the file 
\series bold
/etc/tangorc
\series default

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
tangorc
\end_layout

\end_inset

 for its value.
 For Windows, the file is 
\series bold
$TANGO_ROOT/tangorc
\series default
 TANGO_ROOT
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TANGO-ROOT
\end_layout

\end_inset

 being the mandatory environment variable of the Windows binary distribution.
\end_layout

\begin_layout Subsubsection
TANGO_HOST
\end_layout

\begin_layout Standard
This environment variable is the anchor of the system.
 It specifies where the Tango database server is running.
 Most of the time, its syntax is
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

TANGO_HOST=<host>:<port>
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset

host is the name of the computer where the database server is running and
 port is th eport number on which it is litenning.
 If you want to have a Tango control system which has several database servers
 (but only one database) in order to survive a database server crashes,
 use the following syntax
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

TANGO_HOST=<host_1>:<port_1>,<host_2>:<port_2>,<host_3>:<port_3>
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset

Obviously, host_1 is the name of the computer where the first database server
 is running, port_1 is the port number on which this server is listenning.
 host_2 is the name of the computer where the second database server is
 running and port_2 is its port number.
 All access to database will automatically switch from one server to another
 one in the list if the one which was used has died.
\end_layout

\begin_layout Subsubsection
Tango Logging Service (TANGO_LOG_PATH)
\end_layout

\begin_layout Standard
The TANGO_LOG_PATH
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TANGO-LOG-PATH
\end_layout

\end_inset

 environment variable can be used to specify the log files location.
 If not set it defaults to /tmp/tango-<user logging name> under Unix and
 C:/tango-<user logging name> under Windows.
 For a given device-server, the files are actually saved into $TANGO_LOG_PATH/{
 server_name}/{ server_instance_name}.
 This means that all the devices running within the same process log into
 the same directory.
 
\end_layout

\begin_layout Subsubsection
The database and controlled access server (MYSQL_USER, MYSQL_PASSWORD, MYSQL_HOS
T and MYSQL_DATABASE)
\begin_inset CommandInset label
LatexCommand label
name "sub:Db-Env-Variables"

\end_inset


\end_layout

\begin_layout Standard
The Tango database server and the controlled access server (if used) need
 to connect to the MySQL database.
 They are using four environment variables called MYSQL_USER
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
MYSQL-USER
\end_layout

\end_inset

, MYSQL_PASSWORD
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
MYSQL-PASSWORD
\end_layout

\end_inset

 to know which user/password they must use to access the database, MYSQL_HOST
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
MYSQL-HOST
\end_layout

\end_inset

 in case the MySQL database is running on another host and MYSQL_DATABASE
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
MYSQL-DATABASE
\end_layout

\end_inset

 to specify the name of the database to connect to.
 The MYSQL_HOST environment variable allows you to specify the host and
 port number where MySQL is running.
 Its syntax is 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

host:port
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset

 The port definition is optional.
 If it is not specified, the default MySQL port will be used.
 If these environment variables are not defined, they will connect to the
 DBMS using the "root" login on localhost with the MySQL default port number
 (3306).
 The MYSQL_DATABASE environment variable has to be used in case your are
 using the same Tango Database device server executable code to connect
 to several Tango databases each of them having a different name.
\end_layout

\begin_layout Subsubsection
The controlled access
\end_layout

\begin_layout Standard
Even if a controlled access system is running, it is possible to by-pass
 it if in the environment of the client application the environment variable
 SUPER_TANGO
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
SUPER-TANGO
\end_layout

\end_inset

 is defined to "true".
\end_layout

\begin_layout Subsubsection
The event buffer size
\end_layout

\begin_layout Standard
If required, the event buffer used by the ZMQ
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ZMQ
\end_layout

\end_inset

 software could be tuned using environment variables.
 These variables are named TANGO_DS_EVENT_BUFFER_HWM
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TANGO-DS-EVENT-BUFFER-HWM
\end_layout

\end_inset

 for the event buffer on a device server side and TANGO_EVENT_BUFFER_HWM
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TANGO-EVENT-BUFFER-HWM
\end_layout

\end_inset

 for the event buffer on the client size.
 Both of them are a number which is the maximum number of events which could
 be stored in these buffers.
\end_layout

\end_body
\end_document
