#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage{a4wide}
\end_preamble
\use_default_options false
\language english
\inputencoding latin1
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter
Starting a Tango control system
\end_layout

\begin_layout Section
Without database
\end_layout

\begin_layout Standard
When used without database
\begin_inset Index
status collapsed

\begin_layout Plain Layout
database
\end_layout

\end_inset

, there is no additional process to start.
 Simply starts device server using the -nodb option (and eventually the
 -dlist option) on specific port.
 See 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Device-server-without"

\end_inset

 to find informations on how to start/write Tango device server not using
 the database.
\end_layout

\begin_layout Section
With database
\end_layout

\begin_layout Standard
Starting the Tango control system simply means starting its database device
 server on a well defined host using a well defined port.
 Use the host name and the port number to build the TANGO_HOST environment
 variable.
 See 
\begin_inset CommandInset ref
LatexCommand ref
reference "Env variable"

\end_inset

 to find how starting a device server on a specific host.
 Obviously, the underlying database software (MySQL) must be started before
 the Tango database device server.
 The Tango database server connects to MySQL using a default logging name
 set to "root".
 You can change this behaviour with the MYSQL_USER
\begin_inset Index
status collapsed

\begin_layout Plain Layout
MYSQL-USER
\end_layout

\end_inset

 and MYSQL_PASSWORD
\begin_inset Index
status collapsed

\begin_layout Plain Layout
MYSQL-PASSWORD
\end_layout

\end_inset

 environment variables.
 Define them before starting the database server.
\end_layout

\begin_layout Standard
If you are using the Tango administration graphical tool called 
\series bold
Astor
\series default

\begin_inset Index
status collapsed

\begin_layout Plain Layout
Astor
\end_layout

\end_inset

, you also need to start a specific Tango device server called 
\series bold
Starter
\begin_inset Index
status collapsed

\begin_layout Plain Layout
Starter
\end_layout

\end_inset


\series default
 on each host where Tango device server(s) are running.
 See 
\begin_inset CommandInset citation
LatexCommand cite
key "Astor_doc"

\end_inset

 for Astor documentation.
 This starter device server is able to start even before the Tango database
 device server is started.
 In this case, it will enter a loop in which it periodically tries to access
 the Tango database device.
 The loop exits and the server starts only if the database device access
 succeed.
\end_layout

\begin_layout Section
With database and event
\end_layout

\begin_layout Subsection
For Tango releases lower than 8
\end_layout

\begin_layout Standard
On top of what is described in the previous chapter, using event means using
 CORBA Notification service.
 Start one Notification Service
\begin_inset Index
status collapsed

\begin_layout Plain Layout
Notification Service
\end_layout

\end_inset

 daemon on each host where device server(s) used via events are running.
 The Notification Service daemon event channel factory IOR has to be registered
 in the Tango database.
 This is done with the 
\series bold
notifd2db
\begin_inset Index
status collapsed

\begin_layout Plain Layout
notifd2db
\end_layout

\end_inset


\series default
 command.
 The notification daemon is a process with a high thread number.
 By default, Unix like operating systems reserve a big amount of memory
 for each thread stack (8 MByte for Linux/Ubuntu, 10 MByte for Linux/RedHat
 4).
 If your process has several hundreds of threads, this could generate a
 too high memory requirement on virtual memory and even exceed the maximun
 allowed memory per process (3 GBytes on Linux for 32 bits computer).
 The notification service daemon works very well with a value of only 2
 Mybtes for thread stack.
 The Unix command line "ulimit
\begin_inset Index
status collapsed

\begin_layout Plain Layout
ulimit
\end_layout

\end_inset

 -s 2048" asks the operating system to give 2 Mbytes for each thread stack.
 Example of starting and registering a Notification Service daemon on a
 UNIX like operating system
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{line.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Verbatim
     1  ulimit -s 2048
\end_layout

\begin_layout Verbatim
     2  notifd -n -DDeadFilterInterval=300 &
\end_layout

\begin_layout Verbatim
     3  notifd2db
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{line.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Notification Service daemon is started at line 2.
 Its "-DDeadFilterInterval"
\begin_inset Index
status collapsed

\begin_layout Plain Layout
DeadFilterInterval
\end_layout

\end_inset

 option is used to specify some internal cleaning of dead objects within
 the notification service.
 The "-n" option is used to disable the use of the CORBA Naming Service
 for registering the default event channel factory.
 The registration of the Notification Service daemon in the Tango database
 is done at line 2.
\end_layout

\begin_layout Standard
It differs on a Windows computer
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{line.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Verbatim
     1  notifd -n -DDeadFilterInterval=300 -DFactoryIORFileName=C:
\backslash
Temp
\backslash
evfact.ior &
\end_layout

\begin_layout Verbatim
     2  notifd2db C:
\backslash
Temp
\backslash
evfact.ior
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{line.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
For release 8 and above
\end_layout

\begin_layout Standard
A new event system has been implemented starting with Tango release 8.
 With this new event system, the CORBA Notification service is not needed
 any more.
 This means that 
\series bold
as soon
\series default
 as all Tango device server processes running on a host and all clients
 using events from their devices used Tango 8, it is not required to start
 any process other than the device servers and the clients.
 You can forget the previous sub-chapter!
\end_layout

\begin_layout Section
With file used as database
\end_layout

\begin_layout Standard
When used with database
\begin_inset Index
status collapsed

\begin_layout Plain Layout
database
\end_layout

\end_inset

 on file, there is no additional process to start.
 Simply starts device server using the -file option specifying file name
 port.
 See 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Device-server-file"

\end_inset

 to find informations on how to start Tango device server using database
 on file.
\end_layout

\begin_layout Section
With file used as database and event
\end_layout

\begin_layout Subsection
For Tango releases lower than 8
\end_layout

\begin_layout Standard
Using event means using CORBA Notification service.
 Start one Notification Service
\begin_inset Index
status collapsed

\begin_layout Plain Layout
Notification Service
\end_layout

\end_inset

 daemon on the host where device server(s) using events are running.
 The Notification Service daemon event channel factory IOR has to be registered
 in the file(s) use as database.
 This is done with the 
\series bold
notifd2db
\begin_inset Index
status collapsed

\begin_layout Plain Layout
notifd2db
\end_layout

\end_inset


\series default
 command.
 Example of starting and registering a Notification Service daemon on a
 UNIX like operating system
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{line.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Verbatim
     1  notifd -n -DDeadFilterInterval=300 &
\end_layout

\begin_layout Verbatim
     2  notifd2db -o /var/myfile.res
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{line.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Notification Service daemon is started at line 1.
 Its "-n" option is used to disable the use of the CORBA Naming Service
 for registering the default event channel factory.
 The registration of the Notification Service daemon in the file used as
 database is done at line 2 with its 
\series bold
-o
\series default
 command line option.
\end_layout

\begin_layout Standard
It differs on a Windows computer because the name of the file used by the
 CORBA notification service to store its channel factory IOR must be specified
 using its -D command line option.
 This file name has also to be passed to the notifd2db command.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{line.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Verbatim
     1  notifd -n -DDeadFilterInterval=300 -DFactoryIORFileName=C:
\backslash
Temp
\backslash
evfact.ior &
\end_layout

\begin_layout Verbatim
     2  notifd2db C:
\backslash
Temp
\backslash
evfact.ior -o C:
\backslash
Temp
\backslash
myfile.res
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{line.tex}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
For release 8 and above
\end_layout

\begin_layout Standard
A new event system has been implemented starting with Tango release 8.
 With this new event system, the CORBA Notification service is not needed
 any more.
 This means that 
\series bold
as soon
\series default
 as all clients using events from devices embedded in the device server
 use Tango 8, it is not required to start any process other than the device
 server and its clients.
\end_layout

\begin_layout Section
With the controlled access
\end_layout

\begin_layout Standard
Using the Tango controlled access means starting a specific device server
 called TangoAccessControl
\begin_inset Index
status collapsed

\begin_layout Plain Layout
TangoAccessControl
\end_layout

\end_inset

.
 By default, this server has to be started with the instance name set to
 "1" and its device name is "sys/access_control/1".
 The command line to start this device server is:
\end_layout

\begin_layout Verbatim
TangoAccessControl 1
\end_layout

\begin_layout Standard
This server connects to MySQL using a default logging name set to "root".
 You can change this behaviour with the MYSQL_USER
\begin_inset Index
status collapsed

\begin_layout Plain Layout
MYSQL-USER
\end_layout

\end_inset

 and MYSQL_PASSWORD
\begin_inset Index
status collapsed

\begin_layout Plain Layout
MYSQL-PASSWORD
\end_layout

\end_inset

 environment variables.
 Define them before starting the controlled access device server.
 This server also uses the MYSQL_HOST
\begin_inset Index
status collapsed

\begin_layout Plain Layout
MYSQL-HOST
\end_layout

\end_inset

 environment variable if you need to connect it to some MySQL server running
 on another host.
 The syntax of this environment varaible is "host:port".
 Port is optional and if it is not defined, the MySQL default port is used
 (3306).
 If it is not defined at all, a connection to the localhost is made.
 This controlled access system uses the Tango database to retrieve user
 rights and it is not possible to run it in a Tango control system running
 without database.
\end_layout

\end_body
\end_document
