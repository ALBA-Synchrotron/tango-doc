#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage{a4wide}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding latin1
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 5
\tocdepth 4
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
Introduction to device server
\end_layout

\begin_layout Standard
Device servers were first developed at the European Synchrotron radiation
 Facility (ESRF
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ESRF
\end_layout

\end_inset

) for controlling the 6 Gev synchrotron radiation source.
 This document is a Programmer's Manual on how to write TANGO device servers.
 It will not go into the details of the ESRF
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ESRF
\end_layout

\end_inset

, nor its Control System nor any of the specific device servers in the Control
 System.
 The role of this document is to help programmers faced with the task of
 writing TANGO device servers.
\end_layout

\begin_layout Standard
Device servers have been developed at the ESRF
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ESRF
\end_layout

\end_inset

 in order to solve the main task of Control Systems viz provide read and
 write access to all devices in a distributed system.
 The problem of distributed device access is only part of the problem however.
 The other part of the problem is providing a programming framework for
 a large number of devices programmed by a large number of programmers each
 having different levels of experience and style.
\end_layout

\begin_layout Standard
Device servers have been written at the ESRF
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ESRF
\end_layout

\end_inset

 for a large variety of different devices.
 Devices vary from serial line devices to devices interfaced by field-bus
 to memory mapped VME cards or PC cards to entire data acquisition systems.
 The definition of a device depends very much on the user's requirements.
 In the simple case a device server can be used to hide the serial line
 protocol required to communicate with a device.
 For more complicated devices the device server can be used to hide the
 entire complexity of the device timing, configuration and acquisition cycle
 behind a set of high level commands.
\end_layout

\begin_layout Standard
In this manual the process of how to write TANGO client (applications) and
 device servers will be treated.
 The manual has been organized as follows :
\end_layout

\begin_layout Itemize
A getting started chapter.
 
\end_layout

\begin_layout Itemize
The TANGO device server model is treated in chapter 3 
\end_layout

\begin_layout Itemize
Generalities on the Tango Application Programmer Interfaces are given in
 chapter 4 
\end_layout

\begin_layout Itemize
Chapter 5 is an a programmer's guide for the Tango Application ToolKit (TangoATK
).
 This is a Java toolkit to help Tango Java application developers.
 
\end_layout

\begin_layout Itemize
How to write a TANGO device server is explained in chapter 6 
\end_layout

\begin_layout Itemize
Chapter 7 describes advanced Tango features 
\end_layout

\begin_layout Standard
Throughout this manual examples of source code will be given in order to
 illustrate what is meant.
 Most examples have been taken from the StepperMotor class - a simulation
 of a stepper motor which illustrates how a typical device server for a
 stepper motor at the ESRF functions.
\end_layout

\begin_layout Section
Device server history
\end_layout

\begin_layout Standard
The concept of using device servers to access devices was first proposed
 at the ESRF in 1989.
 It has been successfully used as the heart of the ESRF
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ESRF
\end_layout

\end_inset

 Control System for the institute accelerator complex.
 This Control System has been named TACO
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
TACO
\end_layout

\end_inset


\begin_inset Foot
status collapsed

\begin_layout Plain Layout
TACO stands for 
\series bold
T
\series default
elescope and 
\series bold
A
\series default
ccelerator 
\series bold
C
\series default
ontrolled with 
\series bold
O
\series default
bjects
\end_layout

\end_inset

.
 Then, it has been decided to also used TACO to control devices in the beam-line
s.
 Today, more than 30 instances of TACO are running at the ESRF.
 The main technologies used within TACO are the leading technologies of
 the 80's.
 The Sun Remote Procedure Call (RPC) is used to communicate over the network
 between device server and applications, OS-9 is used on the front-end computers
, C is the reference language to write device servers and clients and the
 device server framework follows the MIT Widget model.
 In 1999, a renewal of the control system was started.
 In June 2002, Soleil
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Soleil
\end_layout

\end_inset

 and ESRF offically decide to collaborate to develop this renewal of the
 old TACO control system.
 Soleil is a French synchrotron radiation facility currently under construction
 in the Paris suburbs.
 See 
\begin_inset CommandInset citation
LatexCommand cite
key "Soleil_home_page"

\end_inset

 to get all information about Soleil.
 In December 2003, Elettra
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Elettra
\end_layout

\end_inset

 joins the club.
 Elettra is an Italian synchrotron radiation facility located in Trieste.
 See 
\begin_inset CommandInset citation
LatexCommand cite
key "Elettra_home_page"

\end_inset

 to get all information about Elettra.
 Then, beginning of 2005, ALBA
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ALBA
\end_layout

\end_inset

 also decided to join.
 ALBA is a Spanish synchrotron radiation facility located in Barcelona.
 See 
\begin_inset CommandInset citation
LatexCommand cite
key "Alba_WEB"

\end_inset

 to get all information about ALBA.
 The new version of the Alba/Elettra/ESRF/Soleil control system is named
 TANGO
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
TANGO stands for 
\series bold
TA
\series default
co 
\series bold
N
\series default
ext 
\series bold
G
\series default
eneration 
\series bold
O
\series default
bject
\end_layout

\end_inset

 and is based on the 21 century technologies :
\end_layout

\begin_layout Itemize
CORBA
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
CORBA
\end_layout

\end_inset


\begin_inset Foot
status collapsed

\begin_layout Plain Layout
CORBA stands for 
\series bold
C
\series default
ommon 
\series bold
O
\series default
bject 
\series bold
R
\series default
equest 
\series bold
B
\series default
roker 
\series bold
A
\series default
rchitecture
\end_layout

\end_inset

 and ZMQ
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ZMQ
\end_layout

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "ZMQ"

\end_inset

 to communicate between device server and clients 
\end_layout

\begin_layout Itemize
C++, Python and Java as reference programming languages 
\end_layout

\begin_layout Itemize
Linux and Windows as operating systems 
\end_layout

\begin_layout Itemize
Modern object oriented design patterns
\end_layout

\end_body
\end_document
