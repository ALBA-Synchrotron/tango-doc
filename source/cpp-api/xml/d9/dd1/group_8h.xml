<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="d9/dd1/group_8h" kind="file">
    <compoundname>group.h</compoundname>
    <includes local="no">tango.h</includes>
    <incdepgraph>
      <node id="1629">
        <label>tango.h</label>
      </node>
      <node id="1628">
        <label>group.h</label>
        <link refid="group.h"/>
        <childnode refid="1629" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="d2/d0d/classTango_1_1AsynchRequest" prot="public">Tango::AsynchRequest</innerclass>
    <innerclass refid="d4/d6d/classTango_1_1Group" prot="public">Tango::Group</innerclass>
    <innerclass refid="d5/dae/classTango_1_1GroupAttrReply" prot="public">Tango::GroupAttrReply</innerclass>
    <innerclass refid="db/daa/classTango_1_1GroupAttrReplyList" prot="public">Tango::GroupAttrReplyList</innerclass>
    <innerclass refid="d9/d33/classTango_1_1GroupCmdReply" prot="public">Tango::GroupCmdReply</innerclass>
    <innerclass refid="d8/d3d/classTango_1_1GroupCmdReplyList" prot="public">Tango::GroupCmdReplyList</innerclass>
    <innerclass refid="da/d18/classTango_1_1GroupDeviceElement" prot="public">Tango::GroupDeviceElement</innerclass>
    <innerclass refid="df/d46/classTango_1_1GroupElement" prot="public">Tango::GroupElement</innerclass>
    <innerclass refid="da/da9/classTango_1_1GroupElementFactory" prot="public">Tango::GroupElementFactory</innerclass>
    <innerclass refid="de/deb/classTango_1_1GroupReply" prot="public">Tango::GroupReply</innerclass>
    <innerclass refid="dc/d11/classTango_1_1GroupReplyList" prot="public">Tango::GroupReplyList</innerclass>
    <innernamespace refid="de/ddf/namespaceTango">Tango</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="d9/dd1/group_8h_1aae3df4223c20c408ab2cf8a45fb39f3a" prot="public" static="no">
        <name>TANGO_GROUP_HAS_THREAD_SAFE_IMPL</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/client/group.h" line="48" column="9" bodyfile="/home/tango/workspace/cppTango/include/tango/client/group.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>description<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Include<sp/>for<sp/>Tango<sp/>Group<sp/>impl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>project<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TANGO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>author(s)<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N.Leclercq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/>2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>European<sp/>Synchrotron<sp/>Radiation<sp/>Facility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BP<sp/>220,<sp/>Grenoble<sp/>38043</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FRANCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Tango.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tango<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tango<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>Tango.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>$Revision$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_GROUP_H_</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_GROUP_H_</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tango.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Tango<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THREAD<sp/>SAFE<sp/>IMPL<sp/>OPTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="d9/dd1/group_8h_1aae3df4223c20c408ab2cf8a45fb39f3a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TANGO_GROUP_HAS_THREAD_SAFE_IMPL<sp/>1</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FORWARD<sp/>DECLARATIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Group;</highlight></codeline>
<codeline lineno="54" refid="de/ddf/namespaceTango_1ab9ef33527260f0bc7f0bf168143f55a0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Misc.<sp/>Typedefs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//-<sp/>group<sp/>content<sp/>(individual<sp/>devices<sp/>and/or<sp/>sub-groups)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;GroupElement*&gt;<sp/><ref refid="de/ddf/namespaceTango_1ab9ef33527260f0bc7f0bf168143f55a0" kindref="member">GroupElements</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//-<sp/>group<sp/>content<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="de/ddf/namespaceTango_1a5c81b7d42455c6c7aafff46edbd2bf4b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>GroupElements::iterator<sp/><ref refid="de/ddf/namespaceTango_1a5c81b7d42455c6c7aafff46edbd2bf4b" kindref="member">GroupElementsIterator</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//-<sp/>define<sp/>what<sp/>is<sp/>a<sp/>list<sp/>of<sp/>token<sp/>(for<sp/>name<sp/>pattern<sp/>management)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="de/ddf/namespaceTango_1ad1538aefe5a40c681e41341d087cc7c9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="de/ddf/namespaceTango_1ad1538aefe5a40c681e41341d087cc7c9" kindref="member">TokenList</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>ExtRequestDesc<sp/>:<sp/>an<sp/>asynch.<sp/>request<sp/>holder<sp/>for<sp/>groups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="d2/d0d/classTango_1_1AsynchRequest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d2/d0d/classTango_1_1AsynchRequest" kindref="compound">AsynchRequest</ref></highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>An<sp/>asynch.<sp/>request<sp/>repository<sp/>is<sp/>maintain<sp/>by<sp/>each<sp/>GroupDeviceElement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="d2/d0d/classTango_1_1AsynchRequest_1ac6facd8fbba95d830b9806ceffb3a5bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d18/classTango_1_1GroupDeviceElement" kindref="compound">GroupDeviceElement</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="d2/d0d/classTango_1_1AsynchRequest_1a3e7880f845044a536121f702b5521270" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d0d/classTango_1_1AsynchRequest_1a3e7880f845044a536121f702b5521270" kindref="member">AsynchRequest</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>_rid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>_obj_name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ge_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>rq_id(_rid),<sp/>group_element_enabled_m(ge_enabled)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj_names.push_back(_obj_name);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="d2/d0d/classTango_1_1AsynchRequest_1a383a9c0102ddd1126e7470840779bff1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d0d/classTango_1_1AsynchRequest_1a383a9c0102ddd1126e7470840779bff1" kindref="member">AsynchRequest</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>_rid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>_obj_names,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ge_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>rq_id(_rid),<sp/>group_element_enabled_m(ge_enabled)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj_names<sp/>=<sp/>_obj_names;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="d2/d0d/classTango_1_1AsynchRequest_1a26b3a914e0dfff3db69ab6d645358080" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d0d/classTango_1_1AsynchRequest_1a26b3a914e0dfff3db69ab6d645358080" kindref="member">AsynchRequest</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>_rid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>_obj_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DevFailed&amp;<sp/>_df)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>rq_id(_rid),<sp/>rq_ex(_df),<sp/>group_element_enabled_m(true)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj_names.push_back(_obj_name);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="d2/d0d/classTango_1_1AsynchRequest_1a802862507d2cbd9ff8d54a1d029a6d27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d0d/classTango_1_1AsynchRequest_1a802862507d2cbd9ff8d54a1d029a6d27" kindref="member">AsynchRequest</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>_rid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>_obj_names,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DevFailed&amp;<sp/>_df)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>rq_id(_rid),<sp/>rq_ex(_df),<sp/>group_element_enabled_m(true)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj_names<sp/>=<sp/>_obj_names;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-<sp/>dtor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="d2/d0d/classTango_1_1AsynchRequest_1ae6f806d0204ff49ced628dca1e651acd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d2/d0d/classTango_1_1AsynchRequest_1ae6f806d0204ff49ced628dca1e651acd" kindref="member">~AsynchRequest</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-noop<sp/>impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-<sp/>group_element_enabled<sp/>accessor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="d2/d0d/classTango_1_1AsynchRequest_1ac4de9d1f09f1fbdaddd2204c6e77506e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d0d/classTango_1_1AsynchRequest_1ac4de9d1f09f1fbdaddd2204c6e77506e" kindref="member">group_element_enabled</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>group_element_enabled_m;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-<sp/>request<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>rq_id;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-<sp/>name<sp/>of<sp/>requested<sp/>objects<sp/>(command<sp/>or<sp/>attribute)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>obj_names;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-<sp/>DevFailed<sp/>containing<sp/>potential<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>DevFailed<sp/>rq_ex;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-<sp/>true<sp/>is<sp/>the<sp/>associated<sp/>group<sp/>member<sp/>is<sp/>enabled,<sp/>false<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>group_element_enabled_m;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//-<sp/>asynch.<sp/>request<sp/>repository</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="de/ddf/namespaceTango_1a168c199249350bb009e168211ed97747" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;long,<sp/>AsynchRequest&gt;<sp/><ref refid="de/ddf/namespaceTango_1a168c199249350bb009e168211ed97747" kindref="member">AsynchRequestRep</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//-<sp/>asynch.<sp/>request<sp/>repository<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="de/ddf/namespaceTango_1a0277f25b3f85ec78c024b252ad16b79c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>AsynchRequestRep::iterator<sp/><ref refid="de/ddf/namespaceTango_1a0277f25b3f85ec78c024b252ad16b79c" kindref="member">AsynchRequestRepIterator</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//-<sp/>asynch.<sp/>request<sp/>repository<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="de/ddf/namespaceTango_1a38e09c4b89ec97d44f1019f903918c04" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>AsynchRequestRep::value_type<sp/><ref refid="de/ddf/namespaceTango_1a38e09c4b89ec97d44f1019f903918c04" kindref="member">AsynchRequestRepValue</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>GroupReply<sp/>:<sp/>base<sp/>class<sp/>for<sp/>group<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="de/deb/classTango_1_1GroupReply" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/deb/classTango_1_1GroupReply" kindref="compound">GroupReply</ref></highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>default<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="de/deb/classTango_1_1GroupReply" kindref="compound">GroupReply</ref><sp/>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>copy<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="de/deb/classTango_1_1GroupReply" kindref="compound">GroupReply</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/deb/classTango_1_1GroupReply" kindref="compound">GroupReply</ref>&amp;<sp/>src);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="de/deb/classTango_1_1GroupReply" kindref="compound">GroupReply</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="de/deb/classTango_1_1GroupReply_1a4fe578ba1fcd03239b7dc589ffc1af77" kindref="member">dev_name</ref>,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="de/deb/classTango_1_1GroupReply_1a13564b3e6df04a5257b2592b94a07d88" kindref="member">obj_name</ref>,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>group_element_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="de/deb/classTango_1_1GroupReply" kindref="compound">GroupReply</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dev_name,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>obj_name,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DevFailed&amp;<sp/>exception,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>group_element_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>dtor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="de/deb/classTango_1_1GroupReply" kindref="compound">GroupReply</ref><sp/>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>group_element_enabled<sp/>accessor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>group_element_enabled<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>group_element_enabled_m;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//-<sp/>enable/disable<sp/>exception<sp/>-<sp/>returns<sp/>the<sp/>previous<sp/>mode</highlight></codeline>
<codeline lineno="177"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/deb/classTango_1_1GroupReply_1a4250fb27cfce0de073029a1b778b06b8" kindref="member">enable_exception</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exception_mode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>has_failed<sp/>accessor</highlight></codeline>
<codeline lineno="187" refid="de/deb/classTango_1_1GroupReply_1aec0def5a9df786134dc9cb8c66c21cb8" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/deb/classTango_1_1GroupReply_1aec0def5a9df786134dc9cb8c66c21cb8" kindref="member">has_failed</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>has_failed_m;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>device<sp/>name<sp/>accessor</highlight></codeline>
<codeline lineno="198" refid="de/deb/classTango_1_1GroupReply_1a4fe578ba1fcd03239b7dc589ffc1af77" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="de/deb/classTango_1_1GroupReply_1a4fe578ba1fcd03239b7dc589ffc1af77" kindref="member">dev_name</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dev_name_m;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//-<sp/>object<sp/>(i.e.<sp/>command<sp/>or<sp/>attribute)<sp/>name<sp/>accessor</highlight></codeline>
<codeline lineno="209" refid="de/deb/classTango_1_1GroupReply_1a13564b3e6df04a5257b2592b94a07d88" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="de/deb/classTango_1_1GroupReply_1a13564b3e6df04a5257b2592b94a07d88" kindref="member">obj_name</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj_name_m;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>error<sp/>stack<sp/>accessor</highlight></codeline>
<codeline lineno="220" refid="de/deb/classTango_1_1GroupReply_1a47419919cad3f689140757bd09eae457" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DevErrorList&amp;<sp/><ref refid="de/deb/classTango_1_1GroupReply_1a47419919cad3f689140757bd09eae457" kindref="member">get_err_stack</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exception_m.errors;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>exception<sp/>flag<sp/>(enable/disable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exception_enabled;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>the<sp/>device<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>std::string<sp/>dev_name_m;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>command<sp/>or<sp/>attribute<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>std::string<sp/>obj_name_m;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>has_failed_m:<sp/>true<sp/>is<sp/>an<sp/>error<sp/>occurred,<sp/>false<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_failed_m;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>group_element_enabled_m<sp/>:<sp/>true<sp/>is<sp/>the<sp/>associated<sp/>group<sp/>member<sp/>is<sp/>enabled,<sp/>false<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>group_element_enabled_m;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>exception:<sp/>valid<sp/>if<sp/>has_failed_m<sp/>set<sp/>to<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>DevFailed<sp/>exception_m;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>GroupCmdReply<sp/>:<sp/>reply<sp/>to<sp/>command<sp/>executed<sp/>on<sp/>a<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight></codeline>
<codeline lineno="251" refid="d9/d33/classTango_1_1GroupCmdReply" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d33/classTango_1_1GroupCmdReply" kindref="compound">GroupCmdReply</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="de/deb/classTango_1_1GroupReply" kindref="compound">GroupReply</ref></highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>default<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><ref refid="d9/d33/classTango_1_1GroupCmdReply" kindref="compound">GroupCmdReply</ref><sp/>();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>copy<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><ref refid="d9/d33/classTango_1_1GroupCmdReply" kindref="compound">GroupCmdReply</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d33/classTango_1_1GroupCmdReply" kindref="compound">GroupCmdReply</ref>&amp;<sp/>src);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><ref refid="d9/d33/classTango_1_1GroupCmdReply" kindref="compound">GroupCmdReply</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="de/deb/classTango_1_1GroupReply_1a4fe578ba1fcd03239b7dc589ffc1af77" kindref="member">dev_name</ref>,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="de/deb/classTango_1_1GroupReply_1a13564b3e6df04a5257b2592b94a07d88" kindref="member">obj_name</ref>,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DeviceData&amp;<sp/>data);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><ref refid="d9/d33/classTango_1_1GroupCmdReply" kindref="compound">GroupCmdReply</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dev_name,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>obj_name,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DevFailed&amp;<sp/>exception);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><ref refid="d9/d33/classTango_1_1GroupCmdReply" kindref="compound">GroupCmdReply</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dev_name,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>obj_name,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>group_element_enabled);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>dtor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="d9/d33/classTango_1_1GroupCmdReply" kindref="compound">GroupCmdReply</ref><sp/>();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>data<sp/>accessor<sp/>(may<sp/>throw<sp/>Tango::DevFailed)</highlight></codeline>
<codeline lineno="282"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/>DeviceData&amp;<sp/><ref refid="d9/d33/classTango_1_1GroupCmdReply_1ab753e25a85ec8ca6b96f61d4d3a2c0fd" kindref="member">get_data</ref><sp/>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>template<sp/>data<sp/>exctractor<sp/>method</highlight></codeline>
<codeline lineno="293"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d33/classTango_1_1GroupCmdReply_1a54b600d46c948acd7d1943f6d9738943" kindref="member">operator&gt;&gt; </ref>(T&amp;<sp/>dest);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>data<sp/>exctractor<sp/>method<sp/>for<sp/>DevVarLongStringArray</highlight></codeline>
<codeline lineno="306"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d33/classTango_1_1GroupCmdReply_1a4beaeb6d71fa2cd825828718d36d20a4" kindref="member">extract</ref><sp/>(std::vector&lt;DevLong&gt;&amp;<sp/>vl,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>vs);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>data<sp/>exctractor<sp/>method<sp/>for<sp/>DevVarDoubleStringArray</highlight></codeline>
<codeline lineno="319"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d33/classTango_1_1GroupCmdReply_1a4beaeb6d71fa2cd825828718d36d20a4" kindref="member">extract</ref><sp/>(std::vector&lt;double&gt;&amp;<sp/>vd,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>vs);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>data:<sp/>valid<sp/>if<sp/>GroupReply::has_failed_m<sp/>set<sp/>to<sp/>false<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>GroupReply::enabled_m<sp/>set<sp/>to<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>DeviceData<sp/>data_m;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">};</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>GroupAttrReply<sp/>:<sp/>reply<sp/>to<sp/>an<sp/>attribute<sp/>reading<sp/>executed<sp/>on<sp/>a<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight></codeline>
<codeline lineno="338" refid="d5/dae/classTango_1_1GroupAttrReply" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d5/dae/classTango_1_1GroupAttrReply" kindref="compound">GroupAttrReply</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="de/deb/classTango_1_1GroupReply" kindref="compound">GroupReply</ref></highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="d5/dae/classTango_1_1GroupAttrReply" kindref="compound">GroupAttrReply</ref><sp/>();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>copy<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><ref refid="d5/dae/classTango_1_1GroupAttrReply" kindref="compound">GroupAttrReply</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/dae/classTango_1_1GroupAttrReply" kindref="compound">GroupAttrReply</ref>&amp;<sp/>src);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><ref refid="d5/dae/classTango_1_1GroupAttrReply" kindref="compound">GroupAttrReply</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="de/deb/classTango_1_1GroupReply_1a4fe578ba1fcd03239b7dc589ffc1af77" kindref="member">dev_name</ref>,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="de/deb/classTango_1_1GroupReply_1a13564b3e6df04a5257b2592b94a07d88" kindref="member">obj_name</ref>,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DeviceAttribute&amp;<sp/>data);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><ref refid="d5/dae/classTango_1_1GroupAttrReply" kindref="compound">GroupAttrReply</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dev_name,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>obj_name,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DevFailed&amp;<sp/>exception);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><ref refid="d5/dae/classTango_1_1GroupAttrReply" kindref="compound">GroupAttrReply</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dev_name,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>obj_name,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>group_element_enabled);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>dtor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="d5/dae/classTango_1_1GroupAttrReply" kindref="compound">GroupAttrReply</ref><sp/>();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>data<sp/>accessor<sp/>(may<sp/>throw<sp/>Tango::DevFailed)</highlight></codeline>
<codeline lineno="369"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/>DeviceAttribute&amp;<sp/><ref refid="d5/dae/classTango_1_1GroupAttrReply_1adac0b677ce81ec7e66f3c53872adea86" kindref="member">get_data</ref><sp/>();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>template<sp/>data<sp/>exctractor<sp/>method</highlight></codeline>
<codeline lineno="380"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/dae/classTango_1_1GroupAttrReply_1a421f7a196fc46f20b76a2124da30de95" kindref="member">operator&gt;&gt; </ref>(T&amp;<sp/>dest);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>data:<sp/>valid<sp/>if<sp/>GroupReply::has_failed_m<sp/>set<sp/>to<sp/>false<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>GroupReply::enabled_m<sp/>set<sp/>to<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>DeviceAttribute<sp/>data_m;</highlight></codeline>
<codeline lineno="385"><highlight class="normal">};</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>GroupReplyList<sp/>:<sp/>a<sp/>simple<sp/>list<sp/>of<sp/>GroupReply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight></codeline>
<codeline lineno="403" refid="dc/d11/classTango_1_1GroupReplyList" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dc/d11/classTango_1_1GroupReplyList" kindref="compound">GroupReplyList</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::vector&lt;GroupReply&gt;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;GroupReply&gt;<sp/>Inherited;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="dc/d11/classTango_1_1GroupReplyList_1a2697825715974a353728f0d4d5658112" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><ref refid="dc/d11/classTango_1_1GroupReplyList" kindref="compound">GroupReplyList</ref>();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>dtor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="dc/d11/classTango_1_1GroupReplyList" kindref="compound">GroupReplyList</ref>();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>has_failed<sp/>accessor</highlight></codeline>
<codeline lineno="426" refid="dc/d11/classTango_1_1GroupReplyList_1a7221a5debe8d58e6679ac2e234b3384d" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d11/classTango_1_1GroupReplyList_1a7221a5debe8d58e6679ac2e234b3384d" kindref="member">has_failed</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>has_failed_m;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>reset<sp/>the<sp/>error<sp/>list</highlight></codeline>
<codeline lineno="435" refid="dc/d11/classTango_1_1GroupReplyList_1afe1cb42828f48dd701a0e8d250470e93" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d11/classTango_1_1GroupReplyList_1afe1cb42828f48dd701a0e8d250470e93" kindref="member">reset</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>has_failed_m<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>push_back<sp/>overload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>push_back<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/deb/classTango_1_1GroupReply" kindref="compound">GroupReply</ref>&amp;<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r.<ref refid="de/deb/classTango_1_1GroupReply_1aec0def5a9df786134dc9cb8c66c21cb8" kindref="member">has_failed</ref>())<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>has_failed_m<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>Inherited::push_back(r);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>has_failed_m:<sp/>true<sp/>if<sp/>at<sp/>least<sp/>one<sp/>error<sp/>occurred,<sp/>false<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_failed_m;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">};</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>GroupCmdReplyList<sp/>:<sp/>a<sp/>simple<sp/>list<sp/>of<sp/>GroupCmdReply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight></codeline>
<codeline lineno="469" refid="d8/d3d/classTango_1_1GroupCmdReplyList" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d8/d3d/classTango_1_1GroupCmdReplyList" kindref="compound">GroupCmdReplyList</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::vector&lt;GroupCmdReply&gt;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;GroupCmdReply&gt;<sp/>Inherited;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="d8/d3d/classTango_1_1GroupCmdReplyList_1a2697825715974a353728f0d4d5658112" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><ref refid="d8/d3d/classTango_1_1GroupCmdReplyList" kindref="compound">GroupCmdReplyList</ref>();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>dtor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="d8/d3d/classTango_1_1GroupCmdReplyList" kindref="compound">GroupCmdReplyList</ref>();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>has_failed<sp/>accessor<sp/>method</highlight></codeline>
<codeline lineno="492" refid="d8/d3d/classTango_1_1GroupCmdReplyList_1a453e217deecfd463162892d471f181d6" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d3d/classTango_1_1GroupCmdReplyList_1a453e217deecfd463162892d471f181d6" kindref="member">has_failed</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>has_failed_m;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>reset<sp/>the<sp/>error<sp/>list</highlight></codeline>
<codeline lineno="501" refid="d8/d3d/classTango_1_1GroupCmdReplyList_1a30946c9b34cf1275f3e4b442652935e2" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d3d/classTango_1_1GroupCmdReplyList_1a30946c9b34cf1275f3e4b442652935e2" kindref="member">reset</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>has_failed_m<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>push_back<sp/>overload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>push_back<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d33/classTango_1_1GroupCmdReply" kindref="compound">GroupCmdReply</ref>&amp;<sp/>cr)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cr.<ref refid="de/deb/classTango_1_1GroupReply_1aec0def5a9df786134dc9cb8c66c21cb8" kindref="member">has_failed</ref>())<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>has_failed_m<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>Inherited::push_back(cr);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>has_failed_m:<sp/>true<sp/>if<sp/>at<sp/>least<sp/>one<sp/>error<sp/>occurred,<sp/>false<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_failed_m;</highlight></codeline>
<codeline lineno="516"><highlight class="normal">};</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>GroupAttrReplyList<sp/>:<sp/>a<sp/>simple<sp/>list<sp/>of<sp/>GroupAttrReply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight></codeline>
<codeline lineno="534" refid="db/daa/classTango_1_1GroupAttrReplyList" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="db/daa/classTango_1_1GroupAttrReplyList" kindref="compound">GroupAttrReplyList</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::vector&lt;GroupAttrReply&gt;</highlight></codeline>
<codeline lineno="535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;GroupAttrReply&gt;<sp/>Inherited;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="db/daa/classTango_1_1GroupAttrReplyList_1a2697825715974a353728f0d4d5658112" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><ref refid="db/daa/classTango_1_1GroupAttrReplyList" kindref="compound">GroupAttrReplyList</ref>();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>dtor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="db/daa/classTango_1_1GroupAttrReplyList" kindref="compound">GroupAttrReplyList</ref>();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>has_failed<sp/>accessor<sp/>method</highlight></codeline>
<codeline lineno="557" refid="db/daa/classTango_1_1GroupAttrReplyList_1a1737797b7a4585b948752ef80c915fb2" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/daa/classTango_1_1GroupAttrReplyList_1a1737797b7a4585b948752ef80c915fb2" kindref="member">has_failed</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>has_failed_m;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>reset<sp/>the<sp/>error<sp/>list</highlight></codeline>
<codeline lineno="566" refid="db/daa/classTango_1_1GroupAttrReplyList_1a27620a4010723a1649c0dd810b4e1367" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/daa/classTango_1_1GroupAttrReplyList_1a27620a4010723a1649c0dd810b4e1367" kindref="member">reset</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>has_failed_m<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>push_back<sp/>overload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>push_back<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/dae/classTango_1_1GroupAttrReply" kindref="compound">GroupAttrReply</ref>&amp;<sp/>ar)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ar.<ref refid="de/deb/classTango_1_1GroupReply_1aec0def5a9df786134dc9cb8c66c21cb8" kindref="member">has_failed</ref>())<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>has_failed_m<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>Inherited::push_back(ar);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>has_failed_m:<sp/>true<sp/>if<sp/>at<sp/>least<sp/>one<sp/>error<sp/>occurred,<sp/>false<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_failed_m;</highlight></codeline>
<codeline lineno="581"><highlight class="normal">};</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>GroupElementFactory<sp/>:<sp/>a<sp/>GroupElement<sp/>factory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="da/da9/classTango_1_1GroupElementFactory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/da9/classTango_1_1GroupElementFactory" kindref="compound">GroupElementFactory</ref></highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588" refid="da/da9/classTango_1_1GroupElementFactory_1a2697825715974a353728f0d4d5658112" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref>;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>instanciatethe<sp/>GroupElement<sp/>which<sp/>name<sp/>matches<sp/>the<sp/>specified<sp/>pattern<sp/>with<sp/>the<sp/>specified<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>timeout<sp/>=<sp/>-1<sp/>=&gt;<sp/>do<sp/>not<sp/>change<sp/>the<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="de/ddf/namespaceTango_1ab9ef33527260f0bc7f0bf168143f55a0" kindref="member">GroupElements</ref><sp/>instanciate<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmo<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parse_name<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>p,<sp/>std::string<sp/>&amp;db_host,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;db_port,<sp/>std::string<sp/>&amp;dev_pattern);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>forbidden<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><ref refid="da/da9/classTango_1_1GroupElementFactory" kindref="compound">GroupElementFactory</ref>();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>~<ref refid="da/da9/classTango_1_1GroupElementFactory" kindref="compound">GroupElementFactory</ref>();</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><ref refid="da/da9/classTango_1_1GroupElementFactory" kindref="compound">GroupElementFactory</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/da9/classTango_1_1GroupElementFactory" kindref="compound">GroupElementFactory</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="600"><highlight class="normal">};</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>GroupElement:<sp/>base<sp/>class<sp/>for<sp/>all<sp/>tango<sp/>group<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605" refid="df/d46/classTango_1_1GroupElement" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref></highlight></codeline>
<codeline lineno="606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="607" refid="df/d46/classTango_1_1GroupElement_1a2697825715974a353728f0d4d5658112" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>Group<sp/>management<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement_1a64f031e079125a08bdab73d21c906c86" kindref="member">contains</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>n,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>DeviceProxy*<sp/><ref refid="df/d46/classTango_1_1GroupElement_1a78f61062a50404b224883dab23c08168" kindref="member">get_device</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>n)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>DeviceProxy*<sp/><ref refid="df/d46/classTango_1_1GroupElement_1a78f61062a50404b224883dab23c08168" kindref="member">get_device</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>idx)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>DeviceProxy*<sp/><ref refid="df/d46/classTango_1_1GroupElement_1aef54618c81a0042334be5c13d0326346" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>idx)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>a<sp/>la<sp/>DeviceProxy<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement_1ab004b0e82f6a7cd7db714ca42b3b1d8a" kindref="member">ping</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement_1aa4ed03d3347901cecadbeff4c9b465a3" kindref="member">set_timeout_millis</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmo_ms)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>Misc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="df/d46/classTango_1_1GroupElement_1a1313406261e09af44efae5b49ce4fc5a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="df/d46/classTango_1_1GroupElement_1a1313406261e09af44efae5b49ce4fc5a" kindref="member">get_name</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638" refid="df/d46/classTango_1_1GroupElement_1a44dea90469791483f36bda324fa67ea1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="df/d46/classTango_1_1GroupElement_1a44dea90469791483f36bda324fa67ea1" kindref="member">get_fully_qualified_name</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parent-&gt;<ref refid="df/d46/classTango_1_1GroupElement_1a44dea90469791483f36bda324fa67ea1" kindref="member">get_fully_qualified_name</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>+<sp/>name;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="df/d46/classTango_1_1GroupElement_1a8b81d29966bfd9d42bafb34bd111fab0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement_1a8b81d29966bfd9d42bafb34bd111fab0" kindref="member">enable</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649" refid="df/d46/classTango_1_1GroupElement_1ac81b46293f4d775658c433b83759ecf2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement_1ac81b46293f4d775658c433b83759ecf2" kindref="member">disable</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="df/d46/classTango_1_1GroupElement_1aec8981c295f17883ad1b05bcee4f78da" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement_1aec8981c295f17883ad1b05bcee4f78da" kindref="member">is_enabled</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>enabled;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement_1ac38ec8a0666000aaeb0be72a538555f6" kindref="member">name_equals</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>n);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement_1ac59fc656076f55359d8d3b000d0940e9" kindref="member">name_matches</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>n);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement_1af8ebd6508a22f24c40886f97f879c54f" kindref="member">dump</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent_level<sp/>=<sp/>0)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement_1af8ebd6508a22f24c40886f97f879c54f" kindref="member">dump</ref><sp/>(TangoSys_OMemStream&amp;<sp/>oms,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent_level<sp/>=<sp/>0)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement_1a5ca539735117e31e002587883e508ca5" kindref="member">is_connected</ref>();</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor:<sp/>creates<sp/>an<sp/>GroupElement<sp/>named<sp/>&lt;name&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref>*<sp/>parent<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>dtor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement_1a9e4421b2ad2ad0c72dfa587b6912c811" kindref="member">~GroupElement</ref>();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>element<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>parent<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref>*<sp/>parent;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>enabled:<sp/>true<sp/>is<sp/>this<sp/>group<sp/>member<sp/>is<sp/>enabled,<sp/>false<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>forbidden<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref><sp/>();</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref>&amp;);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref>&amp;);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>element<sp/>name<sp/>tokenizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><ref refid="de/ddf/namespaceTango_1ad1538aefe5a40c681e41341d087cc7c9" kindref="member">TokenList</ref><sp/>tokenize_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>p);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>element<sp/>name<sp/>pattern<sp/>matching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>match_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/ddf/namespaceTango_1ad1538aefe5a40c681e41341d087cc7c9" kindref="member">TokenList</ref>&amp;<sp/>tokens);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>element<sp/>identification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_device_i<sp/>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_group_i<sp/>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>group<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>get_size_i<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>element<sp/>searching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref>*<sp/>find_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>n,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>private<sp/>part<sp/>of<sp/>the<sp/>asynch<sp/>command<sp/>exec.<sp/>impl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>command_inout_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fgt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>command_inout_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DeviceData&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fgt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d8/d3d/classTango_1_1GroupCmdReplyList" kindref="compound">GroupCmdReplyList</ref><sp/>command_inout_reply_i<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>private<sp/>part<sp/>of<sp/>the<sp/>asynch<sp/>attribute(s)<sp/>reading<sp/>impl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>read_attribute_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>a,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="db/daa/classTango_1_1GroupAttrReplyList" kindref="compound">GroupAttrReplyList</ref><sp/>read_attribute_reply_i<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>read_attributes_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>al,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="db/daa/classTango_1_1GroupAttrReplyList" kindref="compound">GroupAttrReplyList</ref><sp/>read_attributes_reply_i<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>private<sp/>part<sp/>of<sp/>the<sp/>asynch<sp/>attribute<sp/>writting<sp/>impl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>write_attribute_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DeviceAttribute&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="dc/d11/classTango_1_1GroupReplyList" kindref="compound">GroupReplyList</ref><sp/>write_attribute_reply_i<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>set<sp/>the<sp/>parent<sp/>element,<sp/>returns<sp/>previous<sp/>parent<sp/>or<sp/>0<sp/>(null)<sp/>if<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref>*<sp/>set_parent<sp/>(<ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref>*<sp/>_parent);</highlight></codeline>
<codeline lineno="718"><highlight class="normal">};</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>Group:<sp/>actual<sp/>tango<sp/>group<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="734" refid="d4/d6d/classTango_1_1Group" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref></highlight></codeline>
<codeline lineno="735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;long,<sp/>bool&gt;<sp/>AsynchRequestDesc;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>AsynchRequestDesc::iterator<sp/>AsynchRequestDescIt;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>AsynchRequestDesc::value_type<sp/>AsynchRequestDescVal;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>Ctor<sp/>&amp;<sp/>Dtor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight></codeline>
<codeline lineno="754"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1acd7a0b40d37852923131e9bce68dd9ff" kindref="member">~Group</ref>();</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>Group<sp/>management<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight></codeline>
<codeline lineno="787"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a2cbaa3bf6cecdb6fb33a387c79556e58" kindref="member">add</ref><sp/>(<ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref>*<sp/>group,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmo_ms<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a2cbaa3bf6cecdb6fb33a387c79556e58" kindref="member">add</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>pattern,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmo_ms<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a2cbaa3bf6cecdb6fb33a387c79556e58" kindref="member">add</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>patterns,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmo_ms<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GEN_DOC</highlight></codeline>
<codeline lineno="822"><highlight class="preprocessor"></highlight><highlight class="normal">stepper_motor</highlight><highlight class="comment">/*&quot;);</highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/>*<sp/>@param<sp/>[in]<sp/>pattern<sp/>The<sp/>device<sp/>selection<sp/>pattern</highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/>*<sp/>@param<sp/>[in]<sp/>fwd<sp/>The<sp/>forward<sp/>flag</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="857"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>pattern,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>patterns,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a12404b76c3e64df47467a1260591e7df" kindref="member">remove_all</ref><sp/>();</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a2885b00242d3a2d199836e48186dd71e" kindref="member">contains</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>pattern,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>DeviceProxy*<sp/><ref refid="d4/d6d/classTango_1_1Group_1adc7d5db7e814e378bf30f940865885b8" kindref="member">get_device</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>device_name);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>DeviceProxy*<sp/><ref refid="d4/d6d/classTango_1_1Group_1adc7d5db7e814e378bf30f940865885b8" kindref="member">get_device</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>DeviceProxy*<sp/><ref refid="d4/d6d/classTango_1_1Group_1aea3b781cd10d28770cb584c55c065534" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref>*<sp/><ref refid="d4/d6d/classTango_1_1Group_1a75ddf85f5805e6e99656cbe554ecf96e" kindref="member">get_group</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>group_name);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a1afb6e934e20fb757538b873fef265e5" kindref="member">get_size</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="d4/d6d/classTango_1_1Group_1a35a3426e304c3d87607997261aff1d22" kindref="member">get_device_list</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref>*<sp/>get_parent<sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement_1a8b81d29966bfd9d42bafb34bd111fab0" kindref="member">enable</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>device_name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement_1ac81b46293f4d775658c433b83759ecf2" kindref="member">disable</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>device_name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement_1aec8981c295f17883ad1b05bcee4f78da" kindref="member">is_enabled</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>device_name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref><sp/>*<sp/>ge<sp/>=<sp/>this-&gt;find_i(device_name,<sp/>fwd);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ge<sp/>?<sp/>ge-&gt;<ref refid="df/d46/classTango_1_1GroupElement_1aec8981c295f17883ad1b05bcee4f78da" kindref="member">is_enabled</ref>()<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_root_group<sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>a<sp/>la<sp/>DeviceProxy<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight></codeline>
<codeline lineno="1068"><highlight class="comment"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>misc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight></codeline>
<codeline lineno="1081"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1aa7cd5c6f1be1a85c244c7a4ec99081ec" kindref="member">ping</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a92242b89511557c3296480ee19b790b2" kindref="member">set_timeout_millis</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmo_ms);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>command<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight></codeline>
<codeline lineno="1110"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="d8/d3d/classTango_1_1GroupCmdReplyList" kindref="compound">GroupCmdReplyList</ref><sp/><ref refid="d4/d6d/classTango_1_1Group_1a8511861bcd0723b9e726e2bfaac6de3a" kindref="member">command_inout</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><ref refid="d8/d3d/classTango_1_1GroupCmdReplyList" kindref="compound">GroupCmdReplyList</ref><sp/><ref refid="d4/d6d/classTango_1_1Group_1a8511861bcd0723b9e726e2bfaac6de3a" kindref="member">command_inout</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DeviceData&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><ref refid="d8/d3d/classTango_1_1GroupCmdReplyList" kindref="compound">GroupCmdReplyList</ref><sp/><ref refid="d4/d6d/classTango_1_1Group_1a8511861bcd0723b9e726e2bfaac6de3a" kindref="member">command_inout</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;DeviceData&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="d8/d3d/classTango_1_1GroupCmdReplyList" kindref="compound">GroupCmdReplyList</ref><sp/><ref refid="d4/d6d/classTango_1_1Group_1a8511861bcd0723b9e726e2bfaac6de3a" kindref="member">command_inout</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a53d95994ae0c6e3836e33f8acef6a038" kindref="member">command_inout_asynch</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fgt<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a53d95994ae0c6e3836e33f8acef6a038" kindref="member">command_inout_asynch</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DeviceData&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fgt<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a53d95994ae0c6e3836e33f8acef6a038" kindref="member">command_inout_asynch</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;DeviceData&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fgt<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a53d95994ae0c6e3836e33f8acef6a038" kindref="member">command_inout_asynch</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fgt<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><ref refid="d8/d3d/classTango_1_1GroupCmdReplyList" kindref="compound">GroupCmdReplyList</ref><sp/><ref refid="d4/d6d/classTango_1_1Group_1abed06d2a84d479a13c2e98781af748e8" kindref="member">command_inout_reply</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>attribute(s)<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight></codeline>
<codeline lineno="1323"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="db/daa/classTango_1_1GroupAttrReplyList" kindref="compound">GroupAttrReplyList</ref><sp/><ref refid="d4/d6d/classTango_1_1Group_1a3c584b30ee4e69eed2de59cb548c4134" kindref="member">read_attribute</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>a,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><ref refid="db/daa/classTango_1_1GroupAttrReplyList" kindref="compound">GroupAttrReplyList</ref><sp/><ref refid="d4/d6d/classTango_1_1Group_1ab4088df9970f1f1c7d6ae8c29563369f" kindref="member">read_attributes</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>al,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a08fa50b55ebad69d6fd819f658703997" kindref="member">read_attribute_asynch</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>a,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a9431b4c0673e3824c31b00028e894d31" kindref="member">read_attributes_asynch</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>al,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><ref refid="db/daa/classTango_1_1GroupAttrReplyList" kindref="compound">GroupAttrReplyList</ref><sp/><ref refid="d4/d6d/classTango_1_1Group_1a9c580ba756e84843f29e126efb8c1986" kindref="member">read_attribute_reply</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><ref refid="db/daa/classTango_1_1GroupAttrReplyList" kindref="compound">GroupAttrReplyList</ref><sp/><ref refid="d4/d6d/classTango_1_1Group_1ab1a83261058e5c52803e502c01380b79" kindref="member">read_attributes_reply</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>attribute<sp/>writting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight></codeline>
<codeline lineno="1429"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="dc/d11/classTango_1_1GroupReplyList" kindref="compound">GroupReplyList</ref><sp/><ref refid="d4/d6d/classTango_1_1Group_1a64da6f972d7dca15b192c66226e3d4c7" kindref="member">write_attribute</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DeviceAttribute&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><ref refid="dc/d11/classTango_1_1GroupReplyList" kindref="compound">GroupReplyList</ref><sp/><ref refid="d4/d6d/classTango_1_1Group_1a64da6f972d7dca15b192c66226e3d4c7" kindref="member">write_attribute</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;DeviceAttribute&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="dc/d11/classTango_1_1GroupReplyList" kindref="compound">GroupReplyList</ref><sp/><ref refid="d4/d6d/classTango_1_1Group_1a64da6f972d7dca15b192c66226e3d4c7" kindref="member">write_attribute</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a2ead1c134a086855da1e809aa8f13d03" kindref="member">write_attribute_asynch</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DeviceAttribute&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a2ead1c134a086855da1e809aa8f13d03" kindref="member">write_attribute_asynch</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;DeviceAttribute&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a2ead1c134a086855da1e809aa8f13d03" kindref="member">write_attribute_asynch</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;<sp/>&amp;d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><ref refid="dc/d11/classTango_1_1GroupReplyList" kindref="compound">GroupReplyList</ref><sp/><ref refid="d4/d6d/classTango_1_1Group_1aa300f78715baea10d390b7e7489e0506" kindref="member">write_attribute_reply</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>Misc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dump<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent_level<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dump<sp/>(TangoSys_OMemStream&amp;<sp/>oms,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent_level<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>next_asynch_request_id<sp/>();</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>add_i<sp/>(<ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref>*<sp/>e,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>remove_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref>*<sp/>find_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>n,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><ref refid="de/ddf/namespaceTango_1ab9ef33527260f0bc7f0bf168143f55a0" kindref="member">GroupElements</ref><sp/>get_hiearchy<sp/>();</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref>*<sp/>get_group_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>n);</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>get_size_i<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>push_async_request<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>rid,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwded);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pop_async_request<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>rid);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_device_i<sp/>();</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_group_i<sp/>();</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TANGO_GROUP_HAS_THREAD_SAFE_IMPL</highlight></codeline>
<codeline lineno="1591"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>omni_mutex<sp/>elements_mutex;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1593"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><ref refid="de/ddf/namespaceTango_1ab9ef33527260f0bc7f0bf168143f55a0" kindref="member">GroupElements</ref><sp/>elements;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>asynch<sp/>request<sp/>repository</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/>AsynchRequestDesc<sp/>arp;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>pseudo<sp/>asynch.<sp/>req.<sp/>id<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>asynch_req_id;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>forbidden<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref><sp/>();</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref>&amp;);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref>&amp;);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>private<sp/>part<sp/>of<sp/>the<sp/>asynch<sp/>impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>command_inout_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fgt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>command_inout_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DeviceData&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fgt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>command_inout_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;DeviceData&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fgt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>command_inout_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="comment">/*const*/</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fgt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d8/d3d/classTango_1_1GroupCmdReplyList" kindref="compound">GroupCmdReplyList</ref><sp/>command_inout_reply_i<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>read_attribute_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>a,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="db/daa/classTango_1_1GroupAttrReplyList" kindref="compound">GroupAttrReplyList</ref><sp/>read_attribute_reply_i<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>read_attributes_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>al,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="db/daa/classTango_1_1GroupAttrReplyList" kindref="compound">GroupAttrReplyList</ref><sp/>read_attributes_reply_i<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms);</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>write_attribute_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DeviceAttribute&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>write_attribute_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;DeviceAttribute&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>write_attribute_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>a,<sp/></highlight><highlight class="comment">/*const*/</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="dc/d11/classTango_1_1GroupReplyList" kindref="compound">GroupReplyList</ref><sp/>write_attribute_reply_i<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>GroupDeviceElement:<sp/>a<sp/>device<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627" refid="da/d18/classTango_1_1GroupDeviceElement" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d18/classTango_1_1GroupDeviceElement" kindref="compound">GroupDeviceElement</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="df/d46/classTango_1_1GroupElement" kindref="compound">GroupElement</ref></highlight></codeline>
<codeline lineno="1628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1629" refid="da/d18/classTango_1_1GroupDeviceElement_1a2697825715974a353728f0d4d5658112" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Group</ref>;</highlight></codeline>
<codeline lineno="1630" refid="da/d18/classTango_1_1GroupDeviceElement_1acf9aa16af65e1d1aa7375bf81409d9f0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/da9/classTango_1_1GroupElementFactory" kindref="compound">GroupElementFactory</ref>;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>Group<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>DeviceProxy*<sp/><ref refid="da/d18/classTango_1_1GroupDeviceElement_1a5abe1c9a7c93eb66bca1e756833fdadd" kindref="member">get_device</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>n);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>DeviceProxy*<sp/><ref refid="da/d18/classTango_1_1GroupDeviceElement_1a5abe1c9a7c93eb66bca1e756833fdadd" kindref="member">get_device</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>DeviceProxy*<sp/><ref refid="da/d18/classTango_1_1GroupDeviceElement_1a8230a10f49f459944de457deaf2d8915" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>a<sp/>la<sp/>DeviceProxy<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d18/classTango_1_1GroupDeviceElement_1a326af717a2dde9c75f60ab0ed6b35c2f" kindref="member">ping</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d18/classTango_1_1GroupDeviceElement_1a7e318af767b4030e04d3104e318da0b5" kindref="member">set_timeout_millis</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmo_ms);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>Misc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d18/classTango_1_1GroupDeviceElement_1a14f1b125cf6cf5eae91c1a06cadc41a9" kindref="member">dump</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent_level<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d18/classTango_1_1GroupDeviceElement_1a14f1b125cf6cf5eae91c1a06cadc41a9" kindref="member">dump</ref><sp/>(TangoSys_OMemStream&amp;<sp/>oms,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent_level<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d18/classTango_1_1GroupDeviceElement_1af229babcc705fac5bf51edd7715a3496" kindref="member">is_connected</ref>();</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>the<sp/>device<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/>DeviceProxy<sp/>*dp;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>asynch<sp/>request<sp/>repository</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><ref refid="de/ddf/namespaceTango_1a168c199249350bb009e168211ed97747" kindref="member">AsynchRequestRep</ref><sp/>arp;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>forbidden<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><ref refid="da/d18/classTango_1_1GroupDeviceElement" kindref="compound">GroupDeviceElement</ref><sp/>();</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><ref refid="da/d18/classTango_1_1GroupDeviceElement" kindref="compound">GroupDeviceElement</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d18/classTango_1_1GroupDeviceElement" kindref="compound">GroupDeviceElement</ref>&amp;);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><ref refid="da/d18/classTango_1_1GroupDeviceElement" kindref="compound">GroupDeviceElement</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d18/classTango_1_1GroupDeviceElement" kindref="compound">GroupDeviceElement</ref>&amp;);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor:<sp/>creates<sp/>an<sp/>GroupDeviceElement<sp/>named<sp/>&lt;name&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><ref refid="da/d18/classTango_1_1GroupDeviceElement" kindref="compound">GroupDeviceElement</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>ctor:<sp/>creates<sp/>a<sp/>GroupDeviceElement<sp/>named<sp/>&lt;name&gt;<sp/>with<sp/>timeout<sp/>set<sp/>to<sp/>tmo_ms<sp/>milliseconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><ref refid="da/d18/classTango_1_1GroupDeviceElement" kindref="compound">GroupDeviceElement</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmo_ms);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>dtor:<sp/>release<sp/>resources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="da/d18/classTango_1_1GroupDeviceElement" kindref="compound">GroupDeviceElement</ref>();</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>build<sp/>connection<sp/>to<sp/>the<sp/>device<sp/>(may<sp/>throw<sp/>DevFailed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/>DeviceProxy<sp/>*<sp/>connect<sp/>();</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>close<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>disconnect<sp/>();</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>a<sp/>trick<sp/>to<sp/>get<sp/>a<sp/>valid<sp/>device<sp/>proxy<sp/>or<sp/>an<sp/>exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>DeviceProxy*<sp/>dev_proxy<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dp<sp/>?<sp/>dp<sp/>:<sp/>connect();</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>element<sp/>identification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_device_i<sp/>();</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_group_i<sp/>();</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>size<sp/>(group<sp/>interface)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>get_size_i<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-<sp/>private<sp/>part<sp/>of<sp/>the<sp/>asynch<sp/>impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>command_inout_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fgt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>command_inout_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DeviceData&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fgt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari);</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d8/d3d/classTango_1_1GroupCmdReplyList" kindref="compound">GroupCmdReplyList</ref><sp/>command_inout_reply_i<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>read_attribute_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>a,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="db/daa/classTango_1_1GroupAttrReplyList" kindref="compound">GroupAttrReplyList</ref><sp/>read_attribute_reply_i<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>read_attributes_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>al,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="db/daa/classTango_1_1GroupAttrReplyList" kindref="compound">GroupAttrReplyList</ref><sp/>read_attributes_reply_i<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>write_attribute_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DeviceAttribute&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="dc/d11/classTango_1_1GroupReplyList" kindref="compound">GroupReplyList</ref><sp/>write_attribute_reply_i<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>req_id,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmo_ms);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GroupCmdReply::operator&gt;&gt;<sp/>template<sp/>impl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1716" refid="d9/d33/classTango_1_1GroupCmdReply_1a54b600d46c948acd7d1943f6d9738943" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d33/classTango_1_1GroupCmdReply_1a54b600d46c948acd7d1943f6d9738943" kindref="member">GroupCmdReply::operator&gt;&gt; </ref>(T&amp;<sp/>dest)</highlight></codeline>
<codeline lineno="1717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GroupReply::group_element_enabled_m<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exception_enabled)</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Tango::DevErrorList<sp/>errors(1);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errors.length(1);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].severity<sp/>=<sp/>Tango::ERR;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].desc<sp/>=<sp/>Tango::string_dup(</highlight><highlight class="stringliteral">&quot;no<sp/>available<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].reason<sp/>=<sp/>Tango::string_dup(</highlight><highlight class="stringliteral">&quot;no<sp/>data<sp/>-<sp/>group<sp/>member<sp/>is<sp/>disabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].origin<sp/>=<sp/>Tango::string_dup(</highlight><highlight class="stringliteral">&quot;GroupCmdReply::operator&gt;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DevFailed<sp/>df(errors);</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>df;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GroupReply::has_failed_m<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exception_enabled)</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>GroupReply::exception_m;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>std::bitset&lt;DeviceData::numFlags&gt;<sp/>bs;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/>data_m.exceptions(exception_enabled<sp/>?<sp/>bs.set()<sp/>:<sp/>bs.reset());</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>data_m<sp/>&gt;&gt;<sp/>dest;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DevFailed&amp;<sp/>df)</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GroupReply::exception_m<sp/>=<sp/>df;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exception_enabled)</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>GroupReply::exception_m;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exception_enabled)</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tango::DevErrorList<sp/>errors(1);</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors.length(1);</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].severity<sp/>=<sp/>Tango::ERR;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].desc<sp/>=<sp/>Tango::string_dup(</highlight><highlight class="stringliteral">&quot;unknown<sp/>exception<sp/>caught&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].reason<sp/>=<sp/>Tango::string_dup(</highlight><highlight class="stringliteral">&quot;an<sp/>error<sp/>occured<sp/>while<sp/>trying<sp/>to<sp/>extract<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].origin<sp/>=<sp/>Tango::string_dup(</highlight><highlight class="stringliteral">&quot;GroupCmdReply::operator&gt;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DevFailed<sp/>df(errors);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GroupReply::exception_m<sp/>=<sp/>df;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>GroupReply::exception_m;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GroupAttrReply::operator&gt;&gt;<sp/>template<sp/>impl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1778" refid="d5/dae/classTango_1_1GroupAttrReply_1a421f7a196fc46f20b76a2124da30de95" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/dae/classTango_1_1GroupAttrReply_1a421f7a196fc46f20b76a2124da30de95" kindref="member">GroupAttrReply::operator&gt;&gt; </ref>(T&amp;<sp/>dest)</highlight></codeline>
<codeline lineno="1779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GroupReply::group_element_enabled_m<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exception_enabled)</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Tango::DevErrorList<sp/>errors(1);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors.length(1);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].severity<sp/>=<sp/>Tango::ERR;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].desc<sp/>=<sp/>Tango::string_dup(</highlight><highlight class="stringliteral">&quot;no<sp/>available<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].reason<sp/>=<sp/>Tango::string_dup(</highlight><highlight class="stringliteral">&quot;no<sp/>data<sp/>-<sp/>group<sp/>member<sp/>is<sp/>disabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].origin<sp/>=<sp/>Tango::string_dup(</highlight><highlight class="stringliteral">&quot;GroupAttrReply::operator&gt;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DevFailed<sp/>df(errors);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>df;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GroupReply::has_failed_m<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exception_enabled)</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>GroupReply::exception_m;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>std::bitset&lt;DeviceAttribute::numFlags&gt;<sp/>bs;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/>data_m.exceptions(exception_enabled<sp/>?<sp/>bs.set()<sp/>:<sp/>bs.reset());</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>data_m<sp/>&gt;&gt;<sp/>dest;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DevFailed&amp;<sp/>df)</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GroupReply::exception_m<sp/>=<sp/>df;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exception_enabled)</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>GroupReply::exception_m;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exception_enabled)</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tango::DevErrorList<sp/>errors(1);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors.length(1);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].severity<sp/>=<sp/>Tango::ERR;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].desc<sp/>=<sp/>Tango::string_dup(</highlight><highlight class="stringliteral">&quot;unknown<sp/>exception<sp/>caught&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].reason<sp/>=<sp/>Tango::string_dup(</highlight><highlight class="stringliteral">&quot;an<sp/>error<sp/>occured<sp/>while<sp/>trying<sp/>to<sp/>extract<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors[0].origin<sp/>=<sp/>Tango::string_dup(</highlight><highlight class="stringliteral">&quot;GroupAttrReply::operator&gt;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DevFailed<sp/>df(errors);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GroupReply::exception_m<sp/>=<sp/>df;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>GroupReply::exception_m;</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Group::command_inout<sp/>template<sp/>impl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1841" refid="d4/d6d/classTango_1_1Group_1ad54f51f9f9bbac8ad686199245274bbf" refkind="member"><highlight class="normal"><ref refid="d8/d3d/classTango_1_1GroupCmdReplyList" kindref="compound">GroupCmdReplyList</ref><sp/><ref refid="d4/d6d/classTango_1_1Group_1a8511861bcd0723b9e726e2bfaac6de3a" kindref="member">Group::command_inout</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd)</highlight></codeline>
<codeline lineno="1842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>command_inout_asynch_i&lt;T&gt;(c,<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">std::vector&lt;T&gt;&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>fwd,<sp/>-1);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>command_inout_reply_i(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Group::command_inout_asynch<sp/>template<sp/>impl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1851" refid="d4/d6d/classTango_1_1Group_1a17b53cb8fb55e3b96d056cb9971aaab4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a53d95994ae0c6e3836e33f8acef6a038" kindref="member">Group::command_inout_asynch</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fgt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd)</highlight></codeline>
<codeline lineno="1852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>command_inout_asynch_i&lt;T&gt;(c,<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">std::vector&lt;T&gt;&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d),<sp/>fgt,<sp/>fwd,<sp/>-1);</highlight></codeline>
<codeline lineno="1854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Group::command_inout_asynch<sp/>template<sp/>impl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Group::command_inout_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>c,<sp/></highlight><highlight class="comment">/*const*/</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fgt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari)</highlight></codeline>
<codeline lineno="1861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>TANGO_GROUP_HAS_THREAD_SAFE_IMPL</highlight></codeline>
<codeline lineno="1863"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>omni_mutex_lock<sp/>guard(elements_mutex);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="1865"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>gsize<sp/>=<sp/>get_size_i(fwd);</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gsize<sp/>!=<sp/>static_cast&lt;long&gt;(d.size()))</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/>TangoSys_OMemStream<sp/>desc;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>desc<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>size<sp/>of<sp/>the<sp/>input<sp/>argument<sp/>list<sp/>must<sp/>equal<sp/>the<sp/>number<sp/>of<sp/>device<sp/>in<sp/>the<sp/>group&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>[expected:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>gsize</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>got:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>d.size()</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>ends;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/>ApiDataExcept::throw_exception((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="de/ddf/namespaceTango_1a5ef89a7a60f38a9417dbed9cf5313b5d" kindref="member">API_MethodArgument</ref>,</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)desc.str().c_str(),</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;Group::command_inout_asynch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ari<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/>ari<sp/>=<sp/>next_asynch_request_id();</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>j<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>elements.size();<sp/>i++)</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elements[i]-&gt;is_device_i())</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Tango::DeviceData<sp/>dd;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dd<sp/>&lt;&lt;<sp/>d[j++];</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elements[i]-&gt;command_inout_asynch_i(c,<sp/>dd,<sp/>fgt,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ari);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwd)</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Tango::Group</ref><sp/>*<sp/>g<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Tango::Group</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(elements[i]);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>gsize<sp/>=<sp/>g-&gt;get_size_i(fwd);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>sub_d(d.begin()<sp/>+<sp/>j,<sp/><sp/>d.begin()<sp/>+<sp/>j<sp/>+<sp/>gsize);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Tango::Group</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(elements[i])-&gt;command_inout_asynch_i&lt;T&gt;(c,<sp/>sub_d,<sp/>fgt,<sp/>fwd,<sp/>ari);</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>gsize;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fgt<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>push_async_request(ari,<sp/>fwd);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ari;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Group::write_attribute_asynch<sp/>template<sp/>impl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1914" refid="d4/d6d/classTango_1_1Group_1a5b513a1564a1a4f9e5482dfcef528d0c" refkind="member"><highlight class="normal"><ref refid="dc/d11/classTango_1_1GroupReplyList" kindref="compound">GroupReplyList</ref><sp/><ref refid="d4/d6d/classTango_1_1Group_1a64da6f972d7dca15b192c66226e3d4c7" kindref="member">Group::write_attribute</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd)</highlight></codeline>
<codeline lineno="1915"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>write_attribute_asynch_i&lt;T&gt;(a,<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">std::vector&lt;T&gt;&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d),<sp/>fwd,<sp/>-1);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1aa300f78715baea10d390b7e7489e0506" kindref="member">write_attribute_reply</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Group::write_attribute_asynch<sp/>template<sp/>impl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1924" refid="d4/d6d/classTango_1_1Group_1a187f0b29e02bf82b74f21b55c4252d62" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="d4/d6d/classTango_1_1Group_1a2ead1c134a086855da1e809aa8f13d03" kindref="member">Group::write_attribute_asynch</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd)</highlight></codeline>
<codeline lineno="1925"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>write_attribute_asynch_i&lt;T&gt;(a,<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">std::vector&lt;T&gt;&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d),<sp/>fwd,<sp/>-1);</highlight></codeline>
<codeline lineno="1927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Group::write_attribute_asynch_i<sp/>template<sp/>impl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Group::write_attribute_asynch_i<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>a,<sp/></highlight><highlight class="comment">/*const*/</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fwd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ari)</highlight></codeline>
<codeline lineno="1934"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TANGO_GROUP_HAS_THREAD_SAFE_IMPL</highlight></codeline>
<codeline lineno="1936"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>omni_mutex_lock<sp/>guard(elements_mutex);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1938"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><ref refid="dc/d11/classTango_1_1GroupReplyList" kindref="compound">GroupReplyList</ref><sp/>rl;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>gsize<sp/>=<sp/>get_size_i(fwd);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gsize<sp/>!=<sp/>static_cast&lt;long&gt;(d.size()))</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/>TangoSys_OMemStream<sp/>desc;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>desc<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>size<sp/>of<sp/>the<sp/>input<sp/>argument<sp/>list<sp/>must<sp/>equal<sp/>the<sp/>number<sp/>of<sp/>device<sp/>in<sp/>the<sp/>group&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>[expected:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>gsize</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>got:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>d.size()</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>ends;</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/>ApiDataExcept::throw_exception((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="de/ddf/namespaceTango_1a5ef89a7a60f38a9417dbed9cf5313b5d" kindref="member">API_MethodArgument</ref>,</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)desc.str().c_str(),</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;Group::write_attribute_asynch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ari<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>ari<sp/>=<sp/>next_asynch_request_id();</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/>DeviceAttribute<sp/>da;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/>da.name<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>j<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>elements.size();<sp/>i++)</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elements[i]-&gt;is_device_i())</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>da<sp/>&lt;&lt;<sp/>d[j++];</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elements[i]-&gt;write_attribute_asynch_i(da,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ari);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwd)</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Tango::Group</ref><sp/>*<sp/>g<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Tango::Group</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(elements[i]);</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>gsize<sp/>=<sp/>g-&gt;get_size_i(fwd);</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>sub_d(d.begin()<sp/>+<sp/>j,<sp/><sp/>d.begin()<sp/>+<sp/>j<sp/>+<sp/>gsize);</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="d4/d6d/classTango_1_1Group" kindref="compound">Tango::Group</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(elements[i])-&gt;write_attribute_asynch_i(a,<sp/>sub_d,<sp/>fwd,<sp/>ari);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>gsize;</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/>push_async_request(ari,<sp/>fwd);</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ari;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Tango</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_GROUP_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1986"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tango/workspace/cppTango/include/tango/client/group.h"/>
  </compounddef>
</doxygen>
