<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="d3/d62/classTango_1_1DeviceImpl" kind="class" prot="public" abstract="yes">
    <compoundname>Tango::DeviceImpl</compoundname>
    <basecompoundref prot="public" virt="virtual">Device</basecompoundref>
    <derivedcompoundref refid="d8/dbf/classTango_1_1Device__2Impl" prot="public" virt="non-virtual">Tango::Device_2Impl</derivedcompoundref>
    <innerclass refid="d8/d4e/structTango_1_1DeviceImpl_1_1__FwdWrongConf" prot="private">Tango::DeviceImpl::_FwdWrongConf</innerclass>
    <innerclass refid="d5/d8f/classTango_1_1DeviceImpl_1_1DeviceImplExt" prot="private">Tango::DeviceImpl::DeviceImplExt</innerclass>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <description><para>Miscellaneous constructors </para></description>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a5cd151bc1016a1e0aaee47df1949fc03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::DeviceImpl::DeviceImpl</definition>
        <argsstring>(DeviceClass *device_class, string &amp;dev_name)</argsstring>
        <name>DeviceImpl</name>
        <param>
          <type><ref refid="d4/dcd/classTango_1_1DeviceClass" kindref="compound">DeviceClass</ref> *</type>
          <declname>device_class</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>dev_name</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="d3/d62/classTango_1_1DeviceImpl" kindref="compound">DeviceImpl</ref> object from its name. </para>        </briefdescription>
        <detaileddescription>
<para>The device description field is set to <emphasis>A <ref refid="de/ddf/namespaceTango" kindref="compound">Tango</ref> device</emphasis>. The device state is set to unknown and the device status is set to <bold>Not Initialised</bold></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_class</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device class object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The device name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a2b7b74d29766be8582b66bd70b18e670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::DeviceImpl::DeviceImpl</definition>
        <argsstring>(DeviceClass *device_class, string &amp;dev_name, string &amp;desc)</argsstring>
        <name>DeviceImpl</name>
        <param>
          <type><ref refid="d4/dcd/classTango_1_1DeviceClass" kindref="compound">DeviceClass</ref> *</type>
          <declname>device_class</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>dev_name</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="d3/d62/classTango_1_1DeviceImpl" kindref="compound">DeviceImpl</ref> object from its name and its description. </para>        </briefdescription>
        <detaileddescription>
<para>The device state is set to unknown and the device status is set to <emphasis>Not Initialised</emphasis></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_class</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device class object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The device name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The device description </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a8159577740dda7690d6a9b416ee51721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::DeviceImpl::DeviceImpl</definition>
        <argsstring>(DeviceClass *device_class, string &amp;dev_name, string &amp;desc, Tango::DevState dev_state, string &amp;dev_status)</argsstring>
        <name>DeviceImpl</name>
        <param>
          <type><ref refid="d4/dcd/classTango_1_1DeviceClass" kindref="compound">DeviceClass</ref> *</type>
          <declname>device_class</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>dev_name</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>Tango::DevState</type>
          <declname>dev_state</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>dev_status</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="d3/d62/classTango_1_1DeviceImpl" kindref="compound">DeviceImpl</ref> object from all its creation parameters. </para>        </briefdescription>
        <detaileddescription>
<para>The device is constructed from its name, its description, an original state and status</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_class</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device class object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The device name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The device description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_state</parametername>
</parameternamelist>
<parameterdescription>
<para>The device initial state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_status</parametername>
</parameternamelist>
<parameterdescription>
<para>The device initial status </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a44ad2f0801d241cf16d84b629cb85b1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::DeviceImpl::DeviceImpl</definition>
        <argsstring>(DeviceClass *device_class, const char *dev_name, const char *desc=&quot;A TANGO device&quot;, Tango::DevState dev_state=Tango::UNKNOWN, const char *dev_status=StatusNotSet)</argsstring>
        <name>DeviceImpl</name>
        <param>
          <type><ref refid="d4/dcd/classTango_1_1DeviceClass" kindref="compound">DeviceClass</ref> *</type>
          <declname>device_class</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dev_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>desc</declname>
          <defval>&quot;A TANGO device&quot;</defval>
        </param>
        <param>
          <type>Tango::DevState</type>
          <declname>dev_state</declname>
          <defval>Tango::UNKNOWN</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>dev_status</declname>
          <defval><ref refid="de/ddf/namespaceTango_1ae1851ebaa91cbf1df9317e3f47f6190a" kindref="member">StatusNotSet</ref></defval>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="d3/d62/classTango_1_1DeviceImpl" kindref="compound">DeviceImpl</ref> object from all its creation parameters with some default values. </para>        </briefdescription>
        <detaileddescription>
<para>The device is constructed from its name, its description, an original state and status. This constructor defined default values for the description, state and status parameters. The default device description is <emphasis>A TANGO device</emphasis>. The default device state is <emphasis>UNKNOWN</emphasis> and the default device status is <emphasis>Not initialised</emphasis>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_class</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device class object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The device name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The device desc </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_state</parametername>
</parameternamelist>
<parameterdescription>
<para>The device initial state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_status</parametername>
</parameternamelist>
<parameterdescription>
<para>The device initial status </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="162" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Destructor</header>
      <description><para>Only one desctructor is defined for this class </para></description>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a9a5ffdab6150008e52d87ea4c38ee9ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Tango::DeviceImpl::~DeviceImpl</definition>
        <argsstring>()</argsstring>
        <name>~DeviceImpl</name>
        <briefdescription>
<para>The device desctructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="175" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Get/Set object members.</header>
      <description><para>These methods allows the external world to get/set <ref refid="d3/d62/classTango_1_1DeviceImpl" kindref="compound">DeviceImpl</ref> instance data members </para></description>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1adc92cdf3a75da5ebc139b7bf7d9c7377" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string &amp;</type>
        <definition>string&amp; Tango::DeviceImpl::get_status</definition>
        <argsstring>()</argsstring>
        <name>get_status</name>
        <briefdescription>
<para>Get device status. </para>        </briefdescription>
        <detaileddescription>
<para>Return the device dev_status field. This method does the same thing than the default status_cmd method.</para><para><simplesect kind="return"><para>Device status </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="191" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="191" bodyend="191"/>
        <references refid="d3/d62/classTango_1_1DeviceImpl_1aa66233801c127f96878d701259739383" compoundref="db/de9/device_8h" startline="3264">device_status</references>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a54f9d94ef1072a6cb19ee472ccf044d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_status</definition>
        <argsstring>(const string &amp;new_status)</argsstring>
        <name>set_status</name>
        <param>
          <type>const string &amp;</type>
          <declname>new_status</declname>
        </param>
        <briefdescription>
<para>Set device status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_status</parametername>
</parameternamelist>
<parameterdescription>
<para>The new device status </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="198" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="198" bodyend="198"/>
        <references refid="d3/d62/classTango_1_1DeviceImpl_1aa66233801c127f96878d701259739383" compoundref="db/de9/device_8h" startline="3264">device_status</references>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ab1c6dfb1ea310030cd464f9091a2b8b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::append_status</definition>
        <argsstring>(const string &amp;stat, bool new_line=false)</argsstring>
        <name>append_status</name>
        <param>
          <type>const string &amp;</type>
          <declname>stat</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>new_line</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Appends a string to the device status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stat</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to be appened to the device status </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_line</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, appends a new line character before the string </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="206" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="206" bodyend="206"/>
        <references refid="d3/d62/classTango_1_1DeviceImpl_1aa66233801c127f96878d701259739383" compoundref="db/de9/device_8h" startline="3264">device_status</references>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a5b53b4435a1ea8087849a9e505d70f2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::DevState &amp;</type>
        <definition>Tango::DevState&amp; Tango::DeviceImpl::get_state</definition>
        <argsstring>()</argsstring>
        <name>get_state</name>
        <briefdescription>
<para>Get device state. </para>        </briefdescription>
        <detaileddescription>
<para>Return the device dev_state field. This method does the same thing than the default state_cmd method.</para><para><simplesect kind="return"><para>Device state </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="216" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="216" bodyend="216"/>
        <references refid="d3/d62/classTango_1_1DeviceImpl_1a214ba0a5741c52165869ae11219d414a" compoundref="db/de9/device_8h" startline="3268">device_state</references>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a051cb13d94de8492f37a9b5f48e38e56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::DevState &amp;</type>
        <definition>Tango::DevState&amp; Tango::DeviceImpl::get_prev_state</definition>
        <argsstring>()</argsstring>
        <name>get_prev_state</name>
        <briefdescription>
<para>Get device&apos;s previous state. </para>        </briefdescription>
        <detaileddescription>
<para>Return the device dev_prev_state field. This method is used for the on_state_change event</para><para><simplesect kind="return"><para>Device previous state </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="225" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a2123f00afdfa638c31399eb10efefd66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_state</definition>
        <argsstring>(const Tango::DevState &amp;new_state)</argsstring>
        <name>set_state</name>
        <param>
          <type>const Tango::DevState &amp;</type>
          <declname>new_state</declname>
        </param>
        <briefdescription>
<para>Set device state. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_state</parametername>
</parameternamelist>
<parameterdescription>
<para>The new device state </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="231" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3591" bodyend="3599"/>
        <references refid="d3/d62/classTango_1_1DeviceImpl_1a214ba0a5741c52165869ae11219d414a" compoundref="db/de9/device_8h" startline="3268">device_state</references>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ac337fcab0f8fa8647e817a9aedc87f0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string &amp;</type>
        <definition>string&amp; Tango::DeviceImpl::get_name</definition>
        <argsstring>()</argsstring>
        <name>get_name</name>
        <briefdescription>
<para>Get device name. </para>        </briefdescription>
        <detaileddescription>
<para>Return the device name (dev_name field)</para><para><simplesect kind="return"><para>Device name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="240" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="240" bodyend="240"/>
        <references refid="d3/d62/classTango_1_1DeviceImpl_1af2649629d515c38fc5a19c44f07e2f40" compoundref="db/de9/device_8h" startline="3256">device_name</references>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a61fa9524c2eba31eba7ba9ff3b48ef0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d4/dcd/classTango_1_1DeviceClass" kindref="compound">DeviceClass</ref> *</type>
        <definition>DeviceClass* Tango::DeviceImpl::get_device_class</definition>
        <argsstring>()</argsstring>
        <name>get_device_class</name>
        <briefdescription>
<para>Get device class singleton. </para>        </briefdescription>
        <detaileddescription>
<para>Return the device class singleton (device_class field)</para><para><simplesect kind="return"><para>Pointer to the device class singleton </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="250" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="250" bodyend="250"/>
        <references refid="d3/d62/classTango_1_1DeviceImpl_1a103c3527a529f7a40ecadf227a8a7990" compoundref="db/de9/device_8h" startline="3276">device_class</references>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a339ebeff825166048358919948782be8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d3b/classTango_1_1MultiAttribute" kindref="compound">MultiAttribute</ref> *</type>
        <definition>MultiAttribute* Tango::DeviceImpl::get_device_attr</definition>
        <argsstring>()</argsstring>
        <name>get_device_attr</name>
        <briefdescription>
<para>Get device multi attribute object. </para>        </briefdescription>
        <detaileddescription>
<para>Return a pointer to the device multi attribute object</para><para><simplesect kind="return"><para>Pointer to the device multi attribute object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="260" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="260" bodyend="260"/>
        <references refid="d3/d62/classTango_1_1DeviceImpl_1aed3e20a35c92335be9ba742abdd9d60b" compoundref="db/de9/device_8h" startline="3280">dev_attr</references>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1abfe5f92400f24bcfed94bc7a0d731233" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_device_attr</definition>
        <argsstring>(MultiAttribute *ptr)</argsstring>
        <name>set_device_attr</name>
        <param>
          <type><ref refid="dc/d3b/classTango_1_1MultiAttribute" kindref="compound">MultiAttribute</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Set device multi attribute object. </para>        </briefdescription>
        <detaileddescription>
<para>Set the pointer to the device multi attribute object</para><para><simplesect kind="return"><para>Pointer to the device multi attribute object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="270" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="270" bodyend="270"/>
        <references refid="d3/d62/classTango_1_1DeviceImpl_1aed3e20a35c92335be9ba742abdd9d60b" compoundref="db/de9/device_8h" startline="3280">dev_attr</references>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a6a5e05c240b76db97a357703bdd30552" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DbDevice *</type>
        <definition>DbDevice * Tango::DeviceImpl::get_db_device</definition>
        <argsstring>()</argsstring>
        <name>get_db_device</name>
        <briefdescription>
<para>Get a pointer to the associated DbDevice object. </para>        </briefdescription>
        <detaileddescription>
<para>Return a pointer to DbDevice object associated with the device</para><para><simplesect kind="return"><para>Pointer to the DbDevice object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="280" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/utils.h" bodystart="1203" bodyend="1218"/>
        <references refid="d4/deb/classTango_1_1Util_1a194cd965fd1aebe1800adbe076558742" compoundref="d5/d60/utils_8h" startline="695">Tango::Util::_UseDb</references>
        <references refid="de/ddf/namespaceTango_1a4758e5099c8864befc48b6b0b52a3af0" compoundref="d4/d13/tango__const_8h" startline="413">Tango::API_NonDatabaseDevice</references>
        <references refid="d3/d62/classTango_1_1DeviceImpl_1ae063e45a3778e7241d74f7270461cbb4" compoundref="db/de9/device_8h" startline="3284">db_dev</references>
        <references refid="d3/d62/classTango_1_1DeviceImpl_1af2649629d515c38fc5a19c44f07e2f40" compoundref="db/de9/device_8h" startline="3256">device_name</references>
        <references refid="df/d37/classTango_1_1Except_1a937f591028b392e50070fbc4149beec6" compoundref="dc/d65/except_8h" startline="122" endline="136">Tango::Except::throw_exception</references>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ae4071b4df6b9398e890d8dea51365383" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_d_var</definition>
        <argsstring>(Tango::Device_ptr d)</argsstring>
        <name>set_d_var</name>
        <param>
          <type>Tango::Device_ptr</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Set the associated CORBA object reference. </para>        </briefdescription>
        <detaileddescription>
<para>Set the associated CORBA object reference. <ref refid="de/ddf/namespaceTango" kindref="compound">Tango</ref> supports only a one to one servant-CORBA object link.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA object reference </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="291" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="291" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1af57cb03749073660df2f1515204d17aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::Device_var</type>
        <definition>Tango::Device_var Tango::DeviceImpl::get_d_var</definition>
        <argsstring>()</argsstring>
        <name>get_d_var</name>
        <briefdescription>
<para>Get the associated CORBA object reference. </para>        </briefdescription>
        <detaileddescription>
<para>Get the associated CORBA object reference. <ref refid="de/ddf/namespaceTango" kindref="compound">Tango</ref> supports only a one to one servant-CORBA object link.</para><para><simplesect kind="return"><para>The CORBA object reference </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="302" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="302" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a99aba4af5cd29838f50956a75427d5f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_obj_id</definition>
        <argsstring>(PortableServer::ObjectId_var o)</argsstring>
        <name>set_obj_id</name>
        <param>
          <type>PortableServer::ObjectId_var</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Set the associated CORBA object identifier. </para>        </briefdescription>
        <detaileddescription>
<para>Set the associated CORBA object identifier.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA object identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="312" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="312" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a59b8a8053b36fe6eb5058342f77829ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PortableServer::ObjectId_var &amp;</type>
        <definition>PortableServer::ObjectId_var&amp; Tango::DeviceImpl::get_obj_id</definition>
        <argsstring>()</argsstring>
        <name>get_obj_id</name>
        <briefdescription>
<para>Get the associated CORBA object identifier. </para>        </briefdescription>
        <detaileddescription>
<para>Return the CORBA object identifier as a _var type variable</para><para><simplesect kind="return"><para>The CORBA object identifier </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="322" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="322" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a0895eb0df1a110eba046df7200d86f48" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>PortableServer::POA_ptr</type>
        <definition>virtual PortableServer::POA_ptr Tango::DeviceImpl::_default_POA</definition>
        <argsstring>()</argsstring>
        <name>_default_POA</name>
        <briefdescription>
<para>Return device POA. </para>        </briefdescription>
        <detaileddescription>
<para>Return a pointer to the device POA. This method is necessary for the CORBA object implicit activation by the _this() method.</para><para><simplesect kind="return"><para>Pointer to the device POA </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="332" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Polling related methods</header>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ab6434f2fd256b10b21ba38ba80b7231c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::is_attribute_polled</definition>
        <argsstring>(const string &amp;att_name)</argsstring>
        <name>is_attribute_polled</name>
        <param>
          <type>const string &amp;</type>
          <declname>att_name</declname>
        </param>
        <briefdescription>
<para>Check if attribute is polled. </para>        </briefdescription>
        <detaileddescription>
<para>Returns true if attribute with name given as parameter is polled.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>att_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean set to true if attribute is polled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="347" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ab3075b4e266562181c28d33be817ec0d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::is_command_polled</definition>
        <argsstring>(const string &amp;cmd_name)</argsstring>
        <name>is_command_polled</name>
        <param>
          <type>const string &amp;</type>
          <declname>cmd_name</declname>
        </param>
        <briefdescription>
<para>Check if command is polled. </para>        </briefdescription>
        <detaileddescription>
<para>Returns true if command with name given as parameter is polled.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean set to true if command is polled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ab4b52ce4ebdfb338399dc146cc629529" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Tango::DeviceImpl::get_attribute_poll_period</definition>
        <argsstring>(const string &amp;att_name)</argsstring>
        <name>get_attribute_poll_period</name>
        <param>
          <type>const string &amp;</type>
          <declname>att_name</declname>
        </param>
        <briefdescription>
<para>Get attribute polling period. </para>        </briefdescription>
        <detaileddescription>
<para>Returns attribute polling period (in mS) or 0 if the attribute is not polled</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>att_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The attribute polling period in mS </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="365" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a00f3e7b568926d1e09b1dff8f574979f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Tango::DeviceImpl::get_command_poll_period</definition>
        <argsstring>(const string &amp;cmd_name)</argsstring>
        <name>get_command_poll_period</name>
        <param>
          <type>const string &amp;</type>
          <declname>cmd_name</declname>
        </param>
        <briefdescription>
<para>Get command polling period. </para>        </briefdescription>
        <detaileddescription>
<para>Returns command polling period (in mS) or 0 if the command is not polled</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The command polling period in mS </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a6a748b41d85396d38cd004a30a10bda1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::poll_attribute</definition>
        <argsstring>(const string &amp;att_name, int period)</argsstring>
        <name>poll_attribute</name>
        <param>
          <type>const string &amp;</type>
          <declname>att_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>period</declname>
        </param>
        <briefdescription>
<para>Start polling one attribute. </para>        </briefdescription>
        <detaileddescription>
<para>Ask <ref refid="de/ddf/namespaceTango" kindref="compound">Tango</ref> polling system to poll one attribute</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>att_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>period</parametername>
</parameternamelist>
<parameterdescription>
<para>The polling period (mS) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="383" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a96a247ceb8f389dbb02e8e693847fcdf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::poll_command</definition>
        <argsstring>(const string &amp;cmd_name, int period)</argsstring>
        <name>poll_command</name>
        <param>
          <type>const string &amp;</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>period</declname>
        </param>
        <briefdescription>
<para>Start polling a command. </para>        </briefdescription>
        <detaileddescription>
<para>Ask <ref refid="de/ddf/namespaceTango" kindref="compound">Tango</ref> polling system to poll a command</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>period</parametername>
</parameternamelist>
<parameterdescription>
<para>The polling period (mS) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a70d7f89e019fa63535ab7815a0cb4552" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::stop_poll_attribute</definition>
        <argsstring>(const string &amp;att_name)</argsstring>
        <name>stop_poll_attribute</name>
        <param>
          <type>const string &amp;</type>
          <declname>att_name</declname>
        </param>
        <briefdescription>
<para>Stop polling one attribute. </para>        </briefdescription>
        <detaileddescription>
<para>Ask <ref refid="de/ddf/namespaceTango" kindref="compound">Tango</ref> polling system to stop polling one attribute</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>att_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="400" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1acbf6090c2400d6c44a6474b458c58b36" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::stop_poll_command</definition>
        <argsstring>(const string &amp;cmd_name)</argsstring>
        <name>stop_poll_command</name>
        <param>
          <type>const string &amp;</type>
          <declname>cmd_name</declname>
        </param>
        <briefdescription>
<para>Stop polling one command. </para>        </briefdescription>
        <detaileddescription>
<para>Ask <ref refid="de/ddf/namespaceTango" kindref="compound">Tango</ref> polling system to stop polling one command</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="408" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous methods</header>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1afaa3632ea04076bb5614a98ff944ef8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Tango::DeviceImpl::init_device</definition>
        <argsstring>()=0</argsstring>
        <name>init_device</name>
        <briefdescription>
<para>Intialise a device. </para>        </briefdescription>
        <detaileddescription>
<para>In the <ref refid="d3/d62/classTango_1_1DeviceImpl" kindref="compound">DeviceImpl</ref> class, this method is pure abstract and must be defined in sub-class. Its rule is to initialise a device. This method is called during device creation by the device constructor.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>This method does not throw exception but a redefined method can. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="427" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ac2cf9bd6e0a5da8c121c65b068d36463" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Tango::DeviceImpl::delete_device</definition>
        <argsstring>()</argsstring>
        <name>delete_device</name>
        <briefdescription>
<para>Delete a device. </para>        </briefdescription>
        <detaileddescription>
<para>In the <ref refid="d3/d62/classTango_1_1DeviceImpl" kindref="compound">DeviceImpl</ref> class, this method is virtual and can be defined in sub-class. Its rule is to delete memory allocated in the init_device method. This method is called by the device destructor and by the device Init command.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>This method does not throw exception but a redefined method can. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="442" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="442" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a086fe46c88aed6e2aff70a9cb6c26e84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Tango::DeviceImpl::always_executed_hook</definition>
        <argsstring>(void)</argsstring>
        <name>always_executed_hook</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Hook method. </para>        </briefdescription>
        <detaileddescription>
<para>Default method to implement an action necessary on a device before any command is executed. This method can be redefined in sub-classes in case of the default behaviour does not fulfill the needs</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>This method does not throw exception but a redefined method can. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="455" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="455" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a934daa7bef5a3f01c50ba304006fdda4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Tango::DeviceImpl::read_attr_hardware</definition>
        <argsstring>(vector&lt; long &gt; &amp;attr_list)</argsstring>
        <name>read_attr_hardware</name>
        <param>
          <type>vector&lt; long &gt; &amp;</type>
          <declname>attr_list</declname>
        </param>
        <briefdescription>
<para>Read the hardware to return attribute value(s). </para>        </briefdescription>
        <detaileddescription>
<para>Default method to implement an action necessary on a device to read the hardware involved in a a read attribute CORBA call. This method must be redefined in sub-classes in order to support attribute reading</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_list</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a vector with Integer object. Each element in this vector is the index in the device object attribute vector of an attribute to be read. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>This method does not throw exception but a redefined method can. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="473" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="473" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a7c6302cff47fca241560187e1c178701" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Tango::DeviceImpl::read_attr</definition>
        <argsstring>(Attribute &amp;attr)</argsstring>
        <name>read_attr</name>
        <param>
          <type><ref refid="d6/dad/classTango_1_1Attribute" kindref="compound">Attribute</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Set the attribute read value. </para>        </briefdescription>
        <detaileddescription>
<para>Default method to set an attribute read value. This method must be redefined in sub-classes when attributes are needed</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>This method does not throw exception but a redefined method can. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="486" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="486" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a7aee6ee9fee2feb7f358972ec1677328" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Tango::DeviceImpl::write_attr_hardware</definition>
        <argsstring>(vector&lt; long &gt; &amp;attr_list)</argsstring>
        <name>write_attr_hardware</name>
        <param>
          <type>vector&lt; long &gt; &amp;</type>
          <declname>attr_list</declname>
        </param>
        <briefdescription>
<para>Write the hardware for attributes. </para>        </briefdescription>
        <detaileddescription>
<para>Default method to implement an action necessary on a device to write the hardware involved in a a write attribute. This method must be redefined in sub-classes in order to support writable attribute</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_list</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a vector of Integer objects. Each element in this vector is the index in the main attribute vector of an attribute to be written. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>This method does not throw exception but a redefined method can. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="503" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="503" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a1b5f98bd245bd7e94403eaebc2913283" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Tango::DevState</type>
        <definition>virtual Tango::DevState Tango::DeviceImpl::dev_state</definition>
        <argsstring>()</argsstring>
        <name>dev_state</name>
        <briefdescription>
<para>Get device state. </para>        </briefdescription>
        <detaileddescription>
<para>Default method to get device state. The behaviour of this method depends on the device state. If the device state is ON or ALARM, it reads the attribute(s) with an alarm level defined, check if the read value is above/below the alarm and eventually change the state to ALARM, return the device state. For all the other device state, this method simply returns the state This method can be redefined in sub-classes in case of the default behaviour does not fulfill the needs</para><para><simplesect kind="return"><para>The device state </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If it is necessary to read attribute(s) and a problem occurs during the reading. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="522" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1afcea586ff5d465e6f752fd256a66aeea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="de/ddf/namespaceTango_1a31a504495ecab5fd862cb6e60d40360c" kindref="member">Tango::ConstDevString</ref></type>
        <definition>virtual Tango::ConstDevString Tango::DeviceImpl::dev_status</definition>
        <argsstring>()</argsstring>
        <name>dev_status</name>
        <briefdescription>
<para>Get device status. </para>        </briefdescription>
        <detaileddescription>
<para>Default method to get device status. It returns the contents of the device dev_status field. If the device state is ALARM, alarm messages are added to the device status. This method can be redefined in sub-classes in case of the default behaviour does not fulfill the needs</para><para><simplesect kind="return"><para>The device status </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>This method does not throw exception but a redefined method can. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="538" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a9f130650c3a9da5190001adfbc2dc50c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::add_attribute</definition>
        <argsstring>(Attr *new_attr)</argsstring>
        <name>add_attribute</name>
        <param>
          <type><ref refid="d5/dcd/classTango_1_1Attr" kindref="compound">Attr</ref> *</type>
          <declname>new_attr</declname>
        </param>
        <briefdescription>
<para>Add a new attribute to the device attribute list. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes are normally constructed in the <ref refid="d4/dcd/classTango_1_1DeviceClass_1a0ea1a3848a3d59f55a6734772859c4ec" kindref="member">DeviceClass::attribute_factory()</ref> method. Nevertheless, it is still possible to add a new attribute to a device with this method. Please, note that if you add an attribute to a device at device creation time, this attribute will be added to the device class attribute list. Therefore, all devices belonging to the same class created after this attribute addition will also have this attribute.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the new attribute to be added to the list. This pointer must point to &quot;heap&quot; allocated memory (or to static memory) and not to &quot;stack&quot; allocated memory </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="559" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aa88509d4d6bba29d28a6c124cf0349a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::remove_attribute</definition>
        <argsstring>(Attr *rem_attr, bool free_it=false, bool clean_db=true)</argsstring>
        <name>remove_attribute</name>
        <param>
          <type><ref refid="d5/dcd/classTango_1_1Attr" kindref="compound">Attr</ref> *</type>
          <declname>rem_attr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>free_it</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>clean_db</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Remove one attribute from the device attribute list. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes are normally constructed in the <ref refid="d4/dcd/classTango_1_1DeviceClass_1a0ea1a3848a3d59f55a6734772859c4ec" kindref="member">DeviceClass::attribute_factory()</ref> method. Nevertheless, it is still possible to add a new attribute to a device with the <ref refid="d3/d62/classTango_1_1DeviceImpl_1a9f130650c3a9da5190001adfbc2dc50c" kindref="member">DeviceImpl::add_attribute</ref> method. This remove_attribute method delete the attribute from the device attribute list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rem_attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the attribute to be removed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_it</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean set to true if the object passed as first argument must be freed. Default value is false. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clean_db</parametername>
</parameternamelist>
<parameterdescription>
<para>Clean all attributes related information (included polling info if the attribute is polled) from database. Default value is true </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="579" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a5fe45df27c5a6a2d9ff951f9f0861d5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::remove_attribute</definition>
        <argsstring>(string &amp;rem_attr_name, bool free_it=false, bool clean_db=true)</argsstring>
        <name>remove_attribute</name>
        <param>
          <type>string &amp;</type>
          <declname>rem_attr_name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>free_it</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>clean_db</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Remove one attribute from the device attribute list. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes are normally constructed in the <ref refid="d4/dcd/classTango_1_1DeviceClass_1a0ea1a3848a3d59f55a6734772859c4ec" kindref="member">DeviceClass::attribute_factory()</ref> method. Nevertheless, it is still possible to add a new attribute to a device with the <ref refid="d3/d62/classTango_1_1DeviceImpl_1a9f130650c3a9da5190001adfbc2dc50c" kindref="member">DeviceImpl::add_attribute</ref> method. This remove_attribute method delete the attribute from the device attribute list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rem_attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute to be removed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_it</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean set to true if the attribute object must be freed. Default value is false. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clean_db</parametername>
</parameternamelist>
<parameterdescription>
<para>Clean all attributes related information (included polling info if the attribute is polled) from database. Default value is true </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="599" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a64f3aafd381cd25bb562cdb4074932d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::add_command</definition>
        <argsstring>(Command *new_cmd, bool device=false)</argsstring>
        <name>add_command</name>
        <param>
          <type><ref refid="d2/d1d/classTango_1_1Command" kindref="compound">Command</ref> *</type>
          <declname>new_cmd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>device</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Add a new command to the device command list. </para>        </briefdescription>
        <detaileddescription>
<para>Commands are normally constructed in the <ref refid="d4/dcd/classTango_1_1DeviceClass_1ac86eef5f7d53b5291a034f7bb6fd289a" kindref="member">DeviceClass::command_factory()</ref> method. Nevertheless, it is still possible to add a new command to a device with this method. Please, note that if you add a command to a device at device creation time, this command will be added to the device class command list. Therefore, all devices belonging to the same class created after this command addition will also have this command.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the new command to be added to the list. This pointer must point to &quot;heap&quot; allocated memory (or to static memory) and not to &quot;stack&quot; allocated memory </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>Set this flag to true if the command must be added for only this device Default is false (command added for the device class) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="622" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ae57fcb9d357314f6e4f159a62de3fb8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::remove_command</definition>
        <argsstring>(Command *rem_cmd, bool free_it=false, bool clean_db=true)</argsstring>
        <name>remove_command</name>
        <param>
          <type><ref refid="d2/d1d/classTango_1_1Command" kindref="compound">Command</ref> *</type>
          <declname>rem_cmd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>free_it</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>clean_db</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Remove one command from the device command list. </para>        </briefdescription>
        <detaileddescription>
<para>Commands are normally constructed in the <ref refid="d4/dcd/classTango_1_1DeviceClass_1ac86eef5f7d53b5291a034f7bb6fd289a" kindref="member">DeviceClass::command_factory()</ref> method. Nevertheless, it is still possible to add a new command to a device with the <ref refid="d3/d62/classTango_1_1DeviceImpl_1a64f3aafd381cd25bb562cdb4074932d9" kindref="member">DeviceImpl::add_command</ref> method. This remove_command method delete the command from the device command list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rem_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command to be removed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_it</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean set to true if the object passed as first argument must be freed. Default value is false. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clean_db</parametername>
</parameternamelist>
<parameterdescription>
<para>Clean command related information (included polling info if the command is polled) from database. Default value is true </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="641" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a3ae8333e1349c4691bf46712afd6f221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::remove_command</definition>
        <argsstring>(const string &amp;rem_cmd_name, bool free_it=false, bool clean_db=true)</argsstring>
        <name>remove_command</name>
        <param>
          <type>const string &amp;</type>
          <declname>rem_cmd_name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>free_it</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>clean_db</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Remove one command from the device command list. </para>        </briefdescription>
        <detaileddescription>
<para>Commands are normally constructed in the <ref refid="d4/dcd/classTango_1_1DeviceClass_1ac86eef5f7d53b5291a034f7bb6fd289a" kindref="member">DeviceClass::command_factory()</ref> method. Nevertheless, it is still possible to add a new command to a device with the <ref refid="d3/d62/classTango_1_1DeviceImpl_1a64f3aafd381cd25bb562cdb4074932d9" kindref="member">DeviceImpl::add_command</ref> method. This remove_command method delete the command from the device command list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rem_cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the command to be removed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_it</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean set to true if the command object must be freed. Default value is false. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clean_db</parametername>
</parameternamelist>
<parameterdescription>
<para>Clean command related information (included polling info if the command is polled) from database. Default value is true </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="661" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ac47d75934efad28b5668ee8b90df0999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; PollObj * &gt;::iterator</type>
        <definition>vector&lt;PollObj *&gt;::iterator Tango::DeviceImpl::get_polled_obj_by_type_name</definition>
        <argsstring>(Tango::PollObjType obj_type, const string &amp;obj_name)</argsstring>
        <name>get_polled_obj_by_type_name</name>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1ac5ffdb26e95e0c322c8ed79524ad9b6e" kindref="member">Tango::PollObjType</ref></type>
          <declname>obj_type</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>obj_name</declname>
        </param>
        <briefdescription>
<para>Retrieve a polled object from the polled object list. </para>        </briefdescription>
        <detaileddescription>
<para>Retrieve in the device polled object list, the specified polled object (command or attribute).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The object type (command or attribute) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The object name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An iterator pointing to the polled object in the polled object list </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if the object is not found. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="676" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ab7ccad84e75ab8e91ada91bb49a028ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::is_there_subscriber</definition>
        <argsstring>(const string &amp;att_name, EventType event_type)</argsstring>
        <name>is_there_subscriber</name>
        <param>
          <type>const string &amp;</type>
          <declname>att_name</declname>
        </param>
        <param>
          <type><ref refid="d1/d45/group__Client_1ga5366e2a8cedf5aab5be8835974f787c6" kindref="member">EventType</ref></type>
          <declname>event_type</declname>
        </param>
        <briefdescription>
<para>Check if there is subscriber(s) listening for the event. </para>        </briefdescription>
        <detaileddescription>
<para>This method returns a boolean set to true if there are some subscriber(s) listening on the event specified by the two method arguments. Be aware that there is some delay (up to 600 sec) between this method returning false and the last subscriber unsubscription or crash... The device interface change event is not supported by this method.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>att_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The event type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean set to true if there are some subscriber listening on this event </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if the attribute is not found. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="692" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods to build Tango array types.</header>
      <description><para>These methods are helper methods to build <ref refid="de/ddf/namespaceTango" kindref="compound">Tango</ref> array types from an already existing buffer (<ref refid="de/ddf/namespaceTango" kindref="compound">Tango</ref> array types are CORBA sequences) </para></description>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ab4b7bdcca9c83603da302783c86553bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::DevVarCharArray *</type>
        <definition>Tango::DevVarCharArray* Tango::DeviceImpl::create_DevVarCharArray</definition>
        <argsstring>(unsigned char *ptr, long length)</argsstring>
        <name>create_DevVarCharArray</name>
        <param>
          <type>unsigned char *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Create a DevVarCharArray type. </para>        </briefdescription>
        <detaileddescription>
<para>Create a DevVarCharArray type data and return a pointer to it. The array is build using the input pointer with the given length</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the basic type data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of element in the previous buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the created DevVarCharArray type data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="713" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="713" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aa4c9e98e8b3fa64328eca74a4d1e07d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::DevVarShortArray *</type>
        <definition>Tango::DevVarShortArray* Tango::DeviceImpl::create_DevVarShortArray</definition>
        <argsstring>(short *ptr, long length)</argsstring>
        <name>create_DevVarShortArray</name>
        <param>
          <type>short *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Create a DevVarShortArray type. </para>        </briefdescription>
        <detaileddescription>
<para>Create a DevVarShortArray type data and return a pointer to it. The array is build using the input pointer with the given length</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the basic type data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of element in the previous buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the created DevVarShortArray type data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="729" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="729" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ac094cb1f6aaf9f8672e7a508ac561e6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::DevVarLongArray *</type>
        <definition>Tango::DevVarLongArray* Tango::DeviceImpl::create_DevVarLongArray</definition>
        <argsstring>(DevLong *ptr, long length)</argsstring>
        <name>create_DevVarLongArray</name>
        <param>
          <type>DevLong *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Create a DevVarLongArray type. </para>        </briefdescription>
        <detaileddescription>
<para>Create a DevVarLongArray type data and return a pointer to it. The array is build using the input pointer with the given length</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the basic type data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of element in the previous buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the created DevVarLongArray type data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="746" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="746" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a78a091f645e75c006f856adde52c1c50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::DevVarLong64Array *</type>
        <definition>Tango::DevVarLong64Array* Tango::DeviceImpl::create_DevVarLong64Array</definition>
        <argsstring>(DevLong64 *ptr, long length)</argsstring>
        <name>create_DevVarLong64Array</name>
        <param>
          <type>DevLong64 *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Create a DevVarLong64Array type. </para>        </briefdescription>
        <detaileddescription>
<para>Create a DevVarLong64Array type data and return a pointer to it. The array is build using the input pointer with the given length</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the basic type data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of element in the previous buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the created DevVarLong64Array type data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="763" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="763" bodyend="766"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ab0cee831dc51482a9b16f49406a796c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::DevVarFloatArray *</type>
        <definition>Tango::DevVarFloatArray* Tango::DeviceImpl::create_DevVarFloatArray</definition>
        <argsstring>(float *ptr, long length)</argsstring>
        <name>create_DevVarFloatArray</name>
        <param>
          <type>float *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Create a DevVarFloatArray type. </para>        </briefdescription>
        <detaileddescription>
<para>Create a DevVarFloatArray type data and return a pointer to it. The array is build using the input pointer with the given length</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the basic type data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of element in the previous buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the created DevVarFloatArray type data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="779" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="779" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a11715eb4830c827fed3b0e5592cfd1a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::DevVarDoubleArray *</type>
        <definition>Tango::DevVarDoubleArray* Tango::DeviceImpl::create_DevVarDoubleArray</definition>
        <argsstring>(double *ptr, long length)</argsstring>
        <name>create_DevVarDoubleArray</name>
        <param>
          <type>double *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Create a DevVarDoubleArray type. </para>        </briefdescription>
        <detaileddescription>
<para>Create a DevVarDoubleArray type data and return a pointer to it. The array is build using the input pointer with the given length</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the basic type data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of element in the previous buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the created DevVarDoubleArray type data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="795" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="795" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ad08bf54e4603f07b21a522047626ffef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::DevVarUShortArray *</type>
        <definition>Tango::DevVarUShortArray* Tango::DeviceImpl::create_DevVarUShortArray</definition>
        <argsstring>(unsigned short *ptr, long length)</argsstring>
        <name>create_DevVarUShortArray</name>
        <param>
          <type>unsigned short *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Create a DevVarUShortArray type. </para>        </briefdescription>
        <detaileddescription>
<para>Create a DevVarUShortArray type data and return a pointer to it. The array is build using the input pointer with the given length</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the basic type data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of element in the previous buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the created DevVarUShortArray type data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="811" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="811" bodyend="814"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a408b4dd2c4b27caf1ffdefdc5fdde784" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::DevVarULongArray *</type>
        <definition>Tango::DevVarULongArray* Tango::DeviceImpl::create_DevVarULongArray</definition>
        <argsstring>(DevULong *ptr, long length)</argsstring>
        <name>create_DevVarULongArray</name>
        <param>
          <type>DevULong *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Create a DevVarULongArray type. </para>        </briefdescription>
        <detaileddescription>
<para>Create a DevVarULongArray type data and return a pointer to it. The array is build using the input pointer with the given length</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the basic type data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of element in the previous buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the created DevVarULongArray type data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="828" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="828" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aa00f880d45531edc57cf3f070ce9e757" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::DevVarULong64Array *</type>
        <definition>Tango::DevVarULong64Array* Tango::DeviceImpl::create_DevVarULong64Array</definition>
        <argsstring>(DevULong64 *ptr, long length)</argsstring>
        <name>create_DevVarULong64Array</name>
        <param>
          <type>DevULong64 *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Create a DevVarULong64Array type. </para>        </briefdescription>
        <detaileddescription>
<para>Create a DevVarULong64Array type data and return a pointer to it. The array is build using the input pointer with the given length</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the basic type data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of element in the previous buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the created DevVarULong64Array type data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="846" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="846" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1abe7b41d84597f3e9327c2a8fdc2eff2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::DevVarStringArray *</type>
        <definition>Tango::DevVarStringArray* Tango::DeviceImpl::create_DevVarStringArray</definition>
        <argsstring>(char **ptr, long length)</argsstring>
        <name>create_DevVarStringArray</name>
        <param>
          <type>char **</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Create a DevVarStringArray type. </para>        </briefdescription>
        <detaileddescription>
<para>Create a DevVarStringArray type data and return a pointer to it. The array is build using the input pointer with the given length</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the basic type data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of element in the previous buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the created DevVarStringArray type data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="862" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="862" bodyend="865"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Push change event methods.</header>
      <description><para>These methods allow to fire change events for attributes manually, without the polling to be started. </para></description>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_change_event</definition>
        <argsstring>(string attr_name, bool implemented, bool detect=true)</argsstring>
        <name>set_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>implemented</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>detect</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Set an implemented flag for the attribute to indicate that the server fires change events manually, without the polling to be started. </para>        </briefdescription>
        <detaileddescription>
<para>If the detect parameter is set to true, the criteria specified for the change event are verified and the event is only pushed if they are fulfilled. If detect is set to false the event is fired without any value checking!</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>implemented</parametername>
</parameternamelist>
<parameterdescription>
<para>True when the server fires change events manually. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>detect</parametername>
</parameternamelist>
<parameterdescription>
<para>Triggers the verification of the change event properties when set to true. Default value is true. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="886" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a6c789211496cd65dd417ea4fe633c85a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, DevFailed *except=NULL)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>DevFailed *</type>
          <declname>except</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Push a change event for a state or status attribute or return an exception as change event for any attribute. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name as input. For the state and status attributes the actual state and status values are pushed. In case of an exception, the exception is pushed as a change event for the attribute.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>except</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a Tango::DevFailed exception. Default value is NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="900" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a25b61671395cd833817d073449d2a240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevShort *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevShort *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevShort attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="923" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a188894e6cce3c43e0ee2dc6197cf6b8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevLong *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevLong *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevLong attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="946" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a09d665b63b701372e4f2ea71750db462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevLong64 *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevLong64 *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevLong64 attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="969" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a11d1533d2eb6d80ec41100b71605284a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevFloat *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevFloat *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevFloat attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="992" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1af12b9042dffbceb6462b151eeb01f6f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevDouble *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevDouble *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevDouble attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1015" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a65aaa57d7ae064487cebf48eee239401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevString *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevString *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevString attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1038" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ad46f18d53f1d78430bf0113ba4b0d8d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevBoolean *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevBoolean *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevBoolean attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1061" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a3c0f829c573f5da1674d3e02aff2fce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevUShort *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevUShort *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>void push_change_event (string attr_name, Tango::DevBoolea Push a change event for an attribute with Tango::DevUShort attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1084" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a54443f0082d8903d300677f587589d4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevUChar *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevUChar *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevUChar attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aa915d01687a0fd1739a1dadcac78ef31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevULong *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevULong *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevULong attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1adf7a4e85571cd258a27a2dc8ea25fd49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevULong64 *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevULong64 *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevULong64 attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a74931b906e58ca078cb93746ee620016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevState *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevState *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevState attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a8aca443b2753cd3258bafa05ad534d4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevEncoded *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevEncoded *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevEncoded attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1af08f98bd4d9f40b3359b1a54ddfeae30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevString *p_str_data, Tango::DevUChar *p_data, long size, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevString *</type>
          <declname>p_str_data</declname>
        </param>
        <param>
          <type>Tango::DevUChar *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevEncoded attribute data type when the DevEncoded data are specified by two pointers. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_str_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data string part to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The data number (pointed to by p_data) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a036f0e21df2369343321838be2368e79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevShort *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevShort *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevShort attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a5f4b6031c439b9a6ff7e6e933bc60e82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevLong *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevLong *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevLong attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a1a78d899253dc8be6c44866dc8dd055f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevLong64 *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevLong64 *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevLong64 attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1305" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a3a57944f25d7478ac59f8d3861c5696a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevFloat *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevFloat *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevFloat attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ab2eb1193f346084132ec037add29c55f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevDouble *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevDouble *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevDouble attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a7e5d6d6a6e2f15baad7a76465b93b1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevString *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevString *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevString attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a94e5ed83c55f047f2871f5e1bee985fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevBoolean *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevBoolean *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevBoolean attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1414" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1abb808eb7ddf3444c8cc411dc74f15c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevUShort *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevUShort *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevUShort attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1441" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a4da73eb21138da11e156c018ceff3810" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevUChar *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevUChar *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevUChar attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1468" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ae747f15a580daaa2977402598b2e5550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevULong *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevULong *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevULong attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1496" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a23bfcd091ac32924cb96d5a64e4dbd95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevULong64 *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevULong64 *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevULong64 attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1524" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a111da256603495d6eb8e2ec2c35ae639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevState *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevState *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevState attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1552" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a37eb1710cf8c1f44d8990ebfbec5c6b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevEncoded *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevEncoded *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevEncoded attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1580" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a00fa2ee4c3603f919c7aef49b107b053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_change_event</definition>
        <argsstring>(string attr_name, Tango::DevString *p_str_data, Tango::DevUChar *p_data, long size, struct timeval &amp;t, Tango::AttrQuality qual, bool release=false)</argsstring>
        <name>push_change_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevString *</type>
          <declname>p_str_data</declname>
        </param>
        <param>
          <type>Tango::DevUChar *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>size</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a change event for an attribute with Tango::DevEncoded attribute data type when the data rea specified with two pointers. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the change event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" kindref="member">set_change_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_str_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data string part to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the data to be ushed (pointed to be p_data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1609" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Push archive event methods.</header>
      <description><para>These methods allow to fire archive events for attributes manually, without the polling to be started. </para></description>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_archive_event</definition>
        <argsstring>(string attr_name, bool implemented, bool detect=true)</argsstring>
        <name>set_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>implemented</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>detect</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Set an implemented flag for the attribute to indicate that the server fires archive events manually, without the polling to be started. </para>        </briefdescription>
        <detaileddescription>
<para>If the detect parameter is set to true, the criteria specified for the archive event are verified and the event is only pushed if they are fulfilled. If detect is set to false the event is fired without any value checking!</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>implemented</parametername>
</parameternamelist>
<parameterdescription>
<para>True when the server fires archive events manually. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>detect</parametername>
</parameternamelist>
<parameterdescription>
<para>Triggers the verification of the archive event properties when set to true. Default value is true. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1633" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a5db64e22096acbd28c24e4c0eb91ae8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, DevFailed *except=NULL)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>DevFailed *</type>
          <declname>except</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Push an archive event for state or status attribute or push an exception as archive event for any attribute. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name as input. For the state and status attributes the actual state and status values are pushed. In case of an exception, the exception is pushed as an archive event for the attribute.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>except</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a Tango::DevFailed exception. Default value is NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1647" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a2178a2b731db74bcbee66e774dff4d9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevShort *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevShort *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevShort attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1670" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a8fa59e2bc965e66a9ca4611b7632bfd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevLong *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevLong *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevLong attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1693" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ac05ed03092d65731a1089c46f4b2fda9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevLong64 *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevLong64 *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevLong64 attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1716" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a635750d8940f09287bf50883a26bc021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevFloat *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevFloat *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevFloat attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1739" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a8b2f401ee83720c7d51887617258b8a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevDouble *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevDouble *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevDouble attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1762" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aa23b3a45fbff170bb26e7d7ac601184c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevString *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevString *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevString attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1785" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a49d509f24520272f94c3b62f05f0f2f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevBoolean *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevBoolean *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevBoolean attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1808" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a07bc41aaf4b0c07c6ed0eab8c619d83f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevUShort *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevUShort *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevUShort attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1831" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a6ccc427017496027aa8f050e002e065e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevUChar *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevUChar *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevUChar attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1854" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a7091e910df2b9b91311f009b3911c915" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevULong *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevULong *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevULong attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1877" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1abba65795f545e527852cdb9c0629a641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevULong64 *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevULong64 *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevLong64 attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1900" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a5bd5bb3ec090a5313ee8489b7c7567d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevState *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevState *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevState attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1923" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a46a4961a1752697ae17e35ad90722c13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevEncoded *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevEncoded *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevEncoded attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1946" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1af9784d0a0460bd5c2c6fa3ef9817ed27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevString *p_str_data, Tango::DevUChar *p_data, long size, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevString *</type>
          <declname>p_str_data</declname>
        </param>
        <param>
          <type>Tango::DevUChar *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevEncoded attribute data type when the data are specified using two pointers. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_str_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data string part to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data part to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the data to be pushed (Pointed to by p_data) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1970" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ab569d4dbbb2005a7073fc331035bea88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevShort *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevShort *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevShort attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="1997" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a0a405f3f33a489bd943795cdca916506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevLong *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevLong *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevLong attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2024" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a9d97a4c743bd5d7df0418f19ab31c68b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevLong64 *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevLong64 *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevLong64 attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2051" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ac077d834876215e373c5904ae438ac03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevFloat *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevFloat *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevFloat attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2078" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1af12a4fcc2686eafc5766a92471318c90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevDouble *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevDouble *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevDouble attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a5a14133c408b27f7bb1ea58ade98eb9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevString *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevString *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevString attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a98a556bc3f307877add6dfb511174d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevBoolean *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevBoolean *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevBoolean attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a82ae5e5698a922ad745ec885d3be5d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevUShort *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevUShort *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevUShort attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a0548aefd3fec998fcd006dd5b3f21909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevUChar *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevUChar *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevUChar attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a4e2c6e3b95067910f1e3fd091985ba68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevULong *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevULong *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevULong attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2240" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a0270cdbc600f7f614708175e7f2c674b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevULong64 *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevULong64 *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevULong64 attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ae9eed5a3b6fd5dd301c1bbf37a12172a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevState *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevState *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevState attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a489ed63de4130e0e9ba98d9a08b2b9b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevEncoded *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevEncoded *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevEncoded attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2322" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a0fd048e5cfeab65ae3c29eaea1f22ab9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_archive_event</definition>
        <argsstring>(string attr_name, Tango::DevString *p_str_data, Tango::DevUChar *p_data, long size, struct timeval &amp;t, Tango::AttrQuality qual, bool release=false)</argsstring>
        <name>push_archive_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevString *</type>
          <declname>p_str_data</declname>
        </param>
        <param>
          <type>Tango::DevUChar *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>size</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push an archive event for an attribute with Tango::DevEncoded attribute data type when it is specified using two pointers. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given. The event is triggered with or without checking of the archive event criteria depending on the configuration choosen with <ref refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" kindref="member">set_archive_event()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_str_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data string part to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the data to be pushed (Pointed to by p_data) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2351" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Push user event methods.</header>
      <description><para>These methods allow to fire user events for attributes manually, without the polling to be started. </para></description>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a002bc27747f35517048b5b87169c52c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, DevFailed *except=NULL)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>DevFailed *</type>
          <declname>except</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Push a user event for a state or status attribute or return an exception as user event for any attribute. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name as input. For the state and status attributes the actual state and status values are pushed. In case of an exception, the exception is pushed as a user event for the attribute.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>except</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a Tango::DevFailed exception. Default value is NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2378" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1abea2bef4a09d8c32e00d52b42dcb1519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevShort *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevShort *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevShort attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2401" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a57e7b6629cb3b1b6a025f290b3950747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevLong *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevLong *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevLong attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a67ca044f6c93e871d8964b4b60f741cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevLong64 *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevLong64 *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevLong64 attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1abe5a15e693deaa18fe61a0445c463635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevFloat *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevFloat *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevFloat attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2470" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ae33711bbb1c5fa7ac69d7b569d85153e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevDouble *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevDouble *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevDouble attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2493" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a4da3dedd55a7f7208543db0fda31e741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevString *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevString *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevString attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2516" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aa50f68d34b10b33c56588040a16d9767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevBoolean *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevBoolean *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevBoolean attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2539" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a277a59839649739fc734cf797e7b494f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevUShort *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevUShort *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevUShort attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2562" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a36c9c565106b8730986e1ce889bed8ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevUChar *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevUChar *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevUChar attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2585" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a4f81154a4b42d6b7ae853af50fa9b1a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevULong *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevULong *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevULong attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2608" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a286e1bc0c636bcac6b75a42caacb31c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevULong64 *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevULong64 *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevULong64 attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2631" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aba816f038f5fb56bed646118c86b5528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevState *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevState *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevState attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2654" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a80d07794e70f84930fc1125237659a5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevEncoded *p_data, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevEncoded *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevEncoded attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a349cda6696deb45ea5ac82f9d0f16efe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevString *p_str_data, Tango::DevUChar *p_data, long size, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevString *</type>
          <declname>p_str_data</declname>
        </param>
        <param>
          <type>Tango::DevUChar *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevEncoded attribute data type when the attribute data are specified with 2 pointers. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name and a pointer to the data to be pushed as input. Depending on the attribute type the dimensions x and why need to be given. The time stamp of the event is set to the actual time and the attribute quality is set to valid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_str_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the string sent with the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The data number (pointed to by p_data) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2701" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a8be4ec9b7b5c9d085a47da0679cbc7fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevShort *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevShort *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevShort attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2728" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a79d790e27316aca2aaa355c11f46a97c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevLong *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevLong *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevLong attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2755" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a8a7c19733896179f5282f9009468263f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevLong64 *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevLong64 *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevLong64 attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2783" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a5907485e9673b050add68908f868305a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevFloat *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevFloat *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevFloat attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2811" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a8b6ea9ea8ffb0e688010e7b3804db3e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevDouble *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevDouble *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevDouble attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2838" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a4999198b1a726c85867eadac47d14494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevString *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevString *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevString attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2865" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a75a48ed53e504fc4a72de34053203c0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevBoolean *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevBoolean *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevBoolean attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2892" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ab5a7d7c3b8e890a814505aafdad79734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevUShort *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevUShort *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevUShort attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2919" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a6a551682fe5936c4364e33fd162da35b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevUChar *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevUChar *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevUChar attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2946" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1af852d77c72a39a73187f491c993d39b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevULong *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevULong *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevULong attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="2974" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a14ac401d247b784b1bd06a485af4f094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevULong64 *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevULong64 *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevULong64 attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3002" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ac77151d73d38e817568ae535b1f0ddb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevState *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevState *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevState attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3030" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aee05a449a784d6d7c5fef37c573ef831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevEncoded *p_data, struct timeval &amp;t, Tango::AttrQuality qual, long x=1, long y=0, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevEncoded *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevEncoded attribute data type. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute x length. Default value is 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute y length. Default value is 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3058" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a0706ab09666f888c28803f0ffc3ac62d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_event</definition>
        <argsstring>(string attr_name, vector&lt; string &gt; &amp;filt_names, vector&lt; double &gt; &amp;filt_vals, Tango::DevString *p_str_data, Tango::DevUChar *p_data, long size, struct timeval &amp;t, Tango::AttrQuality qual, bool release=false)</argsstring>
        <name>push_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>filt_names</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>filt_vals</declname>
        </param>
        <param>
          <type>Tango::DevString *</type>
          <declname>p_str_data</declname>
        </param>
        <param>
          <type>Tango::DevUChar *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>size</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Tango::AttrQuality</type>
          <declname>qual</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a user event for an attribute with Tango::DevEncoded attribute data type when the string part and the data part of the DevEncoded data are specified separately. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs the attribue name, a pointer to the data to be pushed, the time stamp for the data and the attribute quality factor as input. Depending on the attribute type the dimensions x and why need to be given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filt_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>The filterable fields value (as double) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_str_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data string part </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The data number (pointed to by p_data) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qual</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute quality factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>release</parametername>
</parameternamelist>
<parameterdescription>
<para>The release flag. If true, memory pointed to by p_data will be freed after being send to the client. Default value is false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3088" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Push data ready event methods</header>
      <description><para>This method allows the user to push a data ready event </para></description>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ae1ac32627a6ec783de529ddb26e5d900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_data_ready_event</definition>
        <argsstring>(string attr_name, bool implemented)</argsstring>
        <name>set_data_ready_event</name>
        <param>
          <type>string</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>implemented</declname>
        </param>
        <briefdescription>
<para>Set an implemented flag for the attribute to indicate that the server fires data ready event for this attribute. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>implemented</parametername>
</parameternamelist>
<parameterdescription>
<para>True when the server fires data ready event. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a0de42a80d6d1fc464b142dae308671b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_data_ready_event</definition>
        <argsstring>(const string &amp;attr_name, Tango::DevLong ctr=0)</argsstring>
        <name>push_data_ready_event</name>
        <param>
          <type>const string &amp;</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>Tango::DevLong</type>
          <declname>ctr</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Push a data ready event for the attribute with name specified as the first parameter. </para>        </briefdescription>
        <detaileddescription>
<para>The event is pushed to the event system.</para><para>The method needs only the attribue name and an optional &quot;counter&quot; which will be passed unchanged within the event</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctr</parametername>
</parameternamelist>
<parameterdescription>
<para>The user counter</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the attribute name is unknown. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3118" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Push pipe event methods.</header>
      <description><para>These methods allow to fire pipe events </para></description>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aedd422cbede721279f2bbac705e34017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_pipe_event</definition>
        <argsstring>(const string &amp;pipe_name, DevFailed *except)</argsstring>
        <name>push_pipe_event</name>
        <param>
          <type>const string &amp;</type>
          <declname>pipe_name</declname>
        </param>
        <param>
          <type>DevFailed *</type>
          <declname>except</declname>
        </param>
        <briefdescription>
<para>Push a pipe event with exception data as value The method needs the pipe name as input. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pipe_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the pipe </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>except</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a Tango::DevFailed exception. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1abfe94a1987a8d5db4b69e9cc2c05c294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_pipe_event</definition>
        <argsstring>(const string &amp;pipe_name, Tango::DevicePipeBlob *p_data, bool reuse_it=false)</argsstring>
        <name>push_pipe_event</name>
        <param>
          <type>const string &amp;</type>
          <declname>pipe_name</declname>
        </param>
        <param>
          <type>Tango::DevicePipeBlob *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reuse_it</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a pipe event. </para>        </briefdescription>
        <detaileddescription>
<para>The method needs the pipe name and a pointer to the pipe blob to be pushed as input. The time stamp of the event is set to the actual time.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pipe_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the pipe </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="d8/d14/classTango_1_1Pipe" kindref="compound">Pipe</ref> blob to be sent with the event </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reuse_it</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag set to true if you don want the push_pipe_event to consume <ref refid="d8/d14/classTango_1_1Pipe" kindref="compound">Pipe</ref> internal memory. Default value is false which covers 95% of use cases </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the pipe data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a058f5747705f5bda88f1357dc9b2865e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_pipe_event</definition>
        <argsstring>(const string &amp;pipe_name, Tango::DevicePipeBlob *p_data, struct timeval &amp;t, bool reuse_it=false)</argsstring>
        <name>push_pipe_event</name>
        <param>
          <type>const string &amp;</type>
          <declname>pipe_name</declname>
        </param>
        <param>
          <type>Tango::DevicePipeBlob *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>struct timeval &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reuse_it</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Push a pipe event with a specified timestamp. </para>        </briefdescription>
        <detaileddescription>
<para>The method needs the pipe name, a pointer to the pipe blob to be pushed and the time stamp for the data as input.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pipe_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the pipe </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time stamp </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reuse_it</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag set to true if you don want the push_pipe_event to consume <ref refid="d8/d14/classTango_1_1Pipe" kindref="compound">Pipe</ref> internal memory. Default value is false which covers 95% of use cases </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the pipe data type is not coherent. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3167" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Signal related methods</header>
      <description><para>These methods allow a signal management at device level </para></description>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a1066d2fe5f4d45bf12a38c667d02bdb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::register_signal</definition>
        <argsstring>(long signo, bool own_handler=false)</argsstring>
        <name>register_signal</name>
        <param>
          <type>long</type>
          <declname>signo</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>own_handler</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Register a signal to be executed in a signal handler. </para>        </briefdescription>
        <detaileddescription>
<para>Register this device as device to be informed when signal signo is sent to to the device server process. This method is available only under Linux.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>signo</parametername>
</parameternamelist>
<parameterdescription>
<para>The signal number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>own_handler</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean set to true if you want the device signal handler to be executed in its own handler instead of being executed by the signal thread. If this parameter is set to true, care should be taken on how the handler is written. A default false value is provided </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if the signal number is out of range or if the operating system failed to register a signal for the process. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a9bbea9d3b6cf43f467a56d8866b343ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::unregister_signal</definition>
        <argsstring>(long signo)</argsstring>
        <name>unregister_signal</name>
        <param>
          <type>long</type>
          <declname>signo</declname>
        </param>
        <briefdescription>
<para>Unregister a signal. </para>        </briefdescription>
        <detaileddescription>
<para>Unregister this device as device to be informed when signal signo is sent to to the device server process</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>signo</parametername>
</parameternamelist>
<parameterdescription>
<para>The signal number </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if the signal number is out of range or if the operating system failed to unregister a signal for the process. Unregister a device for a signal number for a device not previously registered is not an error. This simply will do nothing. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a2f387fb75b3427fc661a4f9b829b1491" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Tango::DeviceImpl::signal_handler</definition>
        <argsstring>(long signo)</argsstring>
        <name>signal_handler</name>
        <param>
          <type>long</type>
          <declname>signo</declname>
        </param>
        <briefdescription>
<para>Signal handler. </para>        </briefdescription>
        <detaileddescription>
<para>The method executed when the signal arrived in the device server process. This method is defined as virtual and then, can be redefined following device needs.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>signo</parametername>
</parameternamelist>
<parameterdescription>
<para>The signal number </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3233" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Class data members</header>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1afdc166bd02d4723a09861bfbbf285c77" prot="protected" static="no" mutable="no">
        <type>BlackBox *</type>
        <definition>BlackBox* Tango::DeviceImpl::blackbox_ptr</definition>
        <argsstring></argsstring>
        <name>blackbox_ptr</name>
        <briefdescription>
<para>The device black box pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3248" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1ac1b1c0e44d43f83e9b6a1633dbfe2967" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long Tango::DeviceImpl::blackbox_depth</definition>
        <argsstring></argsstring>
        <name>blackbox_depth</name>
        <briefdescription>
<para>The device black box depth. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3252" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1af2649629d515c38fc5a19c44f07e2f40" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string Tango::DeviceImpl::device_name</definition>
        <argsstring></argsstring>
        <name>device_name</name>
        <briefdescription>
<para>The device name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3256" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3256" bodyend="-1"/>
        <referencedby refid="d3/d62/classTango_1_1DeviceImpl_1a6a5e05c240b76db97a357703bdd30552" compoundref="d5/d60/utils_8h" startline="1203" endline="1218">get_db_device</referencedby>
        <referencedby refid="d3/d62/classTango_1_1DeviceImpl_1ac337fcab0f8fa8647e817a9aedc87f0c" compoundref="db/de9/device_8h" startline="240" endline="240">get_name</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a480f48ff00c9d1aa8bd406323967df7d" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string Tango::DeviceImpl::desc</definition>
        <argsstring></argsstring>
        <name>desc</name>
        <briefdescription>
<para>The device description. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3260" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1aa66233801c127f96878d701259739383" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string Tango::DeviceImpl::device_status</definition>
        <argsstring></argsstring>
        <name>device_status</name>
        <briefdescription>
<para>The device status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3264" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3264" bodyend="-1"/>
        <referencedby refid="d3/d62/classTango_1_1DeviceImpl_1ab1c6dfb1ea310030cd464f9091a2b8b0" compoundref="db/de9/device_8h" startline="206" endline="206">append_status</referencedby>
        <referencedby refid="d3/d62/classTango_1_1DeviceImpl_1adc92cdf3a75da5ebc139b7bf7d9c7377" compoundref="db/de9/device_8h" startline="191" endline="191">get_status</referencedby>
        <referencedby refid="d3/d62/classTango_1_1DeviceImpl_1a54f9d94ef1072a6cb19ee472ccf044d7" compoundref="db/de9/device_8h" startline="198" endline="198">set_status</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a214ba0a5741c52165869ae11219d414a" prot="protected" static="no" mutable="no">
        <type>Tango::DevState</type>
        <definition>Tango::DevState Tango::DeviceImpl::device_state</definition>
        <argsstring></argsstring>
        <name>device_state</name>
        <briefdescription>
<para>The device state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3268" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3268" bodyend="-1"/>
        <referencedby refid="d3/d62/classTango_1_1DeviceImpl_1a5b53b4435a1ea8087849a9e505d70f2a" compoundref="db/de9/device_8h" startline="216" endline="216">get_state</referencedby>
        <referencedby refid="d3/d62/classTango_1_1DeviceImpl_1a2123f00afdfa638c31399eb10efefd66" compoundref="db/de9/device_8h" startline="3591" endline="3599">set_state</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1ab3bdf85a2faf1fe98ecd9253c1a51d77" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long Tango::DeviceImpl::version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <briefdescription>
<para>The device version. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3272" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a103c3527a529f7a40ecadf227a8a7990" prot="protected" static="no" mutable="no">
        <type><ref refid="d4/dcd/classTango_1_1DeviceClass" kindref="compound">DeviceClass</ref> *</type>
        <definition>DeviceClass* Tango::DeviceImpl::device_class</definition>
        <argsstring></argsstring>
        <name>device_class</name>
        <briefdescription>
<para>Pointer to the device-class object associated with the device. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3276" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3276" bodyend="-1"/>
        <referencedby refid="d3/d62/classTango_1_1DeviceImpl_1a61fa9524c2eba31eba7ba9ff3b48ef0a" compoundref="db/de9/device_8h" startline="250" endline="250">get_device_class</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1aed3e20a35c92335be9ba742abdd9d60b" prot="protected" static="no" mutable="no">
        <type><ref refid="dc/d3b/classTango_1_1MultiAttribute" kindref="compound">MultiAttribute</ref> *</type>
        <definition>MultiAttribute* Tango::DeviceImpl::dev_attr</definition>
        <argsstring></argsstring>
        <name>dev_attr</name>
        <briefdescription>
<para>Pointer to the multi attribute object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3280" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3280" bodyend="-1"/>
        <referencedby refid="d3/d62/classTango_1_1DeviceImpl_1a339ebeff825166048358919948782be8" compoundref="db/de9/device_8h" startline="260" endline="260">get_device_attr</referencedby>
        <referencedby refid="d3/d62/classTango_1_1DeviceImpl_1abfe5f92400f24bcfed94bc7a0d731233" compoundref="db/de9/device_8h" startline="270" endline="270">set_device_attr</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1ae063e45a3778e7241d74f7270461cbb4" prot="protected" static="no" mutable="no">
        <type>DbDevice *</type>
        <definition>DbDevice* Tango::DeviceImpl::db_dev</definition>
        <argsstring></argsstring>
        <name>db_dev</name>
        <briefdescription>
<para>Pointer to the associated DbDevice object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3284" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3284" bodyend="-1"/>
        <referencedby refid="d3/d62/classTango_1_1DeviceImpl_1a6a5e05c240b76db97a357703bdd30552" compoundref="d5/d60/utils_8h" startline="1203" endline="1218">get_db_device</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a57b6296e483e01cb62ffdce4eca0261a" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string Tango::DeviceImpl::adm_device_name</definition>
        <argsstring></argsstring>
        <name>adm_device_name</name>
        <briefdescription>
<para>The administration device name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3288" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3288" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="d3/d62/classTango_1_1DeviceImpl_1a6f2fc81c9afd1873d6b9f9d0eaeb61c7" prot="private" static="no">
        <name>_AttErrorType</name>
        <enumvalue id="d3/d62/classTango_1_1DeviceImpl_1a6f2fc81c9afd1873d6b9f9d0eaeb61c7adc8b9eeb7d45d5adf4ce063931e56971" prot="private">
          <name>CONF</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d62/classTango_1_1DeviceImpl_1a6f2fc81c9afd1873d6b9f9d0eaeb61c7a1018efad8db80e1ecbae8e191d395366" prot="private">
          <name>MEM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d62/classTango_1_1DeviceImpl_1a6f2fc81c9afd1873d6b9f9d0eaeb61c7a920b50e411d8da4095f93aa4fd5ca0a3" prot="private">
          <name>FWD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3552" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3551" bodyend="3556"/>
      </memberdef>
      <memberdef kind="enum" id="d3/d62/classTango_1_1DeviceImpl_1a3326688aee28cf9040494f8caa448ddf" prot="private" static="no">
        <name>_PipePropType</name>
        <enumvalue id="d3/d62/classTango_1_1DeviceImpl_1a3326688aee28cf9040494f8caa448ddfa53bd796c9c392201c2c9cc868c5b69aa" prot="private">
          <name>LABEL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/d62/classTango_1_1DeviceImpl_1a3326688aee28cf9040494f8caa448ddfacaa05b495cfad6432137258947abc585" prot="private">
          <name>DESCRIPTION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3559" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3558" bodyend="3562"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d62/classTango_1_1DeviceImpl_1ab8bc5caa7c8e556c75d3e493206382d7" prot="private" static="no">
        <type>enum Tango::DeviceImpl::_AttErrorType</type>
        <definition>typedef enum Tango::DeviceImpl::_AttErrorType Tango::DeviceImpl::AttErrorType</definition>
        <argsstring></argsstring>
        <name>AttErrorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3556" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d62/classTango_1_1DeviceImpl_1af745fb5c5bdb7bd88262d7c21e7403ea" prot="private" static="no">
        <type>struct Tango::DeviceImpl::_FwdWrongConf</type>
        <definition>typedef struct Tango::DeviceImpl::_FwdWrongConf Tango::DeviceImpl::FwdWrongConf</definition>
        <argsstring></argsstring>
        <name>FwdWrongConf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3300" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="d3/d62/classTango_1_1DeviceImpl_1a4488544f2aecac16fb07db6949939575" prot="private" static="no">
        <type>enum Tango::DeviceImpl::_PipePropType</type>
        <definition>typedef enum Tango::DeviceImpl::_PipePropType Tango::DeviceImpl::PipePropType</definition>
        <argsstring></argsstring>
        <name>PipePropType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3562" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d3/d62/classTango_1_1DeviceImpl_1aa90445f0324fbdea288f7b41aa4a6790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Tango::AutoTangoMonitor</definition>
        <argsstring></argsstring>
        <name>Tango::AutoTangoMonitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="93" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="d3/d62/classTango_1_1DeviceImpl_1a38c76f8655cb5af13615b7a2ea89d1fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Tango::EventSubscriptionChangeCmd</definition>
        <argsstring></argsstring>
        <name>Tango::EventSubscriptionChangeCmd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="96" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="d3/d62/classTango_1_1DeviceImpl_1a4cdabe9798a15fab2e519f9c4471e32c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Tango::EventSupplier</definition>
        <argsstring></argsstring>
        <name>Tango::EventSupplier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="95" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="d3/d62/classTango_1_1DeviceImpl_1a2902621019fa17e307d9093137d0d4e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Tango::NoSyncModelTangoMonitor</definition>
        <argsstring></argsstring>
        <name>Tango::NoSyncModelTangoMonitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="94" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1acf178ae59a8ce1e944b0677922f214f6" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Tango::DeviceImpl::alarm_status</definition>
        <argsstring></argsstring>
        <name>alarm_status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3584" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3584" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a536a54f8451205a5ab59a2ecad475b31" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Tango::DeviceImpl::alias_name_lower</definition>
        <argsstring></argsstring>
        <name>alias_name_lower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3514" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1af096e90d9cce2f4106bf4fde824ff493" prot="private" static="no" mutable="no">
        <type>vector&lt; long &gt;</type>
        <definition>vector&lt;long&gt; Tango::DeviceImpl::alrmd_not_read</definition>
        <argsstring></argsstring>
        <name>alrmd_not_read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3511" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1ac078604ab95492d81389a0f353ec8347" prot="private" static="no" mutable="no">
        <type>TangoMonitor</type>
        <definition>TangoMonitor Tango::DeviceImpl::att_conf_mon</definition>
        <argsstring></argsstring>
        <name>att_conf_mon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3508" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1aee529679b59311e08fee3529b4f1633d" prot="private" static="no" mutable="no">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; Tango::DeviceImpl::att_mem_failed</definition>
        <argsstring></argsstring>
        <name>att_mem_failed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3531" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a34ca443eb5edafc5bd0e836e07e74f8e" prot="private" static="no" mutable="no">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; Tango::DeviceImpl::att_wrong_db_conf</definition>
        <argsstring></argsstring>
        <name>att_wrong_db_conf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3530" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3530" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1ac69edadbb7308c45733f1472c39849f4" prot="private" static="no" mutable="no">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; Tango::DeviceImpl::attr_min_poll_period</definition>
        <argsstring></argsstring>
        <name>attr_min_poll_period</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3526" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a11f3dcc0446df9bd38917d2d744430c2" prot="private" static="no" mutable="no">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; Tango::DeviceImpl::attr_poll_ring_depth</definition>
        <argsstring></argsstring>
        <name>attr_poll_ring_depth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3504" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a5a6a3485960b529b43ee415e8fb60d92" prot="private" static="no" mutable="no">
        <type>DevSource</type>
        <definition>DevSource Tango::DeviceImpl::call_source</definition>
        <argsstring></argsstring>
        <name>call_source</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3534" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1ab382360c9905c8847a341019c6d4fe7d" prot="private" static="no" mutable="no">
        <type>vector&lt; int &gt;</type>
        <definition>vector&lt;int&gt; Tango::DeviceImpl::client_lib</definition>
        <argsstring></argsstring>
        <name>client_lib</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3544" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a21633f1e9b40b1b54ed31a9b19826170" prot="private" static="no" mutable="no">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; Tango::DeviceImpl::cmd_min_poll_period</definition>
        <argsstring></argsstring>
        <name>cmd_min_poll_period</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3525" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3525" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a0c0d499e97f02c5dd57553f7867afd48" prot="private" static="no" mutable="no">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; Tango::DeviceImpl::cmd_poll_ring_depth</definition>
        <argsstring></argsstring>
        <name>cmd_poll_ring_depth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3503" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1acbdee8e723a29e475011eda1e5d3ac92" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="d2/d1d/classTango_1_1Command" kindref="compound">Command</ref> * &gt;</type>
        <definition>vector&lt;Command *&gt; Tango::DeviceImpl::command_list</definition>
        <argsstring></argsstring>
        <name>command_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3536" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1aa07c65c0e9e68b46c4a26fc2822da270" prot="private" static="no" mutable="no">
        <type>Tango::Device_var</type>
        <definition>Tango::Device_var Tango::DeviceImpl::d_var</definition>
        <argsstring></argsstring>
        <name>d_var</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3585" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1ad55e1d6f0d75d6102cbccd2877288cdb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::device_locked</definition>
        <argsstring></argsstring>
        <name>device_locked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3516" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a6c0138faf1c0c2a1af078bebf4f23e68" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Tango::DeviceImpl::device_name_lower</definition>
        <argsstring></argsstring>
        <name>device_name_lower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3501" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1af603b16b22b0095d49a9ec08667a0913" prot="private" static="no" mutable="no">
        <type>Tango::DevState</type>
        <definition>Tango::DevState Tango::DeviceImpl::device_prev_state</definition>
        <argsstring></argsstring>
        <name>device_prev_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3500" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1afff96e28ca8a0f7aa8ca3e0a74af8f88" prot="private" static="no" mutable="no">
        <type>TangoMonitor</type>
        <definition>TangoMonitor Tango::DeviceImpl::devintr_mon</definition>
        <argsstring></argsstring>
        <name>devintr_mon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3540" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1ae422a9f9e0a6a30a7c7df5c7af68cbeb" prot="private" static="no" mutable="no">
        <type>ShDevIntrTh</type>
        <definition>ShDevIntrTh Tango::DeviceImpl::devintr_shared</definition>
        <argsstring></argsstring>
        <name>devintr_shared</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3541" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a537e9205b3aab956cbd90d8d842a1a9b" prot="private" static="no" mutable="no">
        <type>DevIntrThread *</type>
        <definition>DevIntrThread* Tango::DeviceImpl::devintr_thread</definition>
        <argsstring></argsstring>
        <name>devintr_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3542" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a2c500b3d972cd39385c6cc07604f1539" prot="private" static="no" mutable="no">
        <type>DevVarBooleanArray</type>
        <definition>DevVarBooleanArray Tango::DeviceImpl::dummy_boolean_att_value</definition>
        <argsstring></argsstring>
        <name>dummy_boolean_att_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3469" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a201fb0124ae713a97ed74674f151c659" prot="private" static="no" mutable="no">
        <type>DevVarDoubleArray</type>
        <definition>DevVarDoubleArray Tango::DeviceImpl::dummy_double_att_value</definition>
        <argsstring></argsstring>
        <name>dummy_double_att_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3467" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a284330570af11939f672b10e8e9a0038" prot="private" static="no" mutable="no">
        <type>DevVarEncodedArray</type>
        <definition>DevVarEncodedArray Tango::DeviceImpl::dummy_encoded_att_value</definition>
        <argsstring></argsstring>
        <name>dummy_encoded_att_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3475" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a90f2cc0aa7468a83f83d8f390b4c8b99" prot="private" static="no" mutable="no">
        <type>DevVarFloatArray</type>
        <definition>DevVarFloatArray Tango::DeviceImpl::dummy_float_att_value</definition>
        <argsstring></argsstring>
        <name>dummy_float_att_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3466" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1aafbe59c88bc1e1051da6726289c77502" prot="private" static="no" mutable="no">
        <type>DevVarLong64Array</type>
        <definition>DevVarLong64Array Tango::DeviceImpl::dummy_long64_att_value</definition>
        <argsstring></argsstring>
        <name>dummy_long64_att_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3465" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a9e648f388ceee8469099f6406a6f0756" prot="private" static="no" mutable="no">
        <type>DevVarLongArray</type>
        <definition>DevVarLongArray Tango::DeviceImpl::dummy_long_att_value</definition>
        <argsstring></argsstring>
        <name>dummy_long_att_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3464" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a8ddc2ffc78fea4ba449af67091280e72" prot="private" static="no" mutable="no">
        <type>DevVarShortArray</type>
        <definition>DevVarShortArray Tango::DeviceImpl::dummy_short_att_value</definition>
        <argsstring></argsstring>
        <name>dummy_short_att_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3463" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a9da3d40e6541f617f56ca40083bbbeea" prot="private" static="no" mutable="no">
        <type>DevVarStateArray</type>
        <definition>DevVarStateArray Tango::DeviceImpl::dummy_state_att_value</definition>
        <argsstring></argsstring>
        <name>dummy_state_att_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3474" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a0f28cd7cf8c77e592cffe58c03394d03" prot="private" static="no" mutable="no">
        <type>DevVarStringArray</type>
        <definition>DevVarStringArray Tango::DeviceImpl::dummy_string_att_value</definition>
        <argsstring></argsstring>
        <name>dummy_string_att_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3468" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1ab3acefa57be9a11112fedaf95fa75415" prot="private" static="no" mutable="no">
        <type>DevVarCharArray</type>
        <definition>DevVarCharArray Tango::DeviceImpl::dummy_uchar_att_value</definition>
        <argsstring></argsstring>
        <name>dummy_uchar_att_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3471" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a3c3f3c223d9341362f660becc35deace" prot="private" static="no" mutable="no">
        <type>DevVarULong64Array</type>
        <definition>DevVarULong64Array Tango::DeviceImpl::dummy_ulong64_att_value</definition>
        <argsstring></argsstring>
        <name>dummy_ulong64_att_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3473" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1aab1889748df0681882dabe9840cdd518" prot="private" static="no" mutable="no">
        <type>DevVarULongArray</type>
        <definition>DevVarULongArray Tango::DeviceImpl::dummy_ulong_att_value</definition>
        <argsstring></argsstring>
        <name>dummy_ulong_att_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3472" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a73e21dabcbdaf923278725d2f0e30c6f" prot="private" static="no" mutable="no">
        <type>DevVarUShortArray</type>
        <definition>DevVarUShortArray Tango::DeviceImpl::dummy_ushort_att_value</definition>
        <argsstring></argsstring>
        <name>dummy_ushort_att_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3470" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a62e43d82367406952f48a061047b37e3" prot="private" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t Tango::DeviceImpl::event_intr_change_subscription</definition>
        <argsstring></argsstring>
        <name>event_intr_change_subscription</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3537" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a101cb6d585e97bbfb599a154f2dbbb69" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::exported</definition>
        <argsstring></argsstring>
        <name>exported</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3490" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a35bca57a4f0f34177330d1d2d80e1a31" prot="private" static="no" mutable="no">
        <type>DeviceImplExt *</type>
        <definition>DeviceImplExt* Tango::DeviceImpl::ext</definition>
        <argsstring></argsstring>
        <name>ext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3460" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a9c404f758a6036b66fef5ecdb6f7e6ad" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::force_alarm_state</definition>
        <argsstring></argsstring>
        <name>force_alarm_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3529" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1adf587767927497dddd7ae261f1232336" prot="private" static="no" mutable="no">
        <type>vector&lt; FwdWrongConf &gt;</type>
        <definition>vector&lt;FwdWrongConf&gt; Tango::DeviceImpl::fwd_att_wrong_conf</definition>
        <argsstring></argsstring>
        <name>fwd_att_wrong_conf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3532" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1af03d91908163b2b9a9a4ca5642a1471e" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long Tango::DeviceImpl::idl_version</definition>
        <argsstring></argsstring>
        <name>idl_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3488" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a7dd446bc585252adb1ffeaccff88e6d6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::intr_change_ev</definition>
        <argsstring></argsstring>
        <name>intr_change_ev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3538" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a37c6c69afec1aef5d735d0ae69a585ba" prot="private" static="no" mutable="no">
        <type>DevLong</type>
        <definition>DevLong Tango::DeviceImpl::lock_ctr</definition>
        <argsstring></argsstring>
        <name>lock_ctr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3522" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1af58c0d5b336ddf8e4dca466a724ffa87" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Tango::DeviceImpl::lock_stat</definition>
        <argsstring></argsstring>
        <name>lock_stat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3521" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a2f2c146feeef02dfdd24cd1bca3d5adf" prot="private" static="no" mutable="no">
        <type>DevLong</type>
        <definition>DevLong Tango::DeviceImpl::lock_validity</definition>
        <argsstring></argsstring>
        <name>lock_validity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3519" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1aef9aecb7794d14592971803fb8c52b64" prot="private" static="no" mutable="no">
        <type>client_addr *</type>
        <definition>client_addr* Tango::DeviceImpl::locker_client</definition>
        <argsstring></argsstring>
        <name>locker_client</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3517" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a3ecd3a49b958de4ae2a44e20ba12f200" prot="private" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t Tango::DeviceImpl::locking_date</definition>
        <argsstring></argsstring>
        <name>locking_date</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3520" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a94d882effb2ebf8346345a6a1dd34332" prot="private" static="no" mutable="no">
        <type><ref refid="d4/d1c/classlog4tango_1_1Logger" kindref="compound">log4tango::Logger</ref> *</type>
        <definition>log4tango::Logger* Tango::DeviceImpl::logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3482" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1abb95db0722a59d0d379a512b8f288837" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long Tango::DeviceImpl::min_poll_period</definition>
        <argsstring></argsstring>
        <name>min_poll_period</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3524" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a40df33db3d4fc3cc63c48fd423813727" prot="private" static="no" mutable="no">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; Tango::DeviceImpl::non_auto_polled_attr</definition>
        <argsstring></argsstring>
        <name>non_auto_polled_attr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3496" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a1985cf6c3cb49a06047f895398df719b" prot="private" static="no" mutable="no">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; Tango::DeviceImpl::non_auto_polled_cmd</definition>
        <argsstring></argsstring>
        <name>non_auto_polled_cmd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3495" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a9241b25c5161db7b130ba13e1d84e1c3" prot="private" static="no" mutable="no">
        <type>PortableServer::ObjectId_var</type>
        <definition>PortableServer::ObjectId_var Tango::DeviceImpl::obj_id</definition>
        <argsstring></argsstring>
        <name>obj_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3586" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1aa03d33512fdb9764707650d0e57772e2" prot="private" static="no" mutable="no">
        <type>client_addr *</type>
        <definition>client_addr* Tango::DeviceImpl::old_locker_client</definition>
        <argsstring></argsstring>
        <name>old_locker_client</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3518" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a0366a5b210a1cf9f8626f59b634cf9b0" prot="private" static="no" mutable="no">
        <type>TangoMonitor</type>
        <definition>TangoMonitor Tango::DeviceImpl::only_one</definition>
        <argsstring></argsstring>
        <name>only_one</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3499" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a9dc55586f6cc7ed53f1f043e5f2eec77" prot="private" static="no" mutable="no">
        <type>TangoMonitor</type>
        <definition>TangoMonitor Tango::DeviceImpl::pipe_conf_mon</definition>
        <argsstring></argsstring>
        <name>pipe_conf_mon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3509" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a2f3f38ddde41f929902ade063b33e93b" prot="private" static="no" mutable="no">
        <type>TangoMonitor</type>
        <definition>TangoMonitor Tango::DeviceImpl::poll_mon</definition>
        <argsstring></argsstring>
        <name>poll_mon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3507" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1ac50d404d7c46ec7667764f47ab0ae101" prot="private" static="no" mutable="no">
        <type>vector&lt; PollObj * &gt;</type>
        <definition>vector&lt;PollObj *&gt; Tango::DeviceImpl::poll_obj_list</definition>
        <argsstring></argsstring>
        <name>poll_obj_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3497" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a16f2c5fccc8f90113b0ff90cef37e251" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long Tango::DeviceImpl::poll_old_factor</definition>
        <argsstring></argsstring>
        <name>poll_old_factor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3487" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a69a5a6fe70212baef9eeababfc770ad9" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long Tango::DeviceImpl::poll_ring_depth</definition>
        <argsstring></argsstring>
        <name>poll_ring_depth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3492" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a9ef8386bc5790b6d3634baa52322aa13" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::polled</definition>
        <argsstring></argsstring>
        <name>polled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3491" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a72adceba72e74183cd6fb5bba526c3ec" prot="private" static="no" mutable="no">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; Tango::DeviceImpl::polled_attr</definition>
        <argsstring></argsstring>
        <name>polled_attr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3494" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1ac274a2c0eae4059c2034dd7ee221a7cb" prot="private" static="no" mutable="no">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; Tango::DeviceImpl::polled_cmd</definition>
        <argsstring></argsstring>
        <name>polled_cmd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3493" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a9be106541a3cc200a9ba05c99807eb29" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::py_device</definition>
        <argsstring></argsstring>
        <name>py_device</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3513" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1a8dc08c3414f91c894e623dd412727c5b" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Tango::DeviceImpl::rft</definition>
        <argsstring></argsstring>
        <name>rft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3484" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1ac7a280c86fbc2f8ea3fdacf93a862002" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::run_att_conf_loop</definition>
        <argsstring></argsstring>
        <name>run_att_conf_loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3528" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3528" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1aa21962f68812481ccbd0f4e8e9712e3e" prot="private" static="no" mutable="no">
        <type><ref refid="d8/d0e/classlog4tango_1_1Level_1aa708c09b6a19a8cc8a3b19631561ca99" kindref="member">log4tango::Level::Value</ref></type>
        <definition>log4tango::Level::Value Tango::DeviceImpl::saved_log_level</definition>
        <argsstring></argsstring>
        <name>saved_log_level</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3483" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1adeb0970ccae67ebbc2c600e147fdf6d1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::state_from_read</definition>
        <argsstring></argsstring>
        <name>state_from_read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3510" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1aa07925b00bfbfc9fc099fd8b35dcd11d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::store_in_bb</definition>
        <argsstring></argsstring>
        <name>store_in_bb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3506" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d62/classTango_1_1DeviceImpl_1ad4439167bdc241d0017b2f273c49427d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::with_fwd_att</definition>
        <argsstring></argsstring>
        <name>with_fwd_att</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3533" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3533" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aafb2afd88d66d35f3d6be2a329fb7680" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>char *</type>
        <definition>virtual char* Tango::DeviceImpl::adm_name</definition>
        <argsstring>()</argsstring>
        <name>adm_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3303" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a1fe068db8a819be891d9bca58d33690b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::att_conf_loop</definition>
        <argsstring>()</argsstring>
        <name>att_conf_loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3573" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1af23fbbff90bc9f368d8159adaa7e5089" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::basic_unlock</definition>
        <argsstring>(bool forced=false)</argsstring>
        <name>basic_unlock</name>
        <param>
          <type>bool</type>
          <declname>forced</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3363" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1add1e6636c2b8aa02693ceb056b8e94e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Tango::DevVarStringArray *</type>
        <definition>virtual Tango::DevVarStringArray* Tango::DeviceImpl::black_box</definition>
        <argsstring>(DevLong n)</argsstring>
        <name>black_box</name>
        <param>
          <type>DevLong</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3309" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a15c1dfe122a3648d20005a8822b7cfcd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::black_box_create</definition>
        <argsstring>()</argsstring>
        <name>black_box_create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1acb1621e498f83ed8898808cbcead8826" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::build_att_list_in_status_mess</definition>
        <argsstring>(size_t, AttErrorType)</argsstring>
        <name>build_att_list_in_status_mess</name>
        <param>
          <type>size_t</type>
        </param>
        <param>
          <type>AttErrorType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3574" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a0c3821270ea19ed6b9ca25e77c7f76ae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::check_att_conf</definition>
        <argsstring>()</argsstring>
        <name>check_att_conf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3393" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ad36249debd6c691cbe2ba6f8be94a978" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::check_command_exists</definition>
        <argsstring>(const string &amp;)</argsstring>
        <name>check_command_exists</name>
        <param>
          <type>const string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3340" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a64599a4e6dddc7e5ab0b8938ec8f7db0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::check_lock</definition>
        <argsstring>(const char *, const char *cmd=NULL)</argsstring>
        <name>check_lock</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const char *</type>
          <declname>cmd</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3450" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a676d74529d155d9e6ffc85423d1c74be" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::clean_locker_ptrs</definition>
        <argsstring>()</argsstring>
        <name>clean_locker_ptrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3373" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3373" bodyend="3373"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ae1ce1f491a34855ea2970a277adfe11a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>CORBA::Any *</type>
        <definition>virtual CORBA::Any* Tango::DeviceImpl::command_inout</definition>
        <argsstring>(const char *in_cmd, const CORBA::Any &amp;in_data)</argsstring>
        <name>command_inout</name>
        <param>
          <type>const char *</type>
          <declname>in_cmd</declname>
        </param>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aaa63201d6e015d44a42cc82b8061dc4c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Tango::DevCmdInfoList *</type>
        <definition>virtual Tango::DevCmdInfoList* Tango::DeviceImpl::command_list_query</definition>
        <argsstring>()</argsstring>
        <name>command_list_query</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a1f10d9a72fa3791d0963a9ee704263b1" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Tango::DevCmdInfo *</type>
        <definition>virtual Tango::DevCmdInfo* Tango::DeviceImpl::command_query</definition>
        <argsstring>(const char *command)</argsstring>
        <name>command_query</name>
        <param>
          <type>const char *</type>
          <declname>command</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a83e77f16a3f7af19c91bdab3177ed519" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::data_into_net_object</definition>
        <argsstring>(Attribute &amp;, AttributeIdlData &amp;, long, AttrWriteType, bool)</argsstring>
        <name>data_into_net_object</name>
        <param>
          <type><ref refid="d6/dad/classTango_1_1Attribute" kindref="compound">Attribute</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a79122420bb8fc15b17138ff0da9bad7d" kindref="member">AttributeIdlData</ref> &amp;</type>
        </param>
        <param>
          <type>long</type>
        </param>
        <param>
          <type>AttrWriteType</type>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a61bfc9d6a2b257875b4189bb97dd0944" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>char *</type>
        <definition>virtual char* Tango::DeviceImpl::description</definition>
        <argsstring>()</argsstring>
        <name>description</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a88ce332226acc894a44dfe3b2126cea4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::disable_intr_change_ev</definition>
        <argsstring>()</argsstring>
        <name>disable_intr_change_ev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3414" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3414" bodyend="3414"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a62e1404ca8e5b6b9a616f5f3ada395a3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::enable_intr_change_ev</definition>
        <argsstring>()</argsstring>
        <name>enable_intr_change_ev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3413" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3413" bodyend="3413"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1abac02ef17c180e5f8002a2b84669b0a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::end_pipe_config</definition>
        <argsstring>()</argsstring>
        <name>end_pipe_config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3577" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a278c4f1aab8c4936199fefe4b24dbdc3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; long &gt; &amp;</type>
        <definition>vector&lt;long&gt;&amp; Tango::DeviceImpl::get_alarmed_not_read</definition>
        <argsstring>()</argsstring>
        <name>get_alarmed_not_read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3353" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3353" bodyend="3353"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aa2c04a6dacaf3c5471e05e29fd8724db" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string &amp;</type>
        <definition>string&amp; Tango::DeviceImpl::get_alias_name_lower</definition>
        <argsstring>()</argsstring>
        <name>get_alias_name_lower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3377" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3377" bodyend="3377"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a49d783e77595c66800bac547c084b3c4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TangoMonitor &amp;</type>
        <definition>TangoMonitor&amp; Tango::DeviceImpl::get_att_conf_monitor</definition>
        <argsstring>()</argsstring>
        <name>get_att_conf_monitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3347" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3347" bodyend="3347"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a768ec9b5e56fa401075ac9e0d035e0af" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; string &gt; &amp;</type>
        <definition>vector&lt;string&gt;&amp; Tango::DeviceImpl::get_att_mem_failed</definition>
        <argsstring>()</argsstring>
        <name>get_att_mem_failed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3395" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3395" bodyend="3395"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aac4088c19c1ea28cf7a463cb22067913" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; string &gt; &amp;</type>
        <definition>vector&lt;string&gt;&amp; Tango::DeviceImpl::get_att_wrong_db_conf</definition>
        <argsstring>()</argsstring>
        <name>get_att_wrong_db_conf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3392" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3392" bodyend="3392"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a1117951e64da386d39c354cfcf6443e4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; string &gt; &amp;</type>
        <definition>vector&lt;string&gt;&amp; Tango::DeviceImpl::get_attr_min_poll_period</definition>
        <argsstring>()</argsstring>
        <name>get_attr_min_poll_period</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3386" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3386" bodyend="3386"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a777aa9a60854cac251e17da6726122b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long Tango::DeviceImpl::get_attr_poll_ring_depth</definition>
        <argsstring>(string &amp;)</argsstring>
        <name>get_attr_poll_ring_depth</name>
        <param>
          <type>string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3352" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a54ef6dc326d788773c57d25edf30decc" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Tango::AttributeConfigList *</type>
        <definition>virtual Tango::AttributeConfigList* Tango::DeviceImpl::get_attribute_config</definition>
        <argsstring>(const Tango::DevVarStringArray &amp;names)</argsstring>
        <name>get_attribute_config</name>
        <param>
          <type>const Tango::DevVarStringArray &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ae25c99f1a1fffc2278eb7090d54f214a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DevSource</type>
        <definition>DevSource Tango::DeviceImpl::get_call_source</definition>
        <argsstring>()</argsstring>
        <name>get_call_source</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3405" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3405" bodyend="3405"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a393ccb787e50d175b78d750dfbc1f505" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tango::client_addr *</type>
        <definition>Tango::client_addr* Tango::DeviceImpl::get_client_ident</definition>
        <argsstring>()</argsstring>
        <name>get_client_ident</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a576cec122adc2d75d7b511a18c54b11e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; string &gt; &amp;</type>
        <definition>vector&lt;string&gt;&amp; Tango::DeviceImpl::get_cmd_min_poll_period</definition>
        <argsstring>()</argsstring>
        <name>get_cmd_min_poll_period</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3385" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3385" bodyend="3385"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a58b555f3b8ff833871d1c07c2ccf9cbd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long Tango::DeviceImpl::get_cmd_poll_ring_depth</definition>
        <argsstring>(string &amp;)</argsstring>
        <name>get_cmd_poll_ring_depth</name>
        <param>
          <type>string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3351" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a292e006eab3f5fca95ab88dd8c09d9e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d1d/classTango_1_1Command" kindref="compound">Command</ref> *</type>
        <definition>Command* Tango::DeviceImpl::get_command</definition>
        <argsstring>(const string &amp;)</argsstring>
        <name>get_command</name>
        <param>
          <type>const string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a8f626631bfb8424521acb87aced3551f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long Tango::DeviceImpl::get_dev_idl_version</definition>
        <argsstring>()</argsstring>
        <name>get_dev_idl_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3350" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3350" bodyend="3350"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ad389b3cfeb03a4862bb9e517a6057e40" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TangoMonitor &amp;</type>
        <definition>TangoMonitor&amp; Tango::DeviceImpl::get_dev_monitor</definition>
        <argsstring>()</argsstring>
        <name>get_dev_monitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3345" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3345" bodyend="3345"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aaa5ac8faa619872dd84b1eefca41a0fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::get_dev_system_resource</definition>
        <argsstring>()</argsstring>
        <name>get_dev_system_resource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3568" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a49b047237146c6d872dc607811a51205" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t Tango::DeviceImpl::get_event_intr_change_subscription</definition>
        <argsstring>()</argsstring>
        <name>get_event_intr_change_subscription</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3412" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3412" bodyend="3412"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a2ec5a6c2bea974e1af63546395e81b37" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::get_event_param</definition>
        <argsstring>(vector&lt; EventPar &gt; &amp;)</argsstring>
        <name>get_event_param</name>
        <param>
          <type>vector&lt; <ref refid="de/d7e/structTango_1_1EventPar" kindref="compound">EventPar</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a02f64b060a63a4f8877612d4b8f3dc5d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::get_exported_flag</definition>
        <argsstring>()</argsstring>
        <name>get_exported_flag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3321" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3321" bodyend="3321"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ab59c82df2b094081252cba2e02fd6e67" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; FwdWrongConf &gt; &amp;</type>
        <definition>vector&lt;FwdWrongConf&gt;&amp; Tango::DeviceImpl::get_fwd_att_wrong_conf</definition>
        <argsstring>()</argsstring>
        <name>get_fwd_att_wrong_conf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3397" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3397" bodyend="3397"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a3b75a58e9f07b4241849cfd9d83f0e2d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d1d/classTango_1_1Command" kindref="compound">Command</ref> &amp;</type>
        <definition>Command&amp; Tango::DeviceImpl::get_local_cmd_by_name</definition>
        <argsstring>(const string &amp;)</argsstring>
        <name>get_local_cmd_by_name</name>
        <param>
          <type>const string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3408" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a0b8fbbb0f224f473b8a1ad871be7a798" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; <ref refid="d2/d1d/classTango_1_1Command" kindref="compound">Command</ref> * &gt; &amp;</type>
        <definition>vector&lt;Command *&gt;&amp; Tango::DeviceImpl::get_local_command_list</definition>
        <argsstring>()</argsstring>
        <name>get_local_command_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3407" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3407" bodyend="3407"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a5beaef9d150af0a209cc010a5253e306" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::DevLong</type>
        <definition>Tango::DevLong Tango::DeviceImpl::get_lock_validity</definition>
        <argsstring>()</argsstring>
        <name>get_lock_validity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3372" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3372" bodyend="3372"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a6f42fc61f54427dae8630fa9cbad1f08" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>client_addr *</type>
        <definition>client_addr* Tango::DeviceImpl::get_locker</definition>
        <argsstring>()</argsstring>
        <name>get_locker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3368" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3368" bodyend="3368"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aa452f2d930541dc5e10e3fa07728442f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::DevLong</type>
        <definition>Tango::DevLong Tango::DeviceImpl::get_locking_ctr</definition>
        <argsstring>()</argsstring>
        <name>get_locking_ctr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3371" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3371" bodyend="3371"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1afc7de6fbb3ae1e3002b00bed6be3dcce" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t Tango::DeviceImpl::get_locking_date</definition>
        <argsstring>()</argsstring>
        <name>get_locking_date</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3370" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3370" bodyend="3370"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a3a591807d5ada4b10c9971bdb8a06f2b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d4/d1c/classlog4tango_1_1Logger" kindref="compound">log4tango::Logger</ref> *</type>
        <definition>log4tango::Logger* Tango::DeviceImpl::get_logger</definition>
        <argsstring>(void)</argsstring>
        <name>get_logger</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3423" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3423" bodyend="3424"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ab2c0e400ac01662f274234e18c9c4d81" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/d1c/classlog4tango_1_1Logger" kindref="compound">log4tango::Logger</ref> *</type>
        <definition>log4tango::Logger* Tango::DeviceImpl::get_logger_i</definition>
        <argsstring>(void)</argsstring>
        <name>get_logger_i</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3581" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a7144d7723c5ad0d2b852fb6167c00d4d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Tango::DeviceImpl::get_min_poll_period</definition>
        <argsstring>()</argsstring>
        <name>get_min_poll_period</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3384" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3384" bodyend="3384"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ac48e763be1c4ed29b5db7d658e4c5375" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string &amp;</type>
        <definition>string&amp; Tango::DeviceImpl::get_name_lower</definition>
        <argsstring>()</argsstring>
        <name>get_name_lower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3343" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3343" bodyend="3343"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a06a946a529faf461c8208dcd27547944" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; string &gt; &amp;</type>
        <definition>vector&lt;string&gt;&amp; Tango::DeviceImpl::get_non_auto_polled_attr</definition>
        <argsstring>()</argsstring>
        <name>get_non_auto_polled_attr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3335" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3335" bodyend="3335"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a491bb3187ff62366eb5256bac962960a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; string &gt; &amp;</type>
        <definition>vector&lt;string&gt;&amp; Tango::DeviceImpl::get_non_auto_polled_cmd</definition>
        <argsstring>()</argsstring>
        <name>get_non_auto_polled_cmd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3334" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3334" bodyend="3334"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ab31565c6a3d9942cb2b0abae707636f4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>client_addr *</type>
        <definition>client_addr* Tango::DeviceImpl::get_old_locker</definition>
        <argsstring>()</argsstring>
        <name>get_old_locker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3369" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3369" bodyend="3369"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aca84ec4f7716068a43e40dcc2dfa92ee" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TangoMonitor &amp;</type>
        <definition>TangoMonitor&amp; Tango::DeviceImpl::get_pipe_conf_monitor</definition>
        <argsstring>()</argsstring>
        <name>get_pipe_conf_monitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3348" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3348" bodyend="3348"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a549246982736c424d8304f25d7778b6d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TangoMonitor &amp;</type>
        <definition>TangoMonitor&amp; Tango::DeviceImpl::get_poll_monitor</definition>
        <argsstring>()</argsstring>
        <name>get_poll_monitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3346" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3346" bodyend="3346"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a42f2d839c143e0ceeff50ed9aa89180a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; PollObj * &gt; &amp;</type>
        <definition>vector&lt;PollObj *&gt;&amp; Tango::DeviceImpl::get_poll_obj_list</definition>
        <argsstring>()</argsstring>
        <name>get_poll_obj_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3336" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3336" bodyend="3336"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a9780ef747e3a8642c847216adcb974b7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long Tango::DeviceImpl::get_poll_old_factor</definition>
        <argsstring>()</argsstring>
        <name>get_poll_old_factor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3327" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3327" bodyend="3327"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1acbc5ce14c89ba181b484c66b75415d2d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long Tango::DeviceImpl::get_poll_ring_depth</definition>
        <argsstring>()</argsstring>
        <name>get_poll_ring_depth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3324" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3324" bodyend="3324"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a2468fa2285d10a4ea599b56015542f16" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; string &gt; &amp;</type>
        <definition>vector&lt;string&gt;&amp; Tango::DeviceImpl::get_polled_attr</definition>
        <argsstring>()</argsstring>
        <name>get_polled_attr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3333" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3333" bodyend="3333"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a935c45ff9a2c1b964184d7aa1759144a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; string &gt; &amp;</type>
        <definition>vector&lt;string&gt;&amp; Tango::DeviceImpl::get_polled_cmd</definition>
        <argsstring>()</argsstring>
        <name>get_polled_cmd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3332" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3332" bodyend="3332"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aa17ae5554233000425465c6c7d52cf69" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::get_with_fwd_att</definition>
        <argsstring>()</argsstring>
        <name>get_with_fwd_att</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3402" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3402" bodyend="3402"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a0fa1b5309345cc773f8ad95aca947c3d" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Tango::DevInfo *</type>
        <definition>virtual Tango::DevInfo* Tango::DeviceImpl::info</definition>
        <argsstring>()</argsstring>
        <name>info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3312" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a5c43c244cc96e1766a16074f54f3b4fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::init_attr_poll_ext_trig</definition>
        <argsstring>(string cmd_name)</argsstring>
        <name>init_attr_poll_ext_trig</name>
        <param>
          <type>string</type>
          <declname>cmd_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a5138b1c1eadf15231340fcdb17a3e557" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::init_attr_poll_period</definition>
        <argsstring>()</argsstring>
        <name>init_attr_poll_period</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3454" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a6dd745ae3b60c70334e0d3fcf21c1024" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::init_cmd_poll_ext_trig</definition>
        <argsstring>(string cmd_name)</argsstring>
        <name>init_cmd_poll_ext_trig</name>
        <param>
          <type>string</type>
          <declname>cmd_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3388" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aef6bf24ce6cb6c2515f4240b0cd37815" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::init_cmd_poll_period</definition>
        <argsstring>()</argsstring>
        <name>init_cmd_poll_period</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3453" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ab3dd49233a051a762759065baafa16ba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::init_logger</definition>
        <argsstring>(void)</argsstring>
        <name>init_logger</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3426" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a79cc43fe815e37f742904fa15a6a3e09" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::init_poll_no_db</definition>
        <argsstring>()</argsstring>
        <name>init_poll_no_db</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3455" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a03bb9ff11850669c741fab18d1238610" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::is_alarm_state_forced</definition>
        <argsstring>()</argsstring>
        <name>is_alarm_state_forced</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3394" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3394" bodyend="3394"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a9e7cb6555e93900b0cdb5e2b575ab1c1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::is_device_locked</definition>
        <argsstring>()</argsstring>
        <name>is_device_locked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3367" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3367" bodyend="3367"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a98af493403c5b5865418bdc54b005a77" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::is_intr_change_ev_enable</definition>
        <argsstring>()</argsstring>
        <name>is_intr_change_ev_enable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3415" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3415" bodyend="3415"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ae820aea6cac8944a089a0ac7633d2e1e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::is_polled</definition>
        <argsstring>(bool poll)</argsstring>
        <name>is_polled</name>
        <param>
          <type>bool</type>
          <declname>poll</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3329" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3329" bodyend="3329"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a2f1bc7f2c27b11a9f566fe4ca61e33d0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::is_polled</definition>
        <argsstring>()</argsstring>
        <name>is_polled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3330" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3330" bodyend="3330"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a25b2bae99fd1d64cb6ca93ed722ea38a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::is_py_device</definition>
        <argsstring>()</argsstring>
        <name>is_py_device</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3356" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3356" bodyend="3356"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ac0ab25f589992ef30464b75de4d24ae3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::lock</definition>
        <argsstring>(client_addr *, int)</argsstring>
        <name>lock</name>
        <param>
          <type>client_addr *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ad73592a774aaac7705ea980bb08b54d4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::lock_root_devices</definition>
        <argsstring>(int, bool)</argsstring>
        <name>lock_root_devices</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3575" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ae025aeb4b6d7013d8c8e233bbccbf81c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tango::DevVarLongStringArray *</type>
        <definition>Tango::DevVarLongStringArray* Tango::DeviceImpl::lock_status</definition>
        <argsstring>()</argsstring>
        <name>lock_status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3365" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1afe03517bf0f75a3049f9bd9200cc24d4" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>char *</type>
        <definition>virtual char* Tango::DeviceImpl::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3302" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a4e2fc66c34a59c3d33610d18fd6f1715" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Tango::DeviceImpl::ping</definition>
        <argsstring>()</argsstring>
        <name>ping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a8751fee650a3413762c7d73e8426149d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::poll_lists_2_v5</definition>
        <argsstring>()</argsstring>
        <name>poll_lists_2_v5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a77a51fe172144a814d6b58b4021c9727" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::poll_object</definition>
        <argsstring>(const string &amp;, int, PollObjType)</argsstring>
        <name>poll_object</name>
        <param>
          <type>const string &amp;</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1ac5ffdb26e95e0c322c8ed79524ad9b6e" kindref="member">PollObjType</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3571" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a793c55a418baa60620e8a3c42d8cde74" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::polled_data_into_net_object</definition>
        <argsstring>(AttributeIdlData &amp;, long, long, long, PollObj *, const DevVarStringArray &amp;)</argsstring>
        <name>polled_data_into_net_object</name>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a79122420bb8fc15b17138ff0da9bad7d" kindref="member">AttributeIdlData</ref> &amp;</type>
        </param>
        <param>
          <type>long</type>
        </param>
        <param>
          <type>long</type>
        </param>
        <param>
          <type>long</type>
        </param>
        <param>
          <type>PollObj *</type>
        </param>
        <param>
          <type>const DevVarStringArray &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a22f2e385f961393599da61feed50d4cf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_att_conf_event</definition>
        <argsstring>(Attribute *)</argsstring>
        <name>push_att_conf_event</name>
        <param>
          <type><ref refid="d6/dad/classTango_1_1Attribute" kindref="compound">Attribute</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3379" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a88e68886d6dbb9d24f9f7936e25f7c41" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::push_dev_intr</definition>
        <argsstring>(bool)</argsstring>
        <name>push_dev_intr</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3576" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a27ca18faa322f23f1718b38e4a210ed5" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Tango::AttributeValueList *</type>
        <definition>virtual Tango::AttributeValueList* Tango::DeviceImpl::read_attributes</definition>
        <argsstring>(const Tango::DevVarStringArray &amp;names)</argsstring>
        <name>read_attributes</name>
        <param>
          <type>const Tango::DevVarStringArray &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3316" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a64448ead2d916de3ab6c111e76f47fa5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::real_ctor</definition>
        <argsstring>()</argsstring>
        <name>real_ctor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3570" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ae585abce9d04c76b10e7a06f78884185" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::relock</definition>
        <argsstring>(client_addr *)</argsstring>
        <name>relock</name>
        <param>
          <type>client_addr *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a98c2ce439500f985278599d573126d0a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::rem_wrong_fwd_att</definition>
        <argsstring>(const string &amp;)</argsstring>
        <name>rem_wrong_fwd_att</name>
        <param>
          <type>const string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3398" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ac2459ec3bae5c6f73c7111bab48bb3a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::remove_local_command</definition>
        <argsstring>(const string &amp;)</argsstring>
        <name>remove_local_command</name>
        <param>
          <type>const string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3409" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1af43b726f434ed88ba63f9558b5310795" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_alias_name_lower</definition>
        <argsstring>(string &amp;al)</argsstring>
        <name>set_alias_name_lower</name>
        <param>
          <type>string &amp;</type>
          <declname>al</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3376" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3376" bodyend="3376"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a893dc0effeb835826a02f1ca1c78e731" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Tango::DeviceImpl::set_attribute_config</definition>
        <argsstring>(const Tango::AttributeConfigList &amp;new_conf)</argsstring>
        <name>set_attribute_config</name>
        <param>
          <type>const Tango::AttributeConfigList &amp;</type>
          <declname>new_conf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a56cb559049c0f3fb3a4193281ba5ee70" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_call_source</definition>
        <argsstring>(DevSource _s)</argsstring>
        <name>set_call_source</name>
        <param>
          <type>DevSource</type>
          <declname>_s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3404" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3404" bodyend="3404"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ace14d56f2ce5400d7818ef1da451298a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_client_lib</definition>
        <argsstring>(int _l)</argsstring>
        <name>set_client_lib</name>
        <param>
          <type>int</type>
          <declname>_l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3420" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3420" bodyend="3420"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ade61e3830b3a149f4237b192fab0cc38" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_event_intr_change_subscription</definition>
        <argsstring>(time_t _t)</argsstring>
        <name>set_event_intr_change_subscription</name>
        <param>
          <type>time_t</type>
          <declname>_t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3411" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3411" bodyend="3411"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a977c375aa540714a22cb9da1ed34386f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_event_param</definition>
        <argsstring>(vector&lt; EventPar &gt; &amp;)</argsstring>
        <name>set_event_param</name>
        <param>
          <type>vector&lt; <ref refid="de/d7e/structTango_1_1EventPar" kindref="compound">EventPar</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3418" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a150b429f83e1bfec4d2c0ef700cc7e4c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_exported_flag</definition>
        <argsstring>(bool exp)</argsstring>
        <name>set_exported_flag</name>
        <param>
          <type>bool</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3320" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3320" bodyend="3320"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a152130a658c29062fcdf5e818a2bab67" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_locking_param</definition>
        <argsstring>(client_addr *, client_addr *, time_t, DevLong, DevLong)</argsstring>
        <name>set_locking_param</name>
        <param>
          <type>client_addr *</type>
        </param>
        <param>
          <type>client_addr *</type>
        </param>
        <param>
          <type>time_t</type>
        </param>
        <param>
          <type>DevLong</type>
        </param>
        <param>
          <type>DevLong</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1af37249aefe167dfb427a1fe1712d5068" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_pipe_prop</definition>
        <argsstring>(vector&lt; PipeProperty &gt; &amp;, Pipe *, PipePropType)</argsstring>
        <name>set_pipe_prop</name>
        <param>
          <type>vector&lt; PipeProperty &gt; &amp;</type>
        </param>
        <param>
          <type><ref refid="d8/d14/classTango_1_1Pipe" kindref="compound">Pipe</ref> *</type>
        </param>
        <param>
          <type>PipePropType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3578" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ad02ed4d3e309beb4a8e2f81f4535087a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_poll_old_factor</definition>
        <argsstring>(long fact)</argsstring>
        <name>set_poll_old_factor</name>
        <param>
          <type>long</type>
          <declname>fact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3326" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3326" bodyend="3326"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aa246d24951b786225cc077692d68d7e6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_poll_ring_depth</definition>
        <argsstring>(long depth)</argsstring>
        <name>set_poll_ring_depth</name>
        <param>
          <type>long</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3323" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3323" bodyend="3323"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1aba7f86b330e955a328d81e5fe0c421a1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_py_device</definition>
        <argsstring>(bool py)</argsstring>
        <name>set_py_device</name>
        <param>
          <type>bool</type>
          <declname>py</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3357" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3357" bodyend="3357"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1ae2ddcb0a33ab0cef90ccf340f3fcae64" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_run_att_conf_loop</definition>
        <argsstring>(bool val)</argsstring>
        <name>set_run_att_conf_loop</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3391" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3391" bodyend="3391"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a9879f75c7dcdaa81d9aae20f0c63aab5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::set_with_fwd_att</definition>
        <argsstring>(bool _b)</argsstring>
        <name>set_with_fwd_att</name>
        <param>
          <type>bool</type>
          <declname>_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3401" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3401" bodyend="3401"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a9d0b5e0ad2b5e0d5ac5e9b8764a71166" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::start_logging</definition>
        <argsstring>(void)</argsstring>
        <name>start_logging</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3427" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a708de4536bff1f48d80d830ceab314e1" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Tango::DevState</type>
        <definition>virtual Tango::DevState Tango::DeviceImpl::state</definition>
        <argsstring>()</argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3306" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a7942060dfb846eb63112d1b2b9404314" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>char *</type>
        <definition>virtual char* Tango::DeviceImpl::status</definition>
        <argsstring>()</argsstring>
        <name>status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3305" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a6de917b1dc8214ce8d17a23a9216a7ee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::stop_logging</definition>
        <argsstring>(void)</argsstring>
        <name>stop_logging</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3428" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a62576d25bc48165ce04b3d11c7ca2f4b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::stop_poll_object</definition>
        <argsstring>(const string &amp;, PollObjType)</argsstring>
        <name>stop_poll_object</name>
        <param>
          <type>const string &amp;</type>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1ac5ffdb26e95e0c322c8ed79524ad9b6e" kindref="member">PollObjType</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3572" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a2c540c81c930f6b63ca0abe397a7c270" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::stop_polling</definition>
        <argsstring>(bool)</argsstring>
        <name>stop_polling</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a7432e32b0c844cb8a36a0f5055a5384a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::stop_polling</definition>
        <argsstring>()</argsstring>
        <name>stop_polling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3338" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="3338" bodyend="3338"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a42772d60722ba814b1dac9f6702ec7f7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::throw_locked_exception</definition>
        <argsstring>(const char *meth)</argsstring>
        <name>throw_locked_exception</name>
        <param>
          <type>const char *</type>
          <declname>meth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3451" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a015e8224f94d56512e6768ba4d1f596d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tango::DevLong</type>
        <definition>Tango::DevLong Tango::DeviceImpl::unlock</definition>
        <argsstring>(bool)</argsstring>
        <name>unlock</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1acb216e60611dbbeee06bce84882d7d84" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::DeviceImpl::update_wrong_conf_att</definition>
        <argsstring>(const string &amp;, FwdAttError)</argsstring>
        <name>update_wrong_conf_att</name>
        <param>
          <type>const string &amp;</type>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a1e389712aae3f56c65cda947d965f8f3" kindref="member">FwdAttError</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3399" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a62edfc4cd59c5339127615bb6c92ba38" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Tango::DeviceImpl::valid_lock</definition>
        <argsstring>()</argsstring>
        <name>valid_lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3364" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d62/classTango_1_1DeviceImpl_1a4334e7e8b029aa2e6b6341784c81b59e" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Tango::DeviceImpl::write_attributes</definition>
        <argsstring>(const Tango::AttributeValueList &amp;values)</argsstring>
        <name>write_attributes</name>
        <param>
          <type>const Tango::AttributeValueList &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="3317" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for all TANGO device. </para>    </briefdescription>
    <detaileddescription>
<para>This class inherits from CORBA classes where all the network layer is implemented.</para><para>$Author$ $Revision$ </para>    </detaileddescription>
    <inheritancegraph>
      <node id="945">
        <label>Tango::Device_3Impl</label>
        <link refid="db/d65/classTango_1_1Device__3Impl"/>
        <childnode refid="944" relation="public-inheritance">
        </childnode>
      </node>
      <node id="944">
        <label>Tango::Device_2Impl</label>
        <link refid="d8/dbf/classTango_1_1Device__2Impl"/>
        <childnode refid="942" relation="public-inheritance">
        </childnode>
      </node>
      <node id="943">
        <label>POA_Tango::Device</label>
      </node>
      <node id="947">
        <label>Tango::Device_5Impl</label>
        <link refid="d5/d94/classTango_1_1Device__5Impl"/>
        <childnode refid="946" relation="public-inheritance">
        </childnode>
      </node>
      <node id="946">
        <label>Tango::Device_4Impl</label>
        <link refid="dc/dd9/classTango_1_1Device__4Impl"/>
        <childnode refid="945" relation="public-inheritance">
        </childnode>
      </node>
      <node id="942">
        <label>Tango::DeviceImpl</label>
        <link refid="d3/d62/classTango_1_1DeviceImpl"/>
        <childnode refid="943" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="951">
        <label>Tango::DeviceClass</label>
        <link refid="d4/dcd/classTango_1_1DeviceClass"/>
        <childnode refid="952" relation="usage">
          <edgelabel>db_class</edgelabel>
        </childnode>
      </node>
      <node id="950">
        <label>Tango::MultiAttribute</label>
        <link refid="dc/d3b/classTango_1_1MultiAttribute"/>
      </node>
      <node id="949">
        <label>POA_Tango::Device</label>
      </node>
      <node id="952">
        <label>Tango::DbClass</label>
        <link refid="dc/d38/classTango_1_1DbClass"/>
      </node>
      <node id="948">
        <label>Tango::DeviceImpl</label>
        <link refid="d3/d62/classTango_1_1DeviceImpl"/>
        <childnode refid="949" relation="public-inheritance">
        </childnode>
        <childnode refid="950" relation="usage">
          <edgelabel>dev_attr</edgelabel>
        </childnode>
        <childnode refid="951" relation="usage">
          <edgelabel>device_class</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/tango/workspace/cppTango/include/tango/server/device.h" line="91" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/device.h" bodystart="90" bodyend="3589"/>
    <listofallmembers>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a6f2fc81c9afd1873d6b9f9d0eaeb61c7" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>_AttErrorType</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a0895eb0df1a110eba046df7200d86f48" prot="public" virt="virtual"><scope>Tango::DeviceImpl</scope><name>_default_POA</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a3326688aee28cf9040494f8caa448ddf" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>_PipePropType</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a9f130650c3a9da5190001adfbc2dc50c" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>add_attribute</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a64f3aafd381cd25bb562cdb4074932d9" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>add_command</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a57b6296e483e01cb62ffdce4eca0261a" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>adm_device_name</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aafb2afd88d66d35f3d6be2a329fb7680" prot="private" virt="virtual"><scope>Tango::DeviceImpl</scope><name>adm_name</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1acf178ae59a8ce1e944b0677922f214f6" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>alarm_status</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a536a54f8451205a5ab59a2ecad475b31" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>alias_name_lower</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1af096e90d9cce2f4106bf4fde824ff493" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>alrmd_not_read</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a086fe46c88aed6e2aff70a9cb6c26e84" prot="public" virt="virtual"><scope>Tango::DeviceImpl</scope><name>always_executed_hook</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab1c6dfb1ea310030cd464f9091a2b8b0" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>append_status</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a1fe068db8a819be891d9bca58d33690b" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>att_conf_loop</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac078604ab95492d81389a0f353ec8347" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>att_conf_mon</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aee529679b59311e08fee3529b4f1633d" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>att_mem_failed</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a34ca443eb5edafc5bd0e836e07e74f8e" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>att_wrong_db_conf</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab8bc5caa7c8e556c75d3e493206382d7" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>AttErrorType</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac69edadbb7308c45733f1472c39849f4" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>attr_min_poll_period</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a11f3dcc0446df9bd38917d2d744430c2" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>attr_poll_ring_depth</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1af23fbbff90bc9f368d8159adaa7e5089" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>basic_unlock</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1add1e6636c2b8aa02693ceb056b8e94e2" prot="private" virt="virtual"><scope>Tango::DeviceImpl</scope><name>black_box</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a15c1dfe122a3648d20005a8822b7cfcd" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>black_box_create</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac1b1c0e44d43f83e9b6a1633dbfe2967" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>blackbox_depth</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1afdc166bd02d4723a09861bfbbf285c77" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>blackbox_ptr</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1acb1621e498f83ed8898808cbcead8826" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>build_att_list_in_status_mess</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a5a6a3485960b529b43ee415e8fb60d92" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>call_source</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a0c3821270ea19ed6b9ca25e77c7f76ae" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>check_att_conf</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ad36249debd6c691cbe2ba6f8be94a978" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>check_command_exists</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a64599a4e6dddc7e5ab0b8938ec8f7db0" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>check_lock</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a676d74529d155d9e6ffc85423d1c74be" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>clean_locker_ptrs</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab382360c9905c8847a341019c6d4fe7d" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>client_lib</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a21633f1e9b40b1b54ed31a9b19826170" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>cmd_min_poll_period</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a0c0d499e97f02c5dd57553f7867afd48" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>cmd_poll_ring_depth</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ae1ce1f491a34855ea2970a277adfe11a" prot="private" virt="virtual"><scope>Tango::DeviceImpl</scope><name>command_inout</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1acbdee8e723a29e475011eda1e5d3ac92" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>command_list</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aaa63201d6e015d44a42cc82b8061dc4c" prot="private" virt="virtual"><scope>Tango::DeviceImpl</scope><name>command_list_query</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a1f10d9a72fa3791d0963a9ee704263b1" prot="private" virt="virtual"><scope>Tango::DeviceImpl</scope><name>command_query</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a6f2fc81c9afd1873d6b9f9d0eaeb61c7adc8b9eeb7d45d5adf4ce063931e56971" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>CONF</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab4b7bdcca9c83603da302783c86553bc" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>create_DevVarCharArray</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a11715eb4830c827fed3b0e5592cfd1a0" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>create_DevVarDoubleArray</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab0cee831dc51482a9b16f49406a796c4" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>create_DevVarFloatArray</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a78a091f645e75c006f856adde52c1c50" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>create_DevVarLong64Array</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac094cb1f6aaf9f8672e7a508ac561e6b" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>create_DevVarLongArray</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa4c9e98e8b3fa64328eca74a4d1e07d3" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>create_DevVarShortArray</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1abe7b41d84597f3e9327c2a8fdc2eff2b" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>create_DevVarStringArray</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa00f880d45531edc57cf3f070ce9e757" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>create_DevVarULong64Array</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a408b4dd2c4b27caf1ffdefdc5fdde784" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>create_DevVarULongArray</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ad08bf54e4603f07b21a522047626ffef" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>create_DevVarUShortArray</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa07c65c0e9e68b46c4a26fc2822da270" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>d_var</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a83e77f16a3f7af19c91bdab3177ed519" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>data_into_net_object</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ae063e45a3778e7241d74f7270461cbb4" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>db_dev</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac2cf9bd6e0a5da8c121c65b068d36463" prot="public" virt="virtual"><scope>Tango::DeviceImpl</scope><name>delete_device</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a480f48ff00c9d1aa8bd406323967df7d" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>desc</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a61bfc9d6a2b257875b4189bb97dd0944" prot="private" virt="virtual"><scope>Tango::DeviceImpl</scope><name>description</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a3326688aee28cf9040494f8caa448ddfacaa05b495cfad6432137258947abc585" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>DESCRIPTION</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aed3e20a35c92335be9ba742abdd9d60b" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>dev_attr</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a1b5f98bd245bd7e94403eaebc2913283" prot="public" virt="virtual"><scope>Tango::DeviceImpl</scope><name>dev_state</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1afcea586ff5d465e6f752fd256a66aeea" prot="public" virt="virtual"><scope>Tango::DeviceImpl</scope><name>dev_status</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a103c3527a529f7a40ecadf227a8a7990" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>device_class</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ad55e1d6f0d75d6102cbccd2877288cdb" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>device_locked</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1af2649629d515c38fc5a19c44f07e2f40" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>device_name</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a6c0138faf1c0c2a1af078bebf4f23e68" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>device_name_lower</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1af603b16b22b0095d49a9ec08667a0913" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>device_prev_state</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a214ba0a5741c52165869ae11219d414a" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>device_state</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa66233801c127f96878d701259739383" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>device_status</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a5cd151bc1016a1e0aaee47df1949fc03" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>DeviceImpl</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a2b7b74d29766be8582b66bd70b18e670" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>DeviceImpl</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a8159577740dda7690d6a9b416ee51721" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>DeviceImpl</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a44ad2f0801d241cf16d84b629cb85b1a" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>DeviceImpl</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1afff96e28ca8a0f7aa8ca3e0a74af8f88" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>devintr_mon</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ae422a9f9e0a6a30a7c7df5c7af68cbeb" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>devintr_shared</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a537e9205b3aab956cbd90d8d842a1a9b" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>devintr_thread</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a88ce332226acc894a44dfe3b2126cea4" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>disable_intr_change_ev</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a2c500b3d972cd39385c6cc07604f1539" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>dummy_boolean_att_value</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a201fb0124ae713a97ed74674f151c659" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>dummy_double_att_value</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a284330570af11939f672b10e8e9a0038" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>dummy_encoded_att_value</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a90f2cc0aa7468a83f83d8f390b4c8b99" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>dummy_float_att_value</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aafbe59c88bc1e1051da6726289c77502" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>dummy_long64_att_value</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a9e648f388ceee8469099f6406a6f0756" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>dummy_long_att_value</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a8ddc2ffc78fea4ba449af67091280e72" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>dummy_short_att_value</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a9da3d40e6541f617f56ca40083bbbeea" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>dummy_state_att_value</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a0f28cd7cf8c77e592cffe58c03394d03" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>dummy_string_att_value</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab3acefa57be9a11112fedaf95fa75415" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>dummy_uchar_att_value</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a3c3f3c223d9341362f660becc35deace" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>dummy_ulong64_att_value</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aab1889748df0681882dabe9840cdd518" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>dummy_ulong_att_value</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a73e21dabcbdaf923278725d2f0e30c6f" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>dummy_ushort_att_value</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a62e1404ca8e5b6b9a616f5f3ada395a3" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>enable_intr_change_ev</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1abac02ef17c180e5f8002a2b84669b0a0" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>end_pipe_config</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a62e43d82367406952f48a061047b37e3" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>event_intr_change_subscription</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a101cb6d585e97bbfb599a154f2dbbb69" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>exported</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a35bca57a4f0f34177330d1d2d80e1a31" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>ext</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a9c404f758a6036b66fef5ecdb6f7e6ad" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>force_alarm_state</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a6f2fc81c9afd1873d6b9f9d0eaeb61c7a920b50e411d8da4095f93aa4fd5ca0a3" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>FWD</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1adf587767927497dddd7ae261f1232336" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>fwd_att_wrong_conf</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1af745fb5c5bdb7bd88262d7c21e7403ea" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>FwdWrongConf</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a278c4f1aab8c4936199fefe4b24dbdc3" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_alarmed_not_read</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa2c04a6dacaf3c5471e05e29fd8724db" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_alias_name_lower</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a49d783e77595c66800bac547c084b3c4" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_att_conf_monitor</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a768ec9b5e56fa401075ac9e0d035e0af" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_att_mem_failed</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aac4088c19c1ea28cf7a463cb22067913" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_att_wrong_db_conf</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a1117951e64da386d39c354cfcf6443e4" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_attr_min_poll_period</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a777aa9a60854cac251e17da6726122b5" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_attr_poll_ring_depth</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a54ef6dc326d788773c57d25edf30decc" prot="private" virt="virtual"><scope>Tango::DeviceImpl</scope><name>get_attribute_config</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab4b52ce4ebdfb338399dc146cc629529" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_attribute_poll_period</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ae25c99f1a1fffc2278eb7090d54f214a" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_call_source</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a393ccb787e50d175b78d750dfbc1f505" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_client_ident</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a576cec122adc2d75d7b511a18c54b11e" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_cmd_min_poll_period</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a58b555f3b8ff833871d1c07c2ccf9cbd" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_cmd_poll_ring_depth</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a292e006eab3f5fca95ab88dd8c09d9e0" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_command</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a00f3e7b568926d1e09b1dff8f574979f" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_command_poll_period</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1af57cb03749073660df2f1515204d17aa" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_d_var</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a6a5e05c240b76db97a357703bdd30552" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_db_device</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a8f626631bfb8424521acb87aced3551f" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_dev_idl_version</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ad389b3cfeb03a4862bb9e517a6057e40" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_dev_monitor</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aaa5ac8faa619872dd84b1eefca41a0fb" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_dev_system_resource</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a339ebeff825166048358919948782be8" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_device_attr</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a61fa9524c2eba31eba7ba9ff3b48ef0a" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_device_class</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a49b047237146c6d872dc607811a51205" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_event_intr_change_subscription</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a2ec5a6c2bea974e1af63546395e81b37" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_event_param</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a02f64b060a63a4f8877612d4b8f3dc5d" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_exported_flag</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab59c82df2b094081252cba2e02fd6e67" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_fwd_att_wrong_conf</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a3b75a58e9f07b4241849cfd9d83f0e2d" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_local_cmd_by_name</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a0b8fbbb0f224f473b8a1ad871be7a798" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_local_command_list</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a5beaef9d150af0a209cc010a5253e306" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_lock_validity</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a6f42fc61f54427dae8630fa9cbad1f08" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_locker</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa452f2d930541dc5e10e3fa07728442f" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_locking_ctr</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1afc7de6fbb3ae1e3002b00bed6be3dcce" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_locking_date</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a3a591807d5ada4b10c9971bdb8a06f2b" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_logger</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab2c0e400ac01662f274234e18c9c4d81" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_logger_i</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a7144d7723c5ad0d2b852fb6167c00d4d" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_min_poll_period</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac337fcab0f8fa8647e817a9aedc87f0c" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_name</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac48e763be1c4ed29b5db7d658e4c5375" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_name_lower</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a06a946a529faf461c8208dcd27547944" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_non_auto_polled_attr</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a491bb3187ff62366eb5256bac962960a" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_non_auto_polled_cmd</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a59b8a8053b36fe6eb5058342f77829ab" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_obj_id</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab31565c6a3d9942cb2b0abae707636f4" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_old_locker</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aca84ec4f7716068a43e40dcc2dfa92ee" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_pipe_conf_monitor</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a549246982736c424d8304f25d7778b6d" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_poll_monitor</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a42f2d839c143e0ceeff50ed9aa89180a" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_poll_obj_list</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a9780ef747e3a8642c847216adcb974b7" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_poll_old_factor</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1acbc5ce14c89ba181b484c66b75415d2d" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_poll_ring_depth</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a2468fa2285d10a4ea599b56015542f16" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_polled_attr</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a935c45ff9a2c1b964184d7aa1759144a" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_polled_cmd</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac47d75934efad28b5668ee8b90df0999" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_polled_obj_by_type_name</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a051cb13d94de8492f37a9b5f48e38e56" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_prev_state</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a5b53b4435a1ea8087849a9e505d70f2a" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_state</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1adc92cdf3a75da5ebc139b7bf7d9c7377" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_status</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa17ae5554233000425465c6c7d52cf69" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>get_with_fwd_att</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1af03d91908163b2b9a9a4ca5642a1471e" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>idl_version</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a0fa1b5309345cc773f8ad95aca947c3d" prot="private" virt="virtual"><scope>Tango::DeviceImpl</scope><name>info</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a5c43c244cc96e1766a16074f54f3b4fb" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>init_attr_poll_ext_trig</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a5138b1c1eadf15231340fcdb17a3e557" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>init_attr_poll_period</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a6dd745ae3b60c70334e0d3fcf21c1024" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>init_cmd_poll_ext_trig</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aef6bf24ce6cb6c2515f4240b0cd37815" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>init_cmd_poll_period</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1afaa3632ea04076bb5614a98ff944ef8c" prot="public" virt="pure-virtual"><scope>Tango::DeviceImpl</scope><name>init_device</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab3dd49233a051a762759065baafa16ba" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>init_logger</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a79cc43fe815e37f742904fa15a6a3e09" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>init_poll_no_db</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a7dd446bc585252adb1ffeaccff88e6d6" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>intr_change_ev</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a03bb9ff11850669c741fab18d1238610" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>is_alarm_state_forced</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab6434f2fd256b10b21ba38ba80b7231c" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>is_attribute_polled</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab3075b4e266562181c28d33be817ec0d" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>is_command_polled</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a9e7cb6555e93900b0cdb5e2b575ab1c1" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>is_device_locked</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a98af493403c5b5865418bdc54b005a77" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>is_intr_change_ev_enable</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ae820aea6cac8944a089a0ac7633d2e1e" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>is_polled</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a2f1bc7f2c27b11a9f566fe4ca61e33d0" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>is_polled</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a25b2bae99fd1d64cb6ca93ed722ea38a" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>is_py_device</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab7ccad84e75ab8e91ada91bb49a028ba" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>is_there_subscriber</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a3326688aee28cf9040494f8caa448ddfa53bd796c9c392201c2c9cc868c5b69aa" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>LABEL</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac0ab25f589992ef30464b75de4d24ae3" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>lock</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a37c6c69afec1aef5d735d0ae69a585ba" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>lock_ctr</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ad73592a774aaac7705ea980bb08b54d4" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>lock_root_devices</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1af58c0d5b336ddf8e4dca466a724ffa87" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>lock_stat</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ae025aeb4b6d7013d8c8e233bbccbf81c" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>lock_status</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a2f2c146feeef02dfdd24cd1bca3d5adf" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>lock_validity</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aef9aecb7794d14592971803fb8c52b64" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>locker_client</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a3ecd3a49b958de4ae2a44e20ba12f200" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>locking_date</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a94d882effb2ebf8346345a6a1dd34332" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>logger</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a6f2fc81c9afd1873d6b9f9d0eaeb61c7a1018efad8db80e1ecbae8e191d395366" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>MEM</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1abb95db0722a59d0d379a512b8f288837" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>min_poll_period</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1afe03517bf0f75a3049f9bd9200cc24d4" prot="private" virt="virtual"><scope>Tango::DeviceImpl</scope><name>name</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a40df33db3d4fc3cc63c48fd423813727" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>non_auto_polled_attr</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a1985cf6c3cb49a06047f895398df719b" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>non_auto_polled_cmd</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a9241b25c5161db7b130ba13e1d84e1c3" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>obj_id</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa03d33512fdb9764707650d0e57772e2" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>old_locker_client</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a0366a5b210a1cf9f8626f59b634cf9b0" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>only_one</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a4e2fc66c34a59c3d33610d18fd6f1715" prot="private" virt="virtual"><scope>Tango::DeviceImpl</scope><name>ping</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a9dc55586f6cc7ed53f1f043e5f2eec77" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>pipe_conf_mon</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a4488544f2aecac16fb07db6949939575" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>PipePropType</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a6a748b41d85396d38cd004a30a10bda1" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>poll_attribute</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a96a247ceb8f389dbb02e8e693847fcdf" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>poll_command</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a8751fee650a3413762c7d73e8426149d" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>poll_lists_2_v5</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a2f3f38ddde41f929902ade063b33e93b" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>poll_mon</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac50d404d7c46ec7667764f47ab0ae101" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>poll_obj_list</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a77a51fe172144a814d6b58b4021c9727" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>poll_object</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a16f2c5fccc8f90113b0ff90cef37e251" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>poll_old_factor</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a69a5a6fe70212baef9eeababfc770ad9" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>poll_ring_depth</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a9ef8386bc5790b6d3634baa52322aa13" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>polled</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a72adceba72e74183cd6fb5bba526c3ec" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>polled_attr</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac274a2c0eae4059c2034dd7ee221a7cb" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>polled_cmd</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a793c55a418baa60620e8a3c42d8cde74" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>polled_data_into_net_object</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a5db64e22096acbd28c24e4c0eb91ae8f" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a2178a2b731db74bcbee66e774dff4d9a" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a8fa59e2bc965e66a9ca4611b7632bfd5" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac05ed03092d65731a1089c46f4b2fda9" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a635750d8940f09287bf50883a26bc021" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a8b2f401ee83720c7d51887617258b8a1" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa23b3a45fbff170bb26e7d7ac601184c" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a49d509f24520272f94c3b62f05f0f2f4" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a07bc41aaf4b0c07c6ed0eab8c619d83f" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a6ccc427017496027aa8f050e002e065e" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a7091e910df2b9b91311f009b3911c915" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1abba65795f545e527852cdb9c0629a641" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a5bd5bb3ec090a5313ee8489b7c7567d2" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a46a4961a1752697ae17e35ad90722c13" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1af9784d0a0460bd5c2c6fa3ef9817ed27" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab569d4dbbb2005a7073fc331035bea88" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a0a405f3f33a489bd943795cdca916506" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a9d97a4c743bd5d7df0418f19ab31c68b" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac077d834876215e373c5904ae438ac03" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1af12a4fcc2686eafc5766a92471318c90" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a5a14133c408b27f7bb1ea58ade98eb9f" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a98a556bc3f307877add6dfb511174d06" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a82ae5e5698a922ad745ec885d3be5d60" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a0548aefd3fec998fcd006dd5b3f21909" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a4e2c6e3b95067910f1e3fd091985ba68" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a0270cdbc600f7f614708175e7f2c674b" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ae9eed5a3b6fd5dd301c1bbf37a12172a" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a489ed63de4130e0e9ba98d9a08b2b9b8" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a0fd048e5cfeab65ae3c29eaea1f22ab9" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a22f2e385f961393599da61feed50d4cf" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_att_conf_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a6c789211496cd65dd417ea4fe633c85a" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a25b61671395cd833817d073449d2a240" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a188894e6cce3c43e0ee2dc6197cf6b8d" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a09d665b63b701372e4f2ea71750db462" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a11d1533d2eb6d80ec41100b71605284a" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1af12b9042dffbceb6462b151eeb01f6f8" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a65aaa57d7ae064487cebf48eee239401" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ad46f18d53f1d78430bf0113ba4b0d8d2" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a3c0f829c573f5da1674d3e02aff2fce3" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a54443f0082d8903d300677f587589d4d" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa915d01687a0fd1739a1dadcac78ef31" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1adf7a4e85571cd258a27a2dc8ea25fd49" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a74931b906e58ca078cb93746ee620016" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a8aca443b2753cd3258bafa05ad534d4b" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1af08f98bd4d9f40b3359b1a54ddfeae30" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a036f0e21df2369343321838be2368e79" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a5f4b6031c439b9a6ff7e6e933bc60e82" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a1a78d899253dc8be6c44866dc8dd055f" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a3a57944f25d7478ac59f8d3861c5696a" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab2eb1193f346084132ec037add29c55f" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a7e5d6d6a6e2f15baad7a76465b93b1a6" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a94e5ed83c55f047f2871f5e1bee985fa" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1abb808eb7ddf3444c8cc411dc74f15c01" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a4da73eb21138da11e156c018ceff3810" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ae747f15a580daaa2977402598b2e5550" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a23bfcd091ac32924cb96d5a64e4dbd95" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a111da256603495d6eb8e2ec2c35ae639" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a37eb1710cf8c1f44d8990ebfbec5c6b5" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a00fa2ee4c3603f919c7aef49b107b053" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a0de42a80d6d1fc464b142dae308671b4" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_data_ready_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a88e68886d6dbb9d24f9f7936e25f7c41" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_dev_intr</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a002bc27747f35517048b5b87169c52c8" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1abea2bef4a09d8c32e00d52b42dcb1519" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a57e7b6629cb3b1b6a025f290b3950747" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a67ca044f6c93e871d8964b4b60f741cf" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1abe5a15e693deaa18fe61a0445c463635" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ae33711bbb1c5fa7ac69d7b569d85153e" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a4da3dedd55a7f7208543db0fda31e741" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa50f68d34b10b33c56588040a16d9767" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a277a59839649739fc734cf797e7b494f" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a36c9c565106b8730986e1ce889bed8ac" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a4f81154a4b42d6b7ae853af50fa9b1a9" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a286e1bc0c636bcac6b75a42caacb31c6" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aba816f038f5fb56bed646118c86b5528" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a80d07794e70f84930fc1125237659a5d" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a349cda6696deb45ea5ac82f9d0f16efe" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a8be4ec9b7b5c9d085a47da0679cbc7fb" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a79d790e27316aca2aaa355c11f46a97c" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a8a7c19733896179f5282f9009468263f" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a5907485e9673b050add68908f868305a" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a8b6ea9ea8ffb0e688010e7b3804db3e2" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a4999198b1a726c85867eadac47d14494" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a75a48ed53e504fc4a72de34053203c0e" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab5a7d7c3b8e890a814505aafdad79734" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a6a551682fe5936c4364e33fd162da35b" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1af852d77c72a39a73187f491c993d39b9" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a14ac401d247b784b1bd06a485af4f094" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac77151d73d38e817568ae535b1f0ddb8" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aee05a449a784d6d7c5fef37c573ef831" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a0706ab09666f888c28803f0ffc3ac62d" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aedd422cbede721279f2bbac705e34017" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_pipe_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1abfe94a1987a8d5db4b69e9cc2c05c294" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_pipe_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a058f5747705f5bda88f1357dc9b2865e" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>push_pipe_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a9be106541a3cc200a9ba05c99807eb29" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>py_device</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a7c6302cff47fca241560187e1c178701" prot="public" virt="virtual"><scope>Tango::DeviceImpl</scope><name>read_attr</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a934daa7bef5a3f01c50ba304006fdda4" prot="public" virt="virtual"><scope>Tango::DeviceImpl</scope><name>read_attr_hardware</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a27ca18faa322f23f1718b38e4a210ed5" prot="private" virt="virtual"><scope>Tango::DeviceImpl</scope><name>read_attributes</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a64448ead2d916de3ab6c111e76f47fa5" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>real_ctor</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a1066d2fe5f4d45bf12a38c667d02bdb8" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>register_signal</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ae585abce9d04c76b10e7a06f78884185" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>relock</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a98c2ce439500f985278599d573126d0a" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>rem_wrong_fwd_att</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa88509d4d6bba29d28a6c124cf0349a6" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>remove_attribute</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a5fe45df27c5a6a2d9ff951f9f0861d5e" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>remove_attribute</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ae57fcb9d357314f6e4f159a62de3fb8d" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>remove_command</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a3ae8333e1349c4691bf46712afd6f221" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>remove_command</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac2459ec3bae5c6f73c7111bab48bb3a0" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>remove_local_command</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a8dc08c3414f91c894e623dd412727c5b" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>rft</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ac7a280c86fbc2f8ea3fdacf93a862002" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>run_att_conf_loop</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa21962f68812481ccbd0f4e8e9712e3e" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>saved_log_level</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1af43b726f434ed88ba63f9558b5310795" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_alias_name_lower</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ad90289326211e05632a245a87bab11bb" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_archive_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a893dc0effeb835826a02f1ca1c78e731" prot="private" virt="virtual"><scope>Tango::DeviceImpl</scope><name>set_attribute_config</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a56cb559049c0f3fb3a4193281ba5ee70" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_call_source</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1acc288d1cf858125abe0e6e4e154e9f43" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_change_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ace14d56f2ce5400d7818ef1da451298a" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_client_lib</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ae4071b4df6b9398e890d8dea51365383" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_d_var</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ae1ac32627a6ec783de529ddb26e5d900" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_data_ready_event</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1abfe5f92400f24bcfed94bc7a0d731233" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_device_attr</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ade61e3830b3a149f4237b192fab0cc38" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_event_intr_change_subscription</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a977c375aa540714a22cb9da1ed34386f" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_event_param</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a150b429f83e1bfec4d2c0ef700cc7e4c" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_exported_flag</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a152130a658c29062fcdf5e818a2bab67" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_locking_param</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a99aba4af5cd29838f50956a75427d5f7" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_obj_id</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1af37249aefe167dfb427a1fe1712d5068" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_pipe_prop</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ad02ed4d3e309beb4a8e2f81f4535087a" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_poll_old_factor</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa246d24951b786225cc077692d68d7e6" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_poll_ring_depth</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aba7f86b330e955a328d81e5fe0c421a1" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_py_device</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ae2ddcb0a33ab0cef90ccf340f3fcae64" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_run_att_conf_loop</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a2123f00afdfa638c31399eb10efefd66" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_state</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a54f9d94ef1072a6cb19ee472ccf044d7" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_status</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a9879f75c7dcdaa81d9aae20f0c63aab5" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>set_with_fwd_att</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a2f387fb75b3427fc661a4f9b829b1491" prot="public" virt="virtual"><scope>Tango::DeviceImpl</scope><name>signal_handler</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a9d0b5e0ad2b5e0d5ac5e9b8764a71166" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>start_logging</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a708de4536bff1f48d80d830ceab314e1" prot="private" virt="virtual"><scope>Tango::DeviceImpl</scope><name>state</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1adeb0970ccae67ebbc2c600e147fdf6d1" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>state_from_read</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a7942060dfb846eb63112d1b2b9404314" prot="private" virt="virtual"><scope>Tango::DeviceImpl</scope><name>status</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a6de917b1dc8214ce8d17a23a9216a7ee" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>stop_logging</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a70d7f89e019fa63535ab7815a0cb4552" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>stop_poll_attribute</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1acbf6090c2400d6c44a6474b458c58b36" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>stop_poll_command</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a62576d25bc48165ce04b3d11c7ca2f4b" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>stop_poll_object</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a2c540c81c930f6b63ca0abe397a7c270" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>stop_polling</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a7432e32b0c844cb8a36a0f5055a5384a" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>stop_polling</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa07925b00bfbfc9fc099fd8b35dcd11d" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>store_in_bb</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1aa90445f0324fbdea288f7b41aa4a6790" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>Tango::AutoTangoMonitor</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a38c76f8655cb5af13615b7a2ea89d1fe" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>Tango::EventSubscriptionChangeCmd</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a4cdabe9798a15fab2e519f9c4471e32c" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>Tango::EventSupplier</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a2902621019fa17e307d9093137d0d4e7" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>Tango::NoSyncModelTangoMonitor</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a42772d60722ba814b1dac9f6702ec7f7" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>throw_locked_exception</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a015e8224f94d56512e6768ba4d1f596d" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>unlock</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a9bbea9d3b6cf43f467a56d8866b343ca" prot="public" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>unregister_signal</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1acb216e60611dbbeee06bce84882d7d84" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>update_wrong_conf_att</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a62edfc4cd59c5339127615bb6c92ba38" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>valid_lock</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ab3bdf85a2faf1fe98ecd9253c1a51d77" prot="protected" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>version</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1ad4439167bdc241d0017b2f273c49427d" prot="private" virt="non-virtual"><scope>Tango::DeviceImpl</scope><name>with_fwd_att</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a7aee6ee9fee2feb7f358972ec1677328" prot="public" virt="virtual"><scope>Tango::DeviceImpl</scope><name>write_attr_hardware</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a4334e7e8b029aa2e6b6341784c81b59e" prot="private" virt="virtual"><scope>Tango::DeviceImpl</scope><name>write_attributes</name></member>
      <member refid="d3/d62/classTango_1_1DeviceImpl_1a9a5ffdab6150008e52d87ea4c38ee9ff" prot="public" virt="virtual"><scope>Tango::DeviceImpl</scope><name>~DeviceImpl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
