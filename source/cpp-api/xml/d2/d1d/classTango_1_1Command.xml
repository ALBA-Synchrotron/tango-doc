<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="d2/d1d/classTango_1_1Command" kind="class" prot="public" abstract="yes">
    <compoundname>Tango::Command</compoundname>
    <derivedcompoundref refid="de/de1/classTango_1_1TemplCommand" prot="public" virt="non-virtual">Tango::TemplCommand</derivedcompoundref>
    <innerclass refid="d9/dbc/classTango_1_1Command_1_1CommandExt" prot="private">Tango::Command::CommandExt</innerclass>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <description><para>Miscellaneous constructors </para></description>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1ac8aee54ed6b9c883f39a5a15a075c15f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Tango::Command::Command</definition>
        <argsstring>()</argsstring>
        <name>Command</name>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="d2/d1d/classTango_1_1Command" kindref="compound">Command</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>The default constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="95" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a3598206398bf3cb500d88bee3a1c76f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::Command::Command</definition>
        <argsstring>(const char *s, Tango::CmdArgType in, Tango::CmdArgType out)</argsstring>
        <name>Command</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="d2/d1d/classTango_1_1Command" kindref="compound">Command</ref> object for a command from its name and its input and output parameter types. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output parameter description are set to the default String &quot;Uninitialised&quot;. The command display level is set to OPERATOR.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1af4b7d2ad7aa06b60eb273d9214b34af9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::Command::Command</definition>
        <argsstring>(string &amp;s, Tango::CmdArgType in, Tango::CmdArgType out)</argsstring>
        <name>Command</name>
        <param>
          <type>string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="d2/d1d/classTango_1_1Command" kindref="compound">Command</ref> object for a command from its name and its input and output parameter types. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output parameter description are set to the default String &quot;Uninitialised&quot;. The command display level is set to OPERATOR.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1ac4e9596ebbf8ced45a8383185cbbeae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::Command::Command</definition>
        <argsstring>(const char *s, Tango::CmdArgType in, Tango::CmdArgType out, const char *in_desc, const char *out_desc)</argsstring>
        <name>Command</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_desc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>out_desc</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="d2/d1d/classTango_1_1Command" kindref="compound">Command</ref> object for a command from its name, its input and output parameter types plus parameters description The command display level is set to OPERATOR. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The input parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The output parameter description </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a291c62e3e6d852b8c116b7b27c927a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::Command::Command</definition>
        <argsstring>(string &amp;s, Tango::CmdArgType in, Tango::CmdArgType out, string &amp;in_desc, string &amp;out_desc)</argsstring>
        <name>Command</name>
        <param>
          <type>string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>in_desc</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>out_desc</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="d2/d1d/classTango_1_1Command" kindref="compound">Command</ref> object for a command from its name, its input and output parameter types plus parameters description The command display level is set to OPERATOR. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The input parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The output parameter description </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1accaebfd69dc12dd6212a9228724c63a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::Command::Command</definition>
        <argsstring>(const char *s, Tango::CmdArgType in, Tango::CmdArgType out, Tango::DispLevel level)</argsstring>
        <name>Command</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>Tango::DispLevel</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="d2/d1d/classTango_1_1Command" kindref="compound">Command</ref> object for a command from its name and its input and output parameter types. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output parameter description are set to the default String &quot;Uninitialised&quot;.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The command display level </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a99b6f06c975ad890fcb8f551ca6a42a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::Command::Command</definition>
        <argsstring>(string &amp;s, Tango::CmdArgType in, Tango::CmdArgType out, Tango::DispLevel level)</argsstring>
        <name>Command</name>
        <param>
          <type>string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>Tango::DispLevel</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="d2/d1d/classTango_1_1Command" kindref="compound">Command</ref> object for a command from its name and its input and output parameter types. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output parameter description are set to the default String &quot;Uninitialised&quot;.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The command display level </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a34f9bd55d6766d58bc783000cfc3e908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::Command::Command</definition>
        <argsstring>(const char *s, Tango::CmdArgType in, Tango::CmdArgType out, const char *in_desc, const char *out_desc, Tango::DispLevel level)</argsstring>
        <name>Command</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_desc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>out_desc</declname>
        </param>
        <param>
          <type>Tango::DispLevel</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="d2/d1d/classTango_1_1Command" kindref="compound">Command</ref> object for a command from its name, its input and output parameter types plus parameters description. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The input parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The output parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The command display level </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a892d20cd88adcf27ccb7a5483027c856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::Command::Command</definition>
        <argsstring>(string &amp;s, Tango::CmdArgType in, Tango::CmdArgType out, string &amp;in_desc, string &amp;out_desc, Tango::DispLevel level)</argsstring>
        <name>Command</name>
        <param>
          <type>string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
          <declname>out</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>in_desc</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>out_desc</declname>
        </param>
        <param>
          <type>Tango::DispLevel</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="d2/d1d/classTango_1_1Command" kindref="compound">Command</ref> object for a command from its name, its input and output parameter types plus parameters description. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The input parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The output parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The command display level </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="211" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Destructor</header>
      <description><para>Only one desctructor is defined for this class </para></description>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a05ff827c05911f69e56e3835345f5e84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Tango::Command::~Command</definition>
        <argsstring>()</argsstring>
        <name>~Command</name>
        <briefdescription>
<para>The object desctructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="225" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="225" bodyend="225"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous methods</header>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a24505e18425086e1c6b84d7ba1f92503" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>CORBA::Any *</type>
        <definition>virtual CORBA::Any* Tango::Command::execute</definition>
        <argsstring>(DeviceImpl *dev, const CORBA::Any &amp;in_any)=0</argsstring>
        <name>execute</name>
        <reimplementedby refid="de/de1/classTango_1_1TemplCommand_1ac0f9217e1c13600d3ba449ceb6a25cd3">execute</reimplementedby>
        <reimplementedby refid="db/dbb/classTango_1_1TemplCommandInOut_1ac5639e9122031a8e57887ff3411bb482">execute</reimplementedby>
        <reimplementedby refid="d2/d50/classTango_1_1TemplCommandIn_1a13a44e57280e667e24e14bdf58a24181">execute</reimplementedby>
        <reimplementedby refid="d3/d87/classTango_1_1TemplCommandOut_1a4afcfcf600912c43d7e1ae6fc410fae3">execute</reimplementedby>
        <param>
          <type><ref refid="d3/d62/classTango_1_1DeviceImpl" kindref="compound">DeviceImpl</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in_any</declname>
        </param>
        <briefdescription>
<para>Execute the command. </para>        </briefdescription>
        <detaileddescription>
<para>This method is automtically called by the TANGO core classes when the associated command is requested by a client. This method is abstract and must be redefined in each sub-class</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>The device on which the command must be executed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_any</parametername>
</parameternamelist>
<parameterdescription>
<para>The incoming data still packed in a CORBA Any object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The CORBA Any object returned to the client. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the execution method failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1af634fd436701aca40fbcdaeb5d4691b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Tango::Command::is_allowed</definition>
        <argsstring>(DeviceImpl *dev, const CORBA::Any &amp;in_any)</argsstring>
        <name>is_allowed</name>
        <reimplementedby refid="de/de1/classTango_1_1TemplCommand_1a203f6dc3223fd20f230af555e34848fd">is_allowed</reimplementedby>
        <param>
          <type><ref refid="d3/d62/classTango_1_1DeviceImpl" kindref="compound">DeviceImpl</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in_any</declname>
        </param>
        <briefdescription>
<para>Check if the command is allowed in the actual device state. </para>        </briefdescription>
        <detaileddescription>
<para>This method is automtically called by the TANGO core classes when the associated command is requested by a client to check if the command is allowed in the actual device state. This method is the default is_allowed method which always allows the command to be executed. It is possible to re-define it if this default behaviour does not fulfill the device needs.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>The device on which the command must be executed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_any</parametername>
</parameternamelist>
<parameterdescription>
<para>The incoming data still packed in a CORBA Any object. This data is passed to this method in case it is necessary to take the command allowed decision </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean set to true is the command is allowed. Otherwise, the return value is false. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="263" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a9cd12d4e02a35bfdb896a7cc89fc7eb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Tango::Command::init_types</definition>
        <argsstring>()</argsstring>
        <name>init_types</name>
        <reimplementedby refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757">init_types</reimplementedby>
        <reimplementedby refid="d2/d50/classTango_1_1TemplCommandIn_1af3e93eb4babf25ea9552dc0e8f0789c3">init_types</reimplementedby>
        <reimplementedby refid="d3/d87/classTango_1_1TemplCommandOut_1a1b5ec68cc6e225868dc3d56186eb7605">init_types</reimplementedby>
        <briefdescription>
<para>Init command parameters type. </para>        </briefdescription>
        <detaileddescription>
<para>This method is used only for command implemented using the <ref refid="de/ddf/namespaceTango" kindref="compound">Tango</ref> template command model. In this base class, it does nothing and is re-define in sub-classes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="273" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="273" bodyend="273"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Get/Set object members.</header>
      <description><para>These methods allows the external world to get/set <ref refid="d3/d62/classTango_1_1DeviceImpl" kindref="compound">DeviceImpl</ref> instance data members </para></description>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1aa6bfd85b7ee91b2c492fce5938fdaebe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string &amp;</type>
        <definition>string&amp; Tango::Command::get_name</definition>
        <argsstring>()</argsstring>
        <name>get_name</name>
        <briefdescription>
<para>Return the command name. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The command name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="286" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="286" bodyend="286"/>
        <references refid="d2/d1d/classTango_1_1Command_1afd9067bb0dcbcf46ca658ce7710ae025" compoundref="d0/d09/command_8h" startline="1178">name</references>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a13a2bbf037579b576dcee0bc9b55d8f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::set_name</definition>
        <argsstring>(string &amp;new_name)</argsstring>
        <name>set_name</name>
        <param>
          <type>string &amp;</type>
          <declname>new_name</declname>
        </param>
        <briefdescription>
<para>Set the command name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The new command name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="293" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="293" bodyend="293"/>
        <references refid="d2/d1d/classTango_1_1Command_1afd9067bb0dcbcf46ca658ce7710ae025" compoundref="d0/d09/command_8h" startline="1178">name</references>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a92e8a62375817d7e812132e49ee27dc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string &amp;</type>
        <definition>string&amp; Tango::Command::get_lower_name</definition>
        <argsstring>()</argsstring>
        <name>get_lower_name</name>
        <briefdescription>
<para>Return the command name in lower case letters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The command name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="300" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="300" bodyend="300"/>
        <references refid="d2/d1d/classTango_1_1Command_1a7187d828d36d73bc501bb9ab69772c44" compoundref="d0/d09/command_8h" startline="1182">lower_name</references>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a66cba1d14a421998571b5d871e31c155" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
        <definition>Tango::CmdArgType Tango::Command::get_in_type</definition>
        <argsstring>()</argsstring>
        <name>get_in_type</name>
        <briefdescription>
<para>Return the input parameter type. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The input parameter type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="307" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="307" bodyend="307"/>
        <references refid="d2/d1d/classTango_1_1Command_1aea59b62f46dc56304b2f99fa05a70109" compoundref="d0/d09/command_8h" startline="1186">in_type</references>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1ad2b89784882a915431128712973939ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
        <definition>Tango::CmdArgType Tango::Command::get_out_type</definition>
        <argsstring>()</argsstring>
        <name>get_out_type</name>
        <briefdescription>
<para>Return the output parameter type. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The output parameter type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="314" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="314" bodyend="314"/>
        <references refid="d2/d1d/classTango_1_1Command_1a61071f19ab2f13b56d820c71bb6635b2" compoundref="d0/d09/command_8h" startline="1190">out_type</references>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1ae36c1e09f7be85f9bf88fbbf68ca436e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string &amp;</type>
        <definition>string&amp; Tango::Command::get_in_type_desc</definition>
        <argsstring>()</argsstring>
        <name>get_in_type_desc</name>
        <briefdescription>
<para>Return the input parameter description. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The input parameter description </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="321" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="321" bodyend="321"/>
        <references refid="d2/d1d/classTango_1_1Command_1abe71e67349296d10e641bf246a258fd7" compoundref="d0/d09/command_8h" startline="1194">in_type_desc</references>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a32334cc5b6977f362a6ea50da4924653" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string &amp;</type>
        <definition>string&amp; Tango::Command::get_out_type_desc</definition>
        <argsstring>()</argsstring>
        <name>get_out_type_desc</name>
        <briefdescription>
<para>Return the output parameter description. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The output parameter description </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="328" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="328" bodyend="328"/>
        <references refid="d2/d1d/classTango_1_1Command_1a835b44d92d834adfb87606ba5073cb15" compoundref="d0/d09/command_8h" startline="1198">out_type_desc</references>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a943bac0451ccabcb2e093911a6cf852f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tango::DispLevel</type>
        <definition>Tango::DispLevel Tango::Command::get_disp_level</definition>
        <argsstring>()</argsstring>
        <name>get_disp_level</name>
        <briefdescription>
<para>Return the command display level. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The command display level </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="335" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="335" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a47b22bb3cdfdc732c84a07b6db753aba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::set_in_type_desc</definition>
        <argsstring>(const char *desc)</argsstring>
        <name>set_in_type_desc</name>
        <param>
          <type>const char *</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
<para>Set the input parameter description field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The input parameter description </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="342" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="342" bodyend="342"/>
        <references refid="d2/d1d/classTango_1_1Command_1abe71e67349296d10e641bf246a258fd7" compoundref="d0/d09/command_8h" startline="1194">in_type_desc</references>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1aeb1db497ea77211071a7fd11cb2c9900" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::set_in_type_desc</definition>
        <argsstring>(string &amp;desc)</argsstring>
        <name>set_in_type_desc</name>
        <param>
          <type>string &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
<para>Set the input parameter description field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The input parameter description </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="349" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="349" bodyend="349"/>
        <references refid="d2/d1d/classTango_1_1Command_1abe71e67349296d10e641bf246a258fd7" compoundref="d0/d09/command_8h" startline="1194">in_type_desc</references>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1af421f59ba21cb3300d8ed5cdc28114ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::set_out_type_desc</definition>
        <argsstring>(const char *desc)</argsstring>
        <name>set_out_type_desc</name>
        <param>
          <type>const char *</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
<para>Set the output parameter description field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The output parameter description </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="356" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="356" bodyend="356"/>
        <references refid="d2/d1d/classTango_1_1Command_1a835b44d92d834adfb87606ba5073cb15" compoundref="d0/d09/command_8h" startline="1198">out_type_desc</references>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a98bb11a3d9c82fd2e4bbde0ed28d3dcf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::set_out_type_desc</definition>
        <argsstring>(string &amp;desc)</argsstring>
        <name>set_out_type_desc</name>
        <param>
          <type>string &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
<para>Set the output parameter description field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The output parameter description </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="363" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="363" bodyend="363"/>
        <references refid="d2/d1d/classTango_1_1Command_1a835b44d92d834adfb87606ba5073cb15" compoundref="d0/d09/command_8h" startline="1198">out_type_desc</references>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a9108e06b866948d8ea6a5de2cde80853" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::set_disp_level</definition>
        <argsstring>(Tango::DispLevel level)</argsstring>
        <name>set_disp_level</name>
        <param>
          <type>Tango::DispLevel</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Set the command display level. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The command display level </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="370" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="370" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1af8270bde5b9e4b9826419eabb8f8a3ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::set_polling_period</definition>
        <argsstring>(long per)</argsstring>
        <name>set_polling_period</name>
        <param>
          <type>long</type>
          <declname>per</declname>
        </param>
        <briefdescription>
<para>Set the command polling period. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>per</parametername>
</parameternamelist>
<parameterdescription>
<para>The command polling period (in mS) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="377" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="377" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a1e60dcb1a8a89eb7e6596a2f0ecd87a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long Tango::Command::get_polling_period</definition>
        <argsstring>()</argsstring>
        <name>get_polling_period</name>
        <briefdescription>
<para>Get the command polling period. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The command polling period (in mS) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="384" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="384" bodyend="384"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Extract methods.</header>
      <description><para>All these methods extract data from the CORBA Any object received as command input data </para></description>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1aa8a75d6b22f8fd09e07d46982855d233" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, Tango::DevBoolean &amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Tango::DevBoolean &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a boolean data from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted boolean data </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="403" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1af279abb75028ddd1d96950963fad06eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, Tango::DevShort &amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Tango::DevShort &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a short data from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted short data </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="415" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a1c95b781a6cf51bc330d89228a9e6526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, Tango::DevLong &amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Tango::DevLong &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a long data from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted long data </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="427" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a14a8016a57b8828deda2530119d650f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, Tango::DevLong64 &amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Tango::DevLong64 &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a 64 bits long data from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted 64 bits long data </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="439" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1aeb2d6fcfa3acf6d4031af18884d22da7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, Tango::DevFloat &amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Tango::DevFloat &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a float data from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted float data </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="451" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1af920614d03b5e1df3d7c7d74019ddc0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, Tango::DevDouble &amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Tango::DevDouble &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a double data from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted double data </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a56cd878bc00bd6ca125b55e63d87528e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, Tango::DevUShort &amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Tango::DevUShort &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract an unsigned short data from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted unsigned short data </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contanis a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="475" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1ad728692954b432d7eacdaaef88b23e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, Tango::DevULong &amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Tango::DevULong &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract an unsigned long data from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted unsigned long data </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contanis a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="487" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1aa0cef124e525bf10049e549381d92e2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, Tango::DevULong64 &amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Tango::DevULong64 &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract an unsigned 64 bits long data from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted unsigned 64 bits long data </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contanis a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="499" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a422a40ed06a240af34d47ad01c82caee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, Tango::DevString &amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Tango::DevString &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a string from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted string data </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="511" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1ac7af73b7e2addf8e28a4286b9f454957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, const char *&amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const char *&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a const string from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted string data </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="523" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1ae350209b019e0e27b72da229b701cfcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, const Tango::DevVarCharArray *&amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const Tango::DevVarCharArray *&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a char array from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted char array </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="535" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a3431556a6fc4fa01552f29b82cce7a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, const Tango::DevVarShortArray *&amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const Tango::DevVarShortArray *&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a short array from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted short array </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="547" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a490eab9fa4a80f25a9ee4b032c3cd3a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, const Tango::DevVarLongArray *&amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const Tango::DevVarLongArray *&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a long array from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted long array </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="559" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a5cd810f135a01c1872c03245d2636c1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, const Tango::DevVarLong64Array *&amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const Tango::DevVarLong64Array *&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a 64 bits long array from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted 64 bits long array </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="571" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a71bce528c2210b2599afc8c656af333d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, const Tango::DevVarFloatArray *&amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const Tango::DevVarFloatArray *&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a float array from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted float array </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="583" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1ab965311c14dafd6dc1d6e52af4378c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, const Tango::DevVarDoubleArray *&amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const Tango::DevVarDoubleArray *&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a double array from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted double array </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="595" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a1ab6c6ec18eb1cba2fee960c66cd8817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, const Tango::DevVarUShortArray *&amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const Tango::DevVarUShortArray *&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a unsigned short array from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted unsigned char array </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="607" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1af21e73695aa983ae0ce584008db56208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, const Tango::DevVarULongArray *&amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const Tango::DevVarULongArray *&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a unsigned long array from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted unsigned long array </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="619" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a1d4f0266427dc4ef7cfbeaf931771553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, const Tango::DevVarULong64Array *&amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const Tango::DevVarULong64Array *&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a unsigned 64 bits long array from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted unsigned 64 bits long array </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="631" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a80c2ff23d561a93f06ea7a869734de4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, const Tango::DevVarStringArray *&amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const Tango::DevVarStringArray *&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a string array from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted string array </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="643" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a048a55e9d37d70f3e1120b37c730baab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, const Tango::DevVarLongStringArray *&amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const Tango::DevVarLongStringArray *&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a DevVarLongStringArray data from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted DevVarLongStringArray data </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="655" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1ab1ee52c490c42f9a0727d778892bdc3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, const Tango::DevVarDoubleStringArray *&amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const Tango::DevVarDoubleStringArray *&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a DevVarDoubleStringArray data from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted DevVarDoubleStringArray data </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="667" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1acb2054505f53b0b638b3aab737289e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, Tango::DevState &amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Tango::DevState &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a <ref refid="de/ddf/namespaceTango" kindref="compound">Tango</ref> device state data from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted device state data </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="679" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a1cc83923947f3305ddcc4980767121ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::extract</definition>
        <argsstring>(const CORBA::Any &amp;in, const Tango::DevEncoded *&amp;data)</argsstring>
        <name>extract</name>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const Tango::DevEncoded *&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Extract a <ref refid="de/ddf/namespaceTango" kindref="compound">Tango</ref> DevEncoded data from a CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The CORBA Any object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the extracted DevEncoded data </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object does not contains a data of the waited type. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="691" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Insert methods.</header>
      <description><para>All these methods create a CORBA Any object and insert data into this object </para></description>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a665614cc771db2aeeef0f5a0ac1a1903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>()</argsstring>
        <name>insert</name>
        <briefdescription>
<para>Create an empty CORBA Any object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="705" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a7c8f1595a81d800beb9845377716c29a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevBoolean data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevBoolean</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevBoolean data in it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="715" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1ab515b6bc55aedf12258d5487589f7eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevShort data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevShort</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevShort data in it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="725" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1ac7d5016d95647f8a68fef9e15bffbe90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevLong data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevLong</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevLong data in it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="735" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1ac1488aec40ba1e78d7cd1b3dc426f9b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevLong64 data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevLong64</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevLong64 data in it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="745" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a5f3653dc4a432fea2fb66c7e7dc2e136" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevFloat data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevFloat</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevFloat data in it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="755" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1aa7b766f514c72b9da575685673ceb77c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevDouble data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevDouble</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevDouble data in it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="765" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a3b7333363e69cd16b89fdfcdd54cab3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevUShort data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevUShort</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevUShort data in it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="775" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a8a9a2a06e2afcf9b1824bbe2ba2687ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevULong data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevULong</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevULong data in it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="785" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a2a2c6e4f5434446cf3a1aec4412b7b0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevULong64 data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevULong64</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevULong64 data in it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="795" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a06b833d3639d8f24d8f5cfb7480c94bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevString data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevString</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevString data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method will also de-allocate the string passed as parameter.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="807" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a6c16c497b7eef06ed4ff880ce02d5894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(const char *data)</argsstring>
        <name>insert</name>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevString data in it. </para>        </briefdescription>
        <detaileddescription>
<para>Te parameter type is char * and not Tango::DevString because the const C++ modifier applied to a Tango::DevString make the pointer constant and not the pointed to characters to be constant.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="820" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a4c5c0bc9b364c5d2f377143597aec833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarCharArray &amp;data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarCharArray &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarCharArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method will do a <bold>deep copy</bold> of the array into the Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="832" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1aa7457591f2ef2b110535fc8e9bff81aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarCharArray *data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarCharArray *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarCharArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method <bold>consumes</bold> the memory used by the array. When the CORBA layer will destroy the Any object, the memory alloacted for the array will also be freed. This is the recommended method to insert Tango::DevVarCharArray data type into a CORBA Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="847" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a42fcd1d6068dee4f2640be160afe8af6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarShortArray &amp;data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarShortArray &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarShortArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method will do a <bold>deep copy</bold> of the array into the Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="859" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a37ddcc3509f439e9994d985310075a69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarShortArray *data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarShortArray *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarShortArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method <bold>consumes</bold> the memory used by the array. When the CORBA layer will destroy the Any object, the memory alloacted for the array will also be freed. This is the recommended method to insert Tango::DevVarShortArray data type into a CORBA Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="874" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a7d8c4de9c8010994f58d0571b4bf9863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarLongArray &amp;data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarLongArray &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarLongArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method will do a <bold>deep copy</bold> of the array into the Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="886" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a1f1ddff524fd99c2878062a4c3f451ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarLongArray *data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarLongArray *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarLongArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method <bold>consumes</bold> the memory used by the array. When the CORBA layer will destroy the Any object, the memory alloacted for the array will also be freed. This is the recommended method to insert Tango::DevVarLongArray data type into a CORBA Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="901" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a1961e3fa4dd9f3b4034b01b896936b01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarLong64Array &amp;data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarLong64Array &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarLong64Array data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method will do a <bold>deep copy</bold> of the array into the Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="913" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1aaebcc600e513cc5370ee2c827c401da1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarLong64Array *data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarLong64Array *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarLong64Array data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method <bold>consumes</bold> the memory used by the array. When the CORBA layer will destroy the Any object, the memory alloacted for the array will also be freed. This is the recommended method to insert Tango::DevVarLongArray data type into a CORBA Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="928" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1acb1861ed6136daedc511ad7fac6cbd47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarFloatArray &amp;data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarFloatArray &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarFloatArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method will do a <bold>deep copy</bold> of the array into the Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="940" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1adb44f35e4d13c44f3ca855c8d4ca82fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarFloatArray *data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarFloatArray *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarFloatArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method <bold>consumes</bold> the memory used by the array. When the CORBA layer will destroy the Any object, the memory alloacted for the array will also be freed. This is the recommended method to insert Tango::DevVarFloatArray data type into a CORBA Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="955" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a93be182d51d3cf48c1bde5effe7e75a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarDoubleArray &amp;data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarDoubleArray &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarDoubleArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method will do a <bold>deep copy</bold> of the array into the Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="967" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a6ed55e2aa4d58c6cdd79e610a1364238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarDoubleArray *data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarDoubleArray *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA CORBA::Any object and insert a Tango::DevVarDoubleArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method <bold>consumes</bold> the memory used by the array. When the CORBA layer will destroy the Any object, the memory alloacted for the array will also be freed. This is the recommended method to insert Tango::DevVarDoubleArray data type into a CORBA Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="982" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a36a523ad2ca65bf8d60f571fcc465f0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarUShortArray &amp;data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarUShortArray &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarUShortArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method will do a <bold>deep copy</bold> of the array into the Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="994" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a2ffc06bc6da1dc9021bdf736a9e48312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarUShortArray *data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarUShortArray *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarUShortArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method <bold>consumes</bold> the memory used by the array. When the CORBA layer will destroy the Any object, the memory alloacted for the array will also be freed. This is the recommended method to insert Tango::DevVarUShortArray data type into a CORBA Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1009" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1afee3e64ef79c31468ee691bec989e02f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarULongArray &amp;data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarULongArray &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarULongArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method will do a <bold>deep copy</bold> of the array into the Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1021" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a2825c793c7d4fb598ab4d4161d332943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarULongArray *data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarULongArray *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarULongArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method <bold>consumes</bold> the memory used by the array. When the CORBA layer will destroy the Any object, the memory alloacted for the array will also be freed. This is the recommended method to insert Tango::DevVarULongArray data type into a CORBA Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1036" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1ad18d9ad16a986040425e13c3f96e64dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarULong64Array &amp;data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarULong64Array &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarULong64Array data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method will do a <bold>deep copy</bold> of the array into the Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1048" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a5905a365cafebb13ff514c0526ab1a35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarULong64Array *data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarULong64Array *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarULong64Array data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method <bold>consumes</bold> the memory used by the array. When the CORBA layer will destroy the Any object, the memory alloacted for the array will also be freed. This is the recommended method to insert Tango::DevVarULongArray data type into a CORBA Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1063" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a759ae1a8f289ea77001650e0dd9dc73b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarStringArray &amp;data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarStringArray &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarStringArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method will do a <bold>deep copy</bold> of the array into the Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1075" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a14366c96e3d99893fb8daac9fb6639c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarStringArray *data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarStringArray *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarStringArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method <bold>consumes</bold> the memory used by the array. When the CORBA layer will destroy the Any object, the memory alloacted for the array will also be freed. This is the recommended method to insert Tango::DevVarStringArray data type into a CORBA Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1090" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a72142fc4ebb29ff2b176cbbdae61034a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarLongStringArray &amp;data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarLongStringArray &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarLongStringArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method will do a <bold>deep copy</bold> of the array into the Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a2678ebf879cf014aa55fff6f2bdc10bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarLongStringArray *data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarLongStringArray *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarLongStringArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method <bold>consumes</bold> the memory used by the array. When the CORBA layer will destroy the Any object, the memory alloacted for the array will also be freed. This is the recommended method to insert Tango::DevVarLongStringArray data type into a CORBA Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1ab44d0a90519efd1f357ca0875d98f4e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarDoubleStringArray &amp;data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarDoubleStringArray &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarDoubleStringArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method will do a <bold>deep copy</bold> of the array into the Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1afe5aa741af2de317e44cdafe65e2f3a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevVarDoubleStringArray *data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevVarDoubleStringArray *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevVarDoubleStringArray data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method <bold>consumes</bold> the memory used by the array. When the CORBA layer will destroy the Any object, the memory alloacted for the array will also be freed. This is the recommended method to insert Tango::DevVarDoubleStringArray data type into a CORBA Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1af4c02c4968ea0fa878424507d6edb8d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevState data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevState</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevState data in it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a21a6cda05b9c4182c7d0ef2e6bb01c0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any* Tango::Command::insert</definition>
        <argsstring>(Tango::DevEncoded *data)</argsstring>
        <name>insert</name>
        <param>
          <type>Tango::DevEncoded *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a CORBA Any object and insert a Tango::DevEncoded data in it. </para>        </briefdescription>
        <detaileddescription>
<para>This method <bold>consumes</bold> the memory used by the array. When the CORBA layer will destroy the Any object, the memory alloacted for the array will also be freed. This is the recommended method to insert Tango::DevVarDoubleStringArray data type into a CORBA Any object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The array to be inserted into the Any object </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the Any object creation failed. Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1169" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Class data members</header>
      <memberdef kind="variable" id="d2/d1d/classTango_1_1Command_1afd9067bb0dcbcf46ca658ce7710ae025" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string Tango::Command::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>The command name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1178" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="1178" bodyend="-1"/>
        <referencedby refid="d2/d1d/classTango_1_1Command_1aa6bfd85b7ee91b2c492fce5938fdaebe" compoundref="d0/d09/command_8h" startline="286" endline="286">get_name</referencedby>
        <referencedby refid="d2/d1d/classTango_1_1Command_1a13a2bbf037579b576dcee0bc9b55d8f2" compoundref="d0/d09/command_8h" startline="293" endline="293">set_name</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/classTango_1_1Command_1a7187d828d36d73bc501bb9ab69772c44" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string Tango::Command::lower_name</definition>
        <argsstring></argsstring>
        <name>lower_name</name>
        <briefdescription>
<para>The command name in lower case. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1182" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="1182" bodyend="-1"/>
        <referencedby refid="d2/d1d/classTango_1_1Command_1a92e8a62375817d7e812132e49ee27dc3" compoundref="d0/d09/command_8h" startline="300" endline="300">get_lower_name</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/classTango_1_1Command_1aea59b62f46dc56304b2f99fa05a70109" prot="protected" static="no" mutable="no">
        <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
        <definition>Tango::CmdArgType Tango::Command::in_type</definition>
        <argsstring></argsstring>
        <name>in_type</name>
        <briefdescription>
<para>The command input parameter type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1186" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="1186" bodyend="-1"/>
        <referencedby refid="d2/d1d/classTango_1_1Command_1a66cba1d14a421998571b5d871e31c155" compoundref="d0/d09/command_8h" startline="307" endline="307">get_in_type</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/classTango_1_1Command_1a61071f19ab2f13b56d820c71bb6635b2" prot="protected" static="no" mutable="no">
        <type><ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170" kindref="member">Tango::CmdArgType</ref></type>
        <definition>Tango::CmdArgType Tango::Command::out_type</definition>
        <argsstring></argsstring>
        <name>out_type</name>
        <briefdescription>
<para>The command output parameter type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1190" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="1190" bodyend="-1"/>
        <referencedby refid="d2/d1d/classTango_1_1Command_1ad2b89784882a915431128712973939ee" compoundref="d0/d09/command_8h" startline="314" endline="314">get_out_type</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/classTango_1_1Command_1abe71e67349296d10e641bf246a258fd7" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string Tango::Command::in_type_desc</definition>
        <argsstring></argsstring>
        <name>in_type_desc</name>
        <briefdescription>
<para>The command input parameter description. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1194" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="1194" bodyend="-1"/>
        <referencedby refid="d2/d1d/classTango_1_1Command_1ae36c1e09f7be85f9bf88fbbf68ca436e" compoundref="d0/d09/command_8h" startline="321" endline="321">get_in_type_desc</referencedby>
        <referencedby refid="d2/d1d/classTango_1_1Command_1a47b22bb3cdfdc732c84a07b6db753aba" compoundref="d0/d09/command_8h" startline="342" endline="342">set_in_type_desc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/classTango_1_1Command_1a835b44d92d834adfb87606ba5073cb15" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string Tango::Command::out_type_desc</definition>
        <argsstring></argsstring>
        <name>out_type_desc</name>
        <briefdescription>
<para>The command output parameter type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1198" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="1198" bodyend="-1"/>
        <referencedby refid="d2/d1d/classTango_1_1Command_1a32334cc5b6977f362a6ea50da4924653" compoundref="d0/d09/command_8h" startline="328" endline="328">get_out_type_desc</referencedby>
        <referencedby refid="d2/d1d/classTango_1_1Command_1af421f59ba21cb3300d8ed5cdc28114ad" compoundref="d0/d09/command_8h" startline="356" endline="356">set_out_type_desc</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d2/d1d/classTango_1_1Command_1a3747efe3955d0a013eb4c756923722c3" prot="private" static="no" mutable="no">
        <type>Tango::DispLevel</type>
        <definition>Tango::DispLevel Tango::Command::cmd_disp_level</definition>
        <argsstring></argsstring>
        <name>cmd_disp_level</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1221" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="1221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/classTango_1_1Command_1ae44905fe7eb90fcc76c38d5c1fc421b3" prot="private" static="no" mutable="no">
        <type>CommandExt *</type>
        <definition>CommandExt* Tango::Command::ext</definition>
        <argsstring></argsstring>
        <name>ext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1214" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="1214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d1d/classTango_1_1Command_1a761ff5ac02944f7b2864cfc9015218d7" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long Tango::Command::poll_period</definition>
        <argsstring></argsstring>
        <name>poll_period</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1222" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="1222" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a0aada5c2b473e36c3569bbb875f7a7b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::alloc_any</definition>
        <argsstring>(CORBA::Any *&amp;)</argsstring>
        <name>alloc_any</name>
        <param>
          <type>CORBA::Any *&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1d/classTango_1_1Command_1a5960cd13fa48f2923e9e37722405e580" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Tango::Command::throw_bad_type</definition>
        <argsstring>(const char *)</argsstring>
        <name>throw_bad_type</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1209" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is a class representing a command in the TANGO device server pattern. </para>    </briefdescription>
    <detaileddescription>
<para>it is an abstract class. It is the root class for all command related classes for command implemented with the inheritance model or with the template command model</para><para>$Author$ $Revision$ </para>    </detaileddescription>
    <inheritancegraph>
      <node id="775">
        <label>Tango::Command</label>
        <link refid="d2/d1d/classTango_1_1Command"/>
      </node>
      <node id="778">
        <label>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;</label>
        <link refid="db/dbb/classTango_1_1TemplCommandInOut"/>
        <childnode refid="776" relation="public-inheritance">
        </childnode>
      </node>
      <node id="776">
        <label>Tango::TemplCommand</label>
        <link refid="de/de1/classTango_1_1TemplCommand"/>
        <childnode refid="775" relation="public-inheritance">
        </childnode>
      </node>
      <node id="779">
        <label>Tango::TemplCommandOut&lt; OUTARG &gt;</label>
        <link refid="d3/d87/classTango_1_1TemplCommandOut"/>
        <childnode refid="776" relation="public-inheritance">
        </childnode>
      </node>
      <node id="777">
        <label>Tango::TemplCommandIn&lt; INARG &gt;</label>
        <link refid="d2/d50/classTango_1_1TemplCommandIn"/>
        <childnode refid="776" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="84" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="83" bodyend="1224"/>
    <listofallmembers>
      <member refid="d2/d1d/classTango_1_1Command_1a0aada5c2b473e36c3569bbb875f7a7b4" prot="private" virt="non-virtual"><scope>Tango::Command</scope><name>alloc_any</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a3747efe3955d0a013eb4c756923722c3" prot="private" virt="non-virtual"><scope>Tango::Command</scope><name>cmd_disp_level</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ac8aee54ed6b9c883f39a5a15a075c15f" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a3598206398bf3cb500d88bee3a1c76f4" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1af4b7d2ad7aa06b60eb273d9214b34af9" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ac4e9596ebbf8ced45a8383185cbbeae4" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a291c62e3e6d852b8c116b7b27c927a64" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1accaebfd69dc12dd6212a9228724c63a6" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a99b6f06c975ad890fcb8f551ca6a42a7" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a34f9bd55d6766d58bc783000cfc3e908" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a892d20cd88adcf27ccb7a5483027c856" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a24505e18425086e1c6b84d7ba1f92503" prot="public" virt="pure-virtual"><scope>Tango::Command</scope><name>execute</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ae44905fe7eb90fcc76c38d5c1fc421b3" prot="private" virt="non-virtual"><scope>Tango::Command</scope><name>ext</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aa8a75d6b22f8fd09e07d46982855d233" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1af279abb75028ddd1d96950963fad06eb" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a1c95b781a6cf51bc330d89228a9e6526" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a14a8016a57b8828deda2530119d650f3" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aeb2d6fcfa3acf6d4031af18884d22da7" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1af920614d03b5e1df3d7c7d74019ddc0e" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a56cd878bc00bd6ca125b55e63d87528e" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ad728692954b432d7eacdaaef88b23e34" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aa0cef124e525bf10049e549381d92e2d" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a422a40ed06a240af34d47ad01c82caee" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ac7af73b7e2addf8e28a4286b9f454957" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ae350209b019e0e27b72da229b701cfcb" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a3431556a6fc4fa01552f29b82cce7a8f" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a490eab9fa4a80f25a9ee4b032c3cd3a8" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a5cd810f135a01c1872c03245d2636c1f" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a71bce528c2210b2599afc8c656af333d" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ab965311c14dafd6dc1d6e52af4378c62" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a1ab6c6ec18eb1cba2fee960c66cd8817" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1af21e73695aa983ae0ce584008db56208" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a1d4f0266427dc4ef7cfbeaf931771553" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a80c2ff23d561a93f06ea7a869734de4a" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a048a55e9d37d70f3e1120b37c730baab" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ab1ee52c490c42f9a0727d778892bdc3c" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1acb2054505f53b0b638b3aab737289e8d" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a1cc83923947f3305ddcc4980767121ea" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a943bac0451ccabcb2e093911a6cf852f" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>get_disp_level</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a66cba1d14a421998571b5d871e31c155" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>get_in_type</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ae36c1e09f7be85f9bf88fbbf68ca436e" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>get_in_type_desc</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a92e8a62375817d7e812132e49ee27dc3" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>get_lower_name</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aa6bfd85b7ee91b2c492fce5938fdaebe" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>get_name</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ad2b89784882a915431128712973939ee" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>get_out_type</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a32334cc5b6977f362a6ea50da4924653" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>get_out_type_desc</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a1e60dcb1a8a89eb7e6596a2f0ecd87a7" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>get_polling_period</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aea59b62f46dc56304b2f99fa05a70109" prot="protected" virt="non-virtual"><scope>Tango::Command</scope><name>in_type</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1abe71e67349296d10e641bf246a258fd7" prot="protected" virt="non-virtual"><scope>Tango::Command</scope><name>in_type_desc</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a9cd12d4e02a35bfdb896a7cc89fc7eb0" prot="public" virt="virtual"><scope>Tango::Command</scope><name>init_types</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a665614cc771db2aeeef0f5a0ac1a1903" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a7c8f1595a81d800beb9845377716c29a" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ab515b6bc55aedf12258d5487589f7eb6" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ac7d5016d95647f8a68fef9e15bffbe90" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ac1488aec40ba1e78d7cd1b3dc426f9b6" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a5f3653dc4a432fea2fb66c7e7dc2e136" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aa7b766f514c72b9da575685673ceb77c" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a3b7333363e69cd16b89fdfcdd54cab3c" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a8a9a2a06e2afcf9b1824bbe2ba2687ff" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a2a2c6e4f5434446cf3a1aec4412b7b0f" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a06b833d3639d8f24d8f5cfb7480c94bb" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a6c16c497b7eef06ed4ff880ce02d5894" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a4c5c0bc9b364c5d2f377143597aec833" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aa7457591f2ef2b110535fc8e9bff81aa" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a42fcd1d6068dee4f2640be160afe8af6" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a37ddcc3509f439e9994d985310075a69" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a7d8c4de9c8010994f58d0571b4bf9863" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a1f1ddff524fd99c2878062a4c3f451ea" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a1961e3fa4dd9f3b4034b01b896936b01" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aaebcc600e513cc5370ee2c827c401da1" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1acb1861ed6136daedc511ad7fac6cbd47" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1adb44f35e4d13c44f3ca855c8d4ca82fd" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a93be182d51d3cf48c1bde5effe7e75a8" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a6ed55e2aa4d58c6cdd79e610a1364238" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a36a523ad2ca65bf8d60f571fcc465f0b" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a2ffc06bc6da1dc9021bdf736a9e48312" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1afee3e64ef79c31468ee691bec989e02f" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a2825c793c7d4fb598ab4d4161d332943" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ad18d9ad16a986040425e13c3f96e64dd" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a5905a365cafebb13ff514c0526ab1a35" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a759ae1a8f289ea77001650e0dd9dc73b" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a14366c96e3d99893fb8daac9fb6639c1" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a72142fc4ebb29ff2b176cbbdae61034a" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a2678ebf879cf014aa55fff6f2bdc10bb" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ab44d0a90519efd1f357ca0875d98f4e7" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1afe5aa741af2de317e44cdafe65e2f3a4" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1af4c02c4968ea0fa878424507d6edb8d3" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a21a6cda05b9c4182c7d0ef2e6bb01c0a" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1af634fd436701aca40fbcdaeb5d4691b1" prot="public" virt="virtual"><scope>Tango::Command</scope><name>is_allowed</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a7187d828d36d73bc501bb9ab69772c44" prot="protected" virt="non-virtual"><scope>Tango::Command</scope><name>lower_name</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1afd9067bb0dcbcf46ca658ce7710ae025" prot="protected" virt="non-virtual"><scope>Tango::Command</scope><name>name</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a61071f19ab2f13b56d820c71bb6635b2" prot="protected" virt="non-virtual"><scope>Tango::Command</scope><name>out_type</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a835b44d92d834adfb87606ba5073cb15" prot="protected" virt="non-virtual"><scope>Tango::Command</scope><name>out_type_desc</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a761ff5ac02944f7b2864cfc9015218d7" prot="private" virt="non-virtual"><scope>Tango::Command</scope><name>poll_period</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a9108e06b866948d8ea6a5de2cde80853" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>set_disp_level</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a47b22bb3cdfdc732c84a07b6db753aba" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>set_in_type_desc</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aeb1db497ea77211071a7fd11cb2c9900" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>set_in_type_desc</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a13a2bbf037579b576dcee0bc9b55d8f2" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>set_name</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1af421f59ba21cb3300d8ed5cdc28114ad" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>set_out_type_desc</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a98bb11a3d9c82fd2e4bbde0ed28d3dcf" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>set_out_type_desc</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1af8270bde5b9e4b9826419eabb8f8a3ec" prot="public" virt="non-virtual"><scope>Tango::Command</scope><name>set_polling_period</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a5960cd13fa48f2923e9e37722405e580" prot="private" virt="non-virtual"><scope>Tango::Command</scope><name>throw_bad_type</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a05ff827c05911f69e56e3835345f5e84" prot="public" virt="virtual"><scope>Tango::Command</scope><name>~Command</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
