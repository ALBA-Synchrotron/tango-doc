<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="db/dbb/classTango_1_1TemplCommandInOut" kind="class" prot="public">
    <compoundname>Tango::TemplCommandInOut</compoundname>
    <basecompoundref refid="de/de1/classTango_1_1TemplCommand" prot="public" virt="non-virtual">Tango::TemplCommand</basecompoundref>
    <innerclass refid="d9/d32/classTango_1_1TemplCommandInOut_1_1TemplCommandInOutExt" prot="private">Tango::TemplCommandInOut::TemplCommandInOutExt</innerclass>
    <templateparamlist>
      <param>
        <type>typename INARG</type>
      </param>
      <param>
        <type>typename OUTARG</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <description><para>Miscellaneous constructors </para></description>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1a09bbe5a98cff5425a5627af76435f309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(const char *cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG))</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>const char *</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="db/dbb/classTango_1_1TemplCommandInOut" kindref="compound">TemplCommandInOut</ref> object for a command with a name and an execution method. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined. The input and output parameter description are set to the default String &quot;Uninitialised&quot;. The command display level is set to OPERATOR.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1668" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="1991" bodyend="1996"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1ae905b4db452b115ae3232d0a179deac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(string &amp;cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG))</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>string &amp;</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="db/dbb/classTango_1_1TemplCommandInOut" kindref="compound">TemplCommandInOut</ref> object for a command with a name and an execution method. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined. The input and output parameter description are set to the default String &quot;Uninitialised&quot;. The command display level is set to OPERATOR.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1683" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2007" bodyend="2012"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1aec7f943e0412016b1c1063d3dde694f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(const char *cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG), bool(DeviceImpl::*state_method)(const CORBA::Any &amp;))</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>const char *</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <param>
          <type>bool(DeviceImpl::*)(const CORBA::Any &amp;)</type>
          <declname>state_method</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated TemplCommandInout object for a command with a name, an execution method and a command allowed method. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined. The input and output parameter description are set to the default String &quot;Uninitialised&quot;. The command display level is set to OPERATOR.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command allowed method </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1699" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="1999" bodyend="2004"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1a2ba0d93006c6d776248f35dc26578b87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(string &amp;cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG), bool(DeviceImpl::*state_method)(const CORBA::Any &amp;))</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>string &amp;</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <param>
          <type>bool(DeviceImpl::*)(const CORBA::Any &amp;)</type>
          <declname>state_method</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="db/dbb/classTango_1_1TemplCommandInOut" kindref="compound">TemplCommandInOut</ref> object for a command with a name, an execution method and a command allowed method. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined. The input and output parameter description are set to the default String &quot;Uninitialised&quot;. The command display level is set to OPERATOR.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command allowed method </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1716" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2015" bodyend="2020"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1a418733bc08eed3cc3fc7ce4ae2d36321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(const char *cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG), const char *in_desc, const char *out_desc)</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>const char *</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_desc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>out_desc</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="db/dbb/classTango_1_1TemplCommandInOut" kindref="compound">TemplCommandInOut</ref> object for a command with a name, an execution method and a description for the input and output command parameters. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined. The command display level is set to OPERATOR.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter description </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1733" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2023" bodyend="2028"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1a7725331aba633cde2f26f23769896b5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(string &amp;cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG), string &amp;in_desc, string &amp;out_desc)</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>string &amp;</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>in_desc</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>out_desc</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="db/dbb/classTango_1_1TemplCommandInOut" kindref="compound">TemplCommandInOut</ref> object for a command with a name, an execution method and a description for the input and output command parameters. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined. The command display level is set to OPERATOR.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter description </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1750" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2039" bodyend="2044"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1ac0845cca0f7b4a47f194dbe8741eeb4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(const char *cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG), bool(DeviceImpl::*state_method)(const CORBA::Any &amp;), const char *in_desc, const char *out_desc)</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>const char *</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <param>
          <type>bool(DeviceImpl::*)(const CORBA::Any &amp;)</type>
          <declname>state_method</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_desc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>out_desc</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="db/dbb/classTango_1_1TemplCommandInOut" kindref="compound">TemplCommandInOut</ref> object for a command with a name, an execution method, a command allowed method and a description for the input and output command parameters. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined. The command display level is set to OPERATOR.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command allowed method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter description </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1768" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2031" bodyend="2036"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1a1d8eb4c66b7840913cee742e2138f10c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(string &amp;cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG), bool(DeviceImpl::*state_method)(const CORBA::Any &amp;), string &amp;in_desc, string &amp;out_desc)</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>string &amp;</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <param>
          <type>bool(DeviceImpl::*)(const CORBA::Any &amp;)</type>
          <declname>state_method</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>in_desc</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>out_desc</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="db/dbb/classTango_1_1TemplCommandInOut" kindref="compound">TemplCommandInOut</ref> object for a command with a name, an execution method, a command allowed method and a description for the input and output command parameters. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined. The command display level is set to OPERATOR.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command allowed method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter description </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1787" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2047" bodyend="2052"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1a4cd8aa04392f1c2ef665cb5bdfa7bc86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(const char *cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG), Tango::DispLevel level)</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>const char *</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <param>
          <type>Tango::DispLevel</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="db/dbb/classTango_1_1TemplCommandInOut" kindref="compound">TemplCommandInOut</ref> object for a command with a name and an execution method. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined. The input and output parameter description are set to the default String &quot;Uninitialised&quot;.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The command display level </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1804" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2055" bodyend="2060"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1a29ec8158c25feb319848a876783fdc79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(string &amp;cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG), Tango::DispLevel level)</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>string &amp;</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <param>
          <type>Tango::DispLevel</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="db/dbb/classTango_1_1TemplCommandInOut" kindref="compound">TemplCommandInOut</ref> object for a command with a name and an execution method. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined. The input and output parameter description are set to the default String &quot;Uninitialised&quot;.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The command display level </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1820" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2071" bodyend="2076"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1add11fefa6ae6dfb7e374d22c54eaedf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(const char *cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG), bool(DeviceImpl::*state_method)(const CORBA::Any &amp;), Tango::DispLevel level)</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>const char *</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <param>
          <type>bool(DeviceImpl::*)(const CORBA::Any &amp;)</type>
          <declname>state_method</declname>
        </param>
        <param>
          <type>Tango::DispLevel</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated TemplCommandInout object for a command with a name, an execution method and a command allowed method. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined. The input and output parameter description are set to the default String &quot;Uninitialised&quot;.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command allowed method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The command display level </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1837" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2063" bodyend="2068"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1a2854675abd8fdbbcc63676db498195a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(string &amp;cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG), bool(DeviceImpl::*state_method)(const CORBA::Any &amp;), Tango::DispLevel level)</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>string &amp;</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <param>
          <type>bool(DeviceImpl::*)(const CORBA::Any &amp;)</type>
          <declname>state_method</declname>
        </param>
        <param>
          <type>Tango::DispLevel</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="db/dbb/classTango_1_1TemplCommandInOut" kindref="compound">TemplCommandInOut</ref> object for a command with a name, an execution method and a command allowed method. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined. The input and output parameter description are set to the default String &quot;Uninitialised&quot;.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command allowed method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The command display level </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1855" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2079" bodyend="2084"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1abc84ec88a117f481e3b0ed8a6d273cce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(const char *cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG), const char *in_desc, const char *out_desc, Tango::DispLevel level)</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>const char *</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_desc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>out_desc</declname>
        </param>
        <param>
          <type>Tango::DispLevel</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="db/dbb/classTango_1_1TemplCommandInOut" kindref="compound">TemplCommandInOut</ref> object for a command with a name, an execution method and a description for the input and output command parameters. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The command display level </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1873" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2087" bodyend="2092"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1a0dd98b34ed11a4405f134969cf120152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(string &amp;cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG), string &amp;in_desc, string &amp;out_desc, Tango::DispLevel level)</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>string &amp;</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>in_desc</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>out_desc</declname>
        </param>
        <param>
          <type>Tango::DispLevel</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="db/dbb/classTango_1_1TemplCommandInOut" kindref="compound">TemplCommandInOut</ref> object for a command with a name, an execution method and a description for the input and output command parameters. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The command display level </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1891" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2103" bodyend="2108"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1aaf2cfe422127533782d5e8b4073548e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(const char *cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG), bool(DeviceImpl::*state_method)(const CORBA::Any &amp;), const char *in_desc, const char *out_desc, Tango::DispLevel level)</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>const char *</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <param>
          <type>bool(DeviceImpl::*)(const CORBA::Any &amp;)</type>
          <declname>state_method</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in_desc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>out_desc</declname>
        </param>
        <param>
          <type>Tango::DispLevel</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="db/dbb/classTango_1_1TemplCommandInOut" kindref="compound">TemplCommandInOut</ref> object for a command with a name, an execution method, a command allowed method and a description for the input and output command parameters. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command allowed method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The command display level </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1910" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2095" bodyend="2100"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1a145be9fc116c50ae461f5b6a038e3483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</definition>
        <argsstring>(string &amp;cmd_name, OUTARG(DeviceImpl::*exe_method)(INARG), bool(DeviceImpl::*state_method)(const CORBA::Any &amp;), string &amp;in_desc, string &amp;out_desc, Tango::DispLevel level)</argsstring>
        <name>TemplCommandInOut</name>
        <param>
          <type>string &amp;</type>
          <declname>cmd_name</declname>
        </param>
        <param>
          <type>OUTARG(DeviceImpl::*)(INARG)</type>
          <declname>exe_method</declname>
        </param>
        <param>
          <type>bool(DeviceImpl::*)(const CORBA::Any &amp;)</type>
          <declname>state_method</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>in_desc</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>out_desc</declname>
        </param>
        <param>
          <type>Tango::DispLevel</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Constructs a newly allocated <ref refid="db/dbb/classTango_1_1TemplCommandInOut" kindref="compound">TemplCommandInOut</ref> object for a command with a name, an execution method, a command allowed method and a description for the input and output command parameters. </para>        </briefdescription>
        <detaileddescription>
<para>The input and output command data type are automatically determined.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The command name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exe_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command execution method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the command allowed method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command input parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The command output parameter description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The command display level </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1930" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2111" bodyend="2116"/>
        <references refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" compoundref="d0/d09/command_8h" startline="1612">Tango::TemplCommand::allowed_ptr</references>
        <references refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" compoundref="d0/d09/command_8h" startline="2128" endline="2141">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous methods</header>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::init_types</definition>
        <argsstring>()</argsstring>
        <name>init_types</name>
        <reimplements refid="d2/d1d/classTango_1_1Command_1a9cd12d4e02a35bfdb896a7cc89fc7eb0">init_types</reimplements>
        <briefdescription>
<para>Initialise command input and output types. </para>        </briefdescription>
        <detaileddescription>
<para>Set the command output type to <ref refid="de/ddf/namespaceTango_1a86ed7ac243c13a7813f08c3b899af170ae2d6e5fed693c328c4065339b843470b" kindref="member">Tango::DEV_VOID</ref>. The command input type is automatically determined from the class template specialisation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1948" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2128" bodyend="2141"/>
        <referencedby refid="db/dbb/classTango_1_1TemplCommandInOut_1a09bbe5a98cff5425a5627af76435f309" compoundref="d0/d09/command_8h" startline="1991" endline="1996">Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::TemplCommandInOut</referencedby>
      </memberdef>
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1ac5639e9122031a8e57887ff3411bb482" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>CORBA::Any *</type>
        <definition>CORBA::Any * Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::execute</definition>
        <argsstring>(DeviceImpl *dev, const CORBA::Any &amp;in_any)</argsstring>
        <name>execute</name>
        <reimplements refid="de/de1/classTango_1_1TemplCommand_1ac0f9217e1c13600d3ba449ceb6a25cd3">execute</reimplements>
        <param>
          <type><ref refid="d3/d62/classTango_1_1DeviceImpl" kindref="compound">DeviceImpl</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const CORBA::Any &amp;</type>
          <declname>in_any</declname>
        </param>
        <briefdescription>
<para>Invoke the command execution method given at object creation time. </para>        </briefdescription>
        <detaileddescription>
<para>This method is automtically called by the TANGO core classes when the associated command is requested by a client. It first unpacks the incoming data. Then, it invokes the user supplied command execution method and packs the returned data into the outgoing CORBA Any object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>The device on which the command must be executed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_any</parametername>
</parameternamelist>
<parameterdescription>
<para>The incoming data still packed in a CORBA Any object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The CORBA Any object returned to the client. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>DevFailed</parametername>
</parameternamelist>
<parameterdescription>
<para>If the execution method failed Click <ulink url="../../../tango_idl/idl_html/_Tango.html#DevFailed">here</ulink> to read <bold>DevFailed</bold> exception specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1966" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="2160" bodyend="2172"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="db/dbb/classTango_1_1TemplCommandInOut_1a5fefcebe368052e9f3e260275cef5629" prot="private" static="no" mutable="no">
        <type>OUTARG(DeviceImpl::*</type>
        <definition>OUTARG(DeviceImpl::* Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::exe_ptr_inout)(INARG)</definition>
        <argsstring>)(INARG)</argsstring>
        <name>exe_ptr_inout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1974" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="1974" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/dbb/classTango_1_1TemplCommandInOut_1a6efd9c2d604594b7a302091d05fa30d0" prot="private" static="no" mutable="no">
        <type>TemplCommandInOutExt *</type>
        <definition>TemplCommandInOutExt* Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::ext</definition>
        <argsstring></argsstring>
        <name>ext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1978" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="1978" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="db/dbb/classTango_1_1TemplCommandInOut_1afdd5a0253149e132d8f44945b9c18cb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;::~TemplCommandInOut</definition>
        <argsstring>()</argsstring>
        <name>~TemplCommandInOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1937" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="1937" bodyend="1937"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is a class representing a command in the template command model with output and input parameters. </para>    </briefdescription>
    <detaileddescription>
<para>The class template parameters (called INARG and OUTARG) are the command input parameter type and the command output parameter type. </para><para>Synopsis : template &lt;typename INARG,typename OUTARG&gt; class <ref refid="db/dbb/classTango_1_1TemplCommandInOut" kindref="compound">TemplCommandInOut</ref>:public <ref refid="de/de1/classTango_1_1TemplCommand" kindref="compound">TemplCommand</ref>;</para><para>Usage : new <ref refid="db/dbb/classTango_1_1TemplCommandInOut_1a09bbe5a98cff5425a5627af76435f309" kindref="member">TemplCommandInOut&lt;Tango::DevLong,Tango::DevFloat&gt;</ref>(...);</para><para>$Author$ $Revision$ </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1281">
        <label>Tango::Command</label>
        <link refid="d2/d1d/classTango_1_1Command"/>
      </node>
      <node id="1279">
        <label>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;</label>
        <link refid="db/dbb/classTango_1_1TemplCommandInOut"/>
        <childnode refid="1280" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1280">
        <label>Tango::TemplCommand</label>
        <link refid="de/de1/classTango_1_1TemplCommand"/>
        <childnode refid="1281" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1284">
        <label>Tango::Command</label>
        <link refid="d2/d1d/classTango_1_1Command"/>
      </node>
      <node id="1282">
        <label>Tango::TemplCommandInOut&lt; INARG, OUTARG &gt;</label>
        <link refid="db/dbb/classTango_1_1TemplCommandInOut"/>
        <childnode refid="1283" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1283">
        <label>Tango::TemplCommand</label>
        <link refid="de/de1/classTango_1_1TemplCommand"/>
        <childnode refid="1284" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/tango/workspace/cppTango/include/tango/server/command.h" line="1650" column="1" bodyfile="/home/tango/workspace/cppTango/include/tango/server/command.h" bodystart="1649" bodyend="1980"/>
    <listofallmembers>
      <member refid="de/de1/classTango_1_1TemplCommand_1a1e3db2bfcf9cb38f76d4465ac575db5a" prot="protected" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>allowed_ptr</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ac8aee54ed6b9c883f39a5a15a075c15f" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a3598206398bf3cb500d88bee3a1c76f4" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1af4b7d2ad7aa06b60eb273d9214b34af9" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ac4e9596ebbf8ced45a8383185cbbeae4" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a291c62e3e6d852b8c116b7b27c927a64" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1accaebfd69dc12dd6212a9228724c63a6" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a99b6f06c975ad890fcb8f551ca6a42a7" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a34f9bd55d6766d58bc783000cfc3e908" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>Command</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a892d20cd88adcf27ccb7a5483027c856" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>Command</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1a5fefcebe368052e9f3e260275cef5629" prot="private" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>exe_ptr_inout</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1ac5639e9122031a8e57887ff3411bb482" prot="public" virt="virtual"><scope>Tango::TemplCommandInOut</scope><name>execute</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1a6efd9c2d604594b7a302091d05fa30d0" prot="private" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>ext</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aa8a75d6b22f8fd09e07d46982855d233" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1af279abb75028ddd1d96950963fad06eb" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a1c95b781a6cf51bc330d89228a9e6526" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a14a8016a57b8828deda2530119d650f3" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aeb2d6fcfa3acf6d4031af18884d22da7" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1af920614d03b5e1df3d7c7d74019ddc0e" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a56cd878bc00bd6ca125b55e63d87528e" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ad728692954b432d7eacdaaef88b23e34" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aa0cef124e525bf10049e549381d92e2d" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a422a40ed06a240af34d47ad01c82caee" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ac7af73b7e2addf8e28a4286b9f454957" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ae350209b019e0e27b72da229b701cfcb" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a3431556a6fc4fa01552f29b82cce7a8f" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a490eab9fa4a80f25a9ee4b032c3cd3a8" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a5cd810f135a01c1872c03245d2636c1f" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a71bce528c2210b2599afc8c656af333d" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ab965311c14dafd6dc1d6e52af4378c62" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a1ab6c6ec18eb1cba2fee960c66cd8817" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1af21e73695aa983ae0ce584008db56208" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a1d4f0266427dc4ef7cfbeaf931771553" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a80c2ff23d561a93f06ea7a869734de4a" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a048a55e9d37d70f3e1120b37c730baab" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ab1ee52c490c42f9a0727d778892bdc3c" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1acb2054505f53b0b638b3aab737289e8d" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a1cc83923947f3305ddcc4980767121ea" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>extract</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a943bac0451ccabcb2e093911a6cf852f" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>get_disp_level</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a66cba1d14a421998571b5d871e31c155" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>get_in_type</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ae36c1e09f7be85f9bf88fbbf68ca436e" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>get_in_type_desc</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a92e8a62375817d7e812132e49ee27dc3" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>get_lower_name</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aa6bfd85b7ee91b2c492fce5938fdaebe" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>get_name</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ad2b89784882a915431128712973939ee" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>get_out_type</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a32334cc5b6977f362a6ea50da4924653" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>get_out_type_desc</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a1e60dcb1a8a89eb7e6596a2f0ecd87a7" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>get_polling_period</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aea59b62f46dc56304b2f99fa05a70109" prot="protected" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>in_type</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1abe71e67349296d10e641bf246a258fd7" prot="protected" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>in_type_desc</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1a9d173fb2b7578838e94f9a94d6d98757" prot="public" virt="virtual"><scope>Tango::TemplCommandInOut</scope><name>init_types</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a665614cc771db2aeeef0f5a0ac1a1903" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a7c8f1595a81d800beb9845377716c29a" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ab515b6bc55aedf12258d5487589f7eb6" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ac7d5016d95647f8a68fef9e15bffbe90" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ac1488aec40ba1e78d7cd1b3dc426f9b6" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a5f3653dc4a432fea2fb66c7e7dc2e136" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aa7b766f514c72b9da575685673ceb77c" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a3b7333363e69cd16b89fdfcdd54cab3c" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a8a9a2a06e2afcf9b1824bbe2ba2687ff" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a2a2c6e4f5434446cf3a1aec4412b7b0f" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a06b833d3639d8f24d8f5cfb7480c94bb" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a6c16c497b7eef06ed4ff880ce02d5894" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a4c5c0bc9b364c5d2f377143597aec833" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aa7457591f2ef2b110535fc8e9bff81aa" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a42fcd1d6068dee4f2640be160afe8af6" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a37ddcc3509f439e9994d985310075a69" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a7d8c4de9c8010994f58d0571b4bf9863" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a1f1ddff524fd99c2878062a4c3f451ea" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a1961e3fa4dd9f3b4034b01b896936b01" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aaebcc600e513cc5370ee2c827c401da1" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1acb1861ed6136daedc511ad7fac6cbd47" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1adb44f35e4d13c44f3ca855c8d4ca82fd" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a93be182d51d3cf48c1bde5effe7e75a8" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a6ed55e2aa4d58c6cdd79e610a1364238" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a36a523ad2ca65bf8d60f571fcc465f0b" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a2ffc06bc6da1dc9021bdf736a9e48312" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1afee3e64ef79c31468ee691bec989e02f" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a2825c793c7d4fb598ab4d4161d332943" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ad18d9ad16a986040425e13c3f96e64dd" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a5905a365cafebb13ff514c0526ab1a35" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a759ae1a8f289ea77001650e0dd9dc73b" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a14366c96e3d99893fb8daac9fb6639c1" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a72142fc4ebb29ff2b176cbbdae61034a" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a2678ebf879cf014aa55fff6f2bdc10bb" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1ab44d0a90519efd1f357ca0875d98f4e7" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1afe5aa741af2de317e44cdafe65e2f3a4" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1af4c02c4968ea0fa878424507d6edb8d3" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a21a6cda05b9c4182c7d0ef2e6bb01c0a" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>insert</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a203f6dc3223fd20f230af555e34848fd" prot="public" virt="virtual"><scope>Tango::TemplCommandInOut</scope><name>is_allowed</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a7187d828d36d73bc501bb9ab69772c44" prot="protected" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>lower_name</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1afd9067bb0dcbcf46ca658ce7710ae025" prot="protected" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>name</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a61071f19ab2f13b56d820c71bb6635b2" prot="protected" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>out_type</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a835b44d92d834adfb87606ba5073cb15" prot="protected" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>out_type_desc</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a9108e06b866948d8ea6a5de2cde80853" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>set_disp_level</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a47b22bb3cdfdc732c84a07b6db753aba" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>set_in_type_desc</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1aeb1db497ea77211071a7fd11cb2c9900" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>set_in_type_desc</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a13a2bbf037579b576dcee0bc9b55d8f2" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>set_name</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1af421f59ba21cb3300d8ed5cdc28114ad" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>set_out_type_desc</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a98bb11a3d9c82fd2e4bbde0ed28d3dcf" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>set_out_type_desc</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1af8270bde5b9e4b9826419eabb8f8a3ec" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>set_polling_period</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a95ab85ef01d98875e631a0fc40d1d414" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>set_type</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a7a162c71679b1bb2ea3fc11db8b149bc" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a4f42709104cd27eeb848a27ff44e6373" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a85c470b753e39501dcc643d2d24bb4c1" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1aec6ec7d8e294853794e0751506094820" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1aa501b4eeed5924c7b6b27b2d9a4f596a" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1ac0572e0a8e56d8e0257eac2fca17eded" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a5761d50fa8cea0e8d0390c2fbeb323e9" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1ae7aeba83c3f09dbd37cd09dbbb2ce065" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1afe02e04d7b0962f0c1a90d3e1407d192" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a913bafce3c537f63d7c4b1d8bdfa06a8" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a8dce45fed70a6a7413e343097717aec4" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a672bee0db4d93ae7cc61b4f4addf5363" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a7377dcddc8b874cc7aa791b341be199c" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a9499afc773335b2217eab990d15aab53" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a6555e408ea4516e7b7423d1c48a27358" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a90fef4d7838f8ee6ae045831467ce598" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a8f48d5f24579df210d585604444cb629" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a3b58b596866ab711e4983d32ff9553e4" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1ac07fac7fb6ce5181b6b7f17accb718d1" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a7ef3cdac0079f8eb30a28c7d9e97bc68" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1ab24af318162958fe8dbe1ff9975a7008" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a28603d382f1ffe0b9499f017ee3e2e51" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1adafbaa8fc788b22d18706db99c929fbd" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1a92a9f351d1a503761acd6d2c1e2b2982" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="de/de1/classTango_1_1TemplCommand_1ad5ac8566cca4a4fb11898a4f913c114b" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommand</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1a09bbe5a98cff5425a5627af76435f309" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1ae905b4db452b115ae3232d0a179deac7" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1aec7f943e0412016b1c1063d3dde694f3" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1a2ba0d93006c6d776248f35dc26578b87" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1a418733bc08eed3cc3fc7ce4ae2d36321" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1a7725331aba633cde2f26f23769896b5a" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1ac0845cca0f7b4a47f194dbe8741eeb4b" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1a1d8eb4c66b7840913cee742e2138f10c" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1a4cd8aa04392f1c2ef665cb5bdfa7bc86" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1a29ec8158c25feb319848a876783fdc79" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1add11fefa6ae6dfb7e374d22c54eaedf0" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1a2854675abd8fdbbcc63676db498195a1" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1abc84ec88a117f481e3b0ed8a6d273cce" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1a0dd98b34ed11a4405f134969cf120152" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1aaf2cfe422127533782d5e8b4073548e3" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1a145be9fc116c50ae461f5b6a038e3483" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>TemplCommandInOut</name></member>
      <member refid="d2/d1d/classTango_1_1Command_1a05ff827c05911f69e56e3835345f5e84" prot="public" virt="virtual"><scope>Tango::TemplCommandInOut</scope><name>~Command</name></member>
      <member refid="db/dbb/classTango_1_1TemplCommandInOut_1afdd5a0253149e132d8f44945b9c18cb8" prot="public" virt="non-virtual"><scope>Tango::TemplCommandInOut</scope><name>~TemplCommandInOut</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
