+----------+---------------------------------------+
| |Logo|   | Tango Core Classes Reference  9.2.5   |
+----------+---------------------------------------+

-  `Main Page <../../index.html>`__
-  `Related Pages <../../pages.html>`__
-  `Modules <../../modules.html>`__
-  `Namespaces <../../namespaces.html>`__
-  `Classes <../../annotated.html>`__
-  `Files <../../files.html>`__

-  `File List <../../files.html>`__
-  `File Members <../../globals.html>`__

device\_3.h

`Go to the documentation of this
file. <../../dc/db9/device__3_8h.html>`__

1 //=============================================================================

2 //

3 // file : Device.h

4 //

5 // description : Include for the Device root classes.

6 // Three classes are declared in this file :

7 // The Device class

8 // The DeviceClass class

9 //

10 // project : TANGO

11 //

12 // author(s) : A.Gotz + E.Taurel

13 //

14 // Copyright (C) :
2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015

15 // European Synchrotron Radiation Facility

16 // BP 220, Grenoble 38043

17 // FRANCE

18 //

19 // This file is part of Tango.

20 //

21 // Tango is free software: you can redistribute it and/or modify

22 // it under the terms of the GNU Lesser General Public License as
published by

23 // the Free Software Foundation, either version 3 of the License, or

24 // (at your option) any later version.

25 //

26 // Tango is distributed in the hope that it will be useful,

27 // but WITHOUT ANY WARRANTY; without even the implied warranty of

28 // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the

29 // GNU Lesser General Public License for more details.

30 //

31 // You should have received a copy of the GNU Lesser General Public
License

32 // along with Tango. If not, see <http://www.gnu.org/licenses/>.

33 //

34 // $Revision: 18607

35 //

36 //=============================================================================

37 

38 #ifndef \_DEVICE\_3\_H

39 #define \_DEVICE\_3\_H

40 

41 #include <tango.h>

42 

43 namespace `Tango <../../de/ddf/namespaceTango.html>`__

44 {

45 

46 class DeviceClass;

47 class AttributeValueList\_4;

48 

49 //=============================================================================

50 //

51 // The Device\_3Impl class

52 //

53 //

54 // description : This class is derived directly from the
Tango::Device\_skel

55 // class generated by CORBA. It represents the CORBA

56 // servant which will be accessed by the client.

57 // It implements all the methods

58 // and attributes defined in the IDL interface for Device.

59 //

60 //=============================================================================

61 

`62 <../../d9/d5b/structTango_1_1AttIdx.html>`__ struct
`AttIdx <../../d9/d5b/structTango_1_1AttIdx.html>`__

63 {

`64 <../../d9/d5b/structTango_1_1AttIdx.html#aa71a9486541800c6fae590d925c4e9fa>`__ 
long
`idx\_in\_names <../../d9/d5b/structTango_1_1AttIdx.html#aa71a9486541800c6fae590d925c4e9fa>`__;

`65 <../../d9/d5b/structTango_1_1AttIdx.html#adea7a0153553f99a39be55f22c5d42c0>`__ 
long
`idx\_in\_multi\_attr <../../d9/d5b/structTango_1_1AttIdx.html#adea7a0153553f99a39be55f22c5d42c0>`__;

`66 <../../d9/d5b/structTango_1_1AttIdx.html#ac0bbd831200c802daaad0c584cc81f0b>`__ 
bool
`failed <../../d9/d5b/structTango_1_1AttIdx.html#ac0bbd831200c802daaad0c584cc81f0b>`__;

67 };

68 

`85 <../../db/d65/classTango_1_1Device__3Impl.html>`__ class
`Device\_3Impl <../../db/d65/classTango_1_1Device__3Impl.html>`__ :
public virtual POA\_Tango::Device\_3,

86  public
`Device\_2Impl <../../d8/dbf/classTango_1_1Device__2Impl.html>`__

87 {

88 public:

89 

104 
`Device\_3Impl <../../db/d65/classTango_1_1Device__3Impl.html#ac9db8606c8ea7044642865d104ad74af>`__\ (`DeviceClass <../../d4/dcd/classTango_1_1DeviceClass.html>`__
\*\ `device\_class <../../d3/d62/classTango_1_1DeviceImpl.html#a103c3527a529f7a40ecadf227a8a7990>`__,string
&dev\_name);

105 

118 
`Device\_3Impl <../../db/d65/classTango_1_1Device__3Impl.html#ac9db8606c8ea7044642865d104ad74af>`__\ (`DeviceClass <../../d4/dcd/classTango_1_1DeviceClass.html>`__
\*device\_class,string &dev\_name,string
&\ `desc <../../d3/d62/classTango_1_1DeviceImpl.html#a480f48ff00c9d1aa8bd406323967df7d>`__);

119 

134 
`Device\_3Impl <../../db/d65/classTango_1_1Device__3Impl.html#ac9db8606c8ea7044642865d104ad74af>`__\ (`DeviceClass <../../d4/dcd/classTango_1_1DeviceClass.html>`__
\*device\_class,

135  string &dev\_name,string &desc,

136  Tango::DevState
`dev\_state <../../d3/d62/classTango_1_1DeviceImpl.html#a1b5f98bd245bd7e94403eaebc2913283>`__,string
&\ `dev\_status <../../d3/d62/classTango_1_1DeviceImpl.html#afcea586ff5d465e6f752fd256a66aeea>`__);

137 

155 
`Device\_3Impl <../../db/d65/classTango_1_1Device__3Impl.html#ac9db8606c8ea7044642865d104ad74af>`__\ (`DeviceClass <../../d4/dcd/classTango_1_1DeviceClass.html>`__
\*device\_class,

156  const char \*dev\_name,const char \*desc = "A TANGO device",

157  Tango::DevState dev\_state = Tango::UNKNOWN,

158  const char \*dev\_status =
`StatusNotSet <../../de/ddf/namespaceTango.html#ae1851ebaa91cbf1df9317e3f47f6190a>`__);

160 

167 #ifdef HAS\_UNIQUE\_PTR

168  virtual
`~Device\_3Impl <../../db/d65/classTango_1_1Device__3Impl.html#a364061576e373d8bec46b5bba70f2817>`__\ ()
{}

169 #else

`170 <../../db/d65/classTango_1_1Device__3Impl.html#a364061576e373d8bec46b5bba70f2817>`__ 
virtual
`~Device\_3Impl <../../db/d65/classTango_1_1Device__3Impl.html#a364061576e373d8bec46b5bba70f2817>`__\ ()
{delete ext\_3;}

171 #endif

172 

173 

174 

178 

198  virtual Tango::AttributeValueList\_3
\*\ `read\_attributes\_3 <../../db/d65/classTango_1_1Device__3Impl.html#a870e349674aca9b3ebee55157a31b5d3>`__\ (const
Tango::DevVarStringArray& names,

199  Tango::DevSource source);

200 

216  virtual void
`write\_attributes\_3 <../../db/d65/classTango_1_1Device__3Impl.html#af1a705a748bf08290150c3e50bdb29ff>`__\ (const
Tango::AttributeValueList& values);

217 

238  virtual Tango::DevAttrHistoryList\_3
\*\ `read\_attribute\_history\_3 <../../db/d65/classTango_1_1Device__3Impl.html#a87abb35e56c7b00c542e949ef43ba1b0>`__\ (const
char\* name,

239  CORBA::Long n);

240 

250  virtual Tango::DevInfo\_3
\*\ `info\_3 <../../db/d65/classTango_1_1Device__3Impl.html#a28dab632521e2fb0e52827d155af673c>`__\ ();

251 

271  virtual Tango::AttributeConfigList\_3
\*\ `get\_attribute\_config\_3 <../../db/d65/classTango_1_1Device__3Impl.html#a651489039cc5222dc1197b3368aa8cdd>`__\ (const
Tango::DevVarStringArray& names);

272 

288  virtual void
`set\_attribute\_config\_3 <../../db/d65/classTango_1_1Device__3Impl.html#a6eaac6785a84422132e654916fc2cf7e>`__\ (const
Tango::AttributeConfigList\_3& new\_conf);

290 

292  void write\_attributes\_in\_db(vector<long> &,vector<long> &);

293  void add\_state\_status\_attrs();

294  void read\_attributes\_from\_cache(const
Tango::DevVarStringArray&,\ `Tango::AttributeIdlData <../../d5/d25/structTango_1_1__AttributeIdlData.html>`__
&);

295  void delete\_dev() {ext\_3->delete\_dev();}

296  void get\_attr\_props(const char \*,vector<AttrProperty> &);

297 

298 protected:

300  void read\_attributes\_no\_except(const
Tango::DevVarStringArray&,\ `Tango::AttributeIdlData <../../d5/d25/structTango_1_1__AttributeIdlData.html>`__
&,bool,vector<long> &);

301  void write\_attributes\_in\_db(vector<long> &,vector<AttIdx> &);

302  void add\_alarmed(vector<long> &);

303  long reading\_state\_necessary(vector<AttIdx> &);

304  void state2attr(Tango::DevState,Tango::AttributeValue\_3 &);

305  void state2attr(Tango::DevState,Tango::AttributeValue\_4 &);

306  void state2attr(Tango::DevState,Tango::AttributeValue\_5 &);

307  void
status2attr(\ `Tango::ConstDevString <../../de/ddf/namespaceTango.html#a31a504495ecab5fd862cb6e60d40360c>`__,Tango::AttributeValue\_3
&);

308  void
status2attr(\ `Tango::ConstDevString <../../de/ddf/namespaceTango.html#a31a504495ecab5fd862cb6e60d40360c>`__,Tango::AttributeValue\_4
&);

309  void
status2attr(\ `Tango::ConstDevString <../../de/ddf/namespaceTango.html#a31a504495ecab5fd862cb6e60d40360c>`__,Tango::AttributeValue\_5
&);

310  void alarmed\_not\_read(vector<AttIdx> &);

311 

312  void write\_attributes\_34(const Tango::AttributeValueList \*,const
Tango::AttributeValueList\_4 \*);

313 

314  template <typename T,typename V>

315  void set\_attribute\_config\_3\_local(const T &,const V
&,bool,int);

316 

317  template <typename T> void error\_from\_devfailed(T &,DevFailed
&,const char \*);

318  template <typename T> void error\_from\_errorlist(T &,DevErrorList
&,const char \*);

319 

320  template <typename T> void one\_error(T &,const char \*,const char
\*,string &,Attribute &);

321  template <typename T> void one\_error(T &,const char \*,const char
\*,string &,const char \*);

322 

323  template <typename T,typename V> void init\_polled\_out\_data(T &,V
&);

324  template <typename T> void init\_out\_data(T &,Attribute
&,AttrWriteType &);

325  template <typename T> void init\_out\_data\_quality(T &,Attribute
&,AttrQuality);

326 

327  template <typename T> void base\_state2attr(T &);

328  template <typename T> void base\_status2attr(T &);

329 

330 private:

331 

332  class Device\_3ImplExt

333  {

334  public:

335  Device\_3ImplExt() {}

336  virtual ~Device\_3ImplExt() {}

337 

338  virtual void delete\_dev() {}

339  };

340 

341  void real\_ctor();

342 

343 #ifdef HAS\_UNIQUE\_PTR

344  unique\_ptr<Device\_3ImplExt> ext\_3; // Class extension

345 #else

346  Device\_3ImplExt \*ext\_3;

347 #endif

348 };

349 

350 } // End of Tango namespace

351 

352 #endif // \_DEVICE\_H

`Tango::\_AttributeIdlData <../../d5/d25/structTango_1_1__AttributeIdlData.html>`__

**Definition:** tango\_const.h:1208

`Tango::AttIdx::idx\_in\_multi\_attr <../../d9/d5b/structTango_1_1AttIdx.html#adea7a0153553f99a39be55f22c5d42c0>`__

long idx\_in\_multi\_attr

**Definition:** device\_3.h:65

`Tango::Device\_3Impl <../../db/d65/classTango_1_1Device__3Impl.html>`__

Base class for all TANGO device since version 3.

**Definition:** device\_3.h:85

`Tango::AttIdx <../../d9/d5b/structTango_1_1AttIdx.html>`__

**Definition:** device\_3.h:62

`Tango::Device\_3Impl::info\_3 <../../db/d65/classTango_1_1Device__3Impl.html#a28dab632521e2fb0e52827d155af673c>`__

virtual Tango::DevInfo\_3 \* info\_3()

Get device info.

`Tango <../../de/ddf/namespaceTango.html>`__

=============================================================================

**Definition:** device.h:50

`Tango::Device\_3Impl::read\_attribute\_history\_3 <../../db/d65/classTango_1_1Device__3Impl.html#a87abb35e56c7b00c542e949ef43ba1b0>`__

virtual Tango::DevAttrHistoryList\_3 \*
read\_attribute\_history\_3(const char \*name, CORBA::Long n)

Read attribute value history.

`Tango::Device\_3Impl::get\_attribute\_config\_3 <../../db/d65/classTango_1_1Device__3Impl.html#a651489039cc5222dc1197b3368aa8cdd>`__

virtual Tango::AttributeConfigList\_3 \* get\_attribute\_config\_3(const
Tango::DevVarStringArray &names)

Get attribute(s) configuration.

`Tango::DeviceImpl::desc <../../d3/d62/classTango_1_1DeviceImpl.html#a480f48ff00c9d1aa8bd406323967df7d>`__

string desc

The device description.

**Definition:** device.h:3260

`Tango::Device\_3Impl::Device\_3Impl <../../db/d65/classTango_1_1Device__3Impl.html#ac9db8606c8ea7044642865d104ad74af>`__

Device\_3Impl(DeviceClass \*device\_class, string &dev\_name)

Constructs a newly allocated Device\_3Impl object from its name.

`Tango::Device\_3Impl::~Device\_3Impl <../../db/d65/classTango_1_1Device__3Impl.html#a364061576e373d8bec46b5bba70f2817>`__

virtual ~Device\_3Impl()

The device desctructor.

**Definition:** device\_3.h:170

`Tango::DeviceImpl::dev\_state <../../d3/d62/classTango_1_1DeviceImpl.html#a1b5f98bd245bd7e94403eaebc2913283>`__

virtual Tango::DevState dev\_state()

Get device state.

`Tango::Device\_2Impl <../../d8/dbf/classTango_1_1Device__2Impl.html>`__

Base class for all TANGO device since version 2.

**Definition:** device\_2.h:77

`Tango::AttIdx::failed <../../d9/d5b/structTango_1_1AttIdx.html#ac0bbd831200c802daaad0c584cc81f0b>`__

bool failed

**Definition:** device\_3.h:66

`Tango::StatusNotSet <../../de/ddf/namespaceTango.html#ae1851ebaa91cbf1df9317e3f47f6190a>`__

const char \*const StatusNotSet

**Definition:** tango\_const.h:71

`Tango::Device\_3Impl::set\_attribute\_config\_3 <../../db/d65/classTango_1_1Device__3Impl.html#a6eaac6785a84422132e654916fc2cf7e>`__

virtual void set\_attribute\_config\_3(const
Tango::AttributeConfigList\_3 &new\_conf)

Set attribute(s) configuration.

`Tango::DeviceImpl::dev\_status <../../d3/d62/classTango_1_1DeviceImpl.html#afcea586ff5d465e6f752fd256a66aeea>`__

virtual Tango::ConstDevString dev\_status()

Get device status.

`Tango::AttIdx::idx\_in\_names <../../d9/d5b/structTango_1_1AttIdx.html#aa71a9486541800c6fae590d925c4e9fa>`__

long idx\_in\_names

**Definition:** device\_3.h:64

`Tango::ConstDevString <../../de/ddf/namespaceTango.html#a31a504495ecab5fd862cb6e60d40360c>`__

const char \* ConstDevString

**Definition:** tango\_const.h:469

`Tango::DeviceClass <../../d4/dcd/classTango_1_1DeviceClass.html>`__

Base class for all TANGO device-class class.

**Definition:** deviceclass.h:76

`Tango::Device\_3Impl::read\_attributes\_3 <../../db/d65/classTango_1_1Device__3Impl.html#a870e349674aca9b3ebee55157a31b5d3>`__

virtual Tango::AttributeValueList\_3 \* read\_attributes\_3(const
Tango::DevVarStringArray &names, Tango::DevSource source)

Read attribute(s) value.

`Tango::DeviceImpl::device\_class <../../d3/d62/classTango_1_1DeviceImpl.html#a103c3527a529f7a40ecadf227a8a7990>`__

DeviceClass \* device\_class

Pointer to the device-class object associated with the device.

**Definition:** device.h:3276

`Tango::Device\_3Impl::write\_attributes\_3 <../../db/d65/classTango_1_1Device__3Impl.html#af1a705a748bf08290150c3e50bdb29ff>`__

virtual void write\_attributes\_3(const Tango::AttributeValueList
&values)

Write attribute(s) value.

-  `include <../../dir_93bc669b4520ad36068f344e109b7d17.html>`__
-  `tango <../../dir_8ff48e8f3ef80891a9957ae5e9583431.html>`__
-  `server <../../dir_53b28a22454594c5818f3f3f5a9fd698.html>`__
-  `device\_3.h <../../dc/db9/device__3_8h.html>`__
-  Generated on Fri Oct 7 2016 11:11:15 for Tango Core Classes Reference
   by |doxygen| 1.8.8

.. |Logo| image:: ../../logo.jpg
.. |doxygen| image:: ../../doxygen.png
   :target: http://www.doxygen.org/index.html
