#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage{a4wide}
\end_preamble
\use_default_options false
\language english
\inputencoding latin1
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\end_header

\begin_body

\begin_layout Chapter
The property file syntax
\end_layout

\begin_layout Section
Property file usage
\end_layout

\begin_layout Standard
A property file is a file where you store all the property(ies) related
 to device(s) belonging to a specific device server process.
 In this file, one can find:
\end_layout

\begin_layout Itemize
Which device(s) has to be created for each Tango class embedded in the device
 server process
\end_layout

\begin_layout Itemize
Device(s) properties
\end_layout

\begin_layout Itemize
Device(s) attribute properties
\end_layout

\begin_layout Standard
This type of file is not required by a Tango control system.
 These informations are stored in the Tango database and having them also
 in a file could generate some data duplication issues.
 Nevertheless, in some cases, it could very very helpful to generate this
 type of file.
 These cases are:
\end_layout

\begin_layout Enumerate
If you want to run a device server process on a host which does not have
 access to the Tango control system database.
 In such a case, the user can generate the file from the database content
 and run the device server process using this file as database (-file option
 of device server process)
\end_layout

\begin_layout Enumerate
In case of massive property changes where no tool will be more adapted than
 your favorite text editor.
 In such a case, the user can generate a file from the database content,
 change/add/modify file contents using his favorite tool and then reload
 file content into the database.
\end_layout

\begin_layout Standard
Jive
\begin_inset CommandInset citation
LatexCommand cite
key "Jive doc"

\end_inset

 is the tool provided to generate and load a property file.
 To generate a device server process properties file, select your device
 server process in the "Server" tab, right click and select "Save Server
 Data".
 A file selection window pops up allowing you to choose your file name and
 path.
 To reload a file in the Tango database, click on "File" then "Load Property
 File".
 
\end_layout

\begin_layout Section
Property file syntax
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "line.tex"

\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
1 
\series default
#---------------------------------------------------------
\end_layout

\begin_layout LyX-Code
2 # SERVER TimeoutTest/manu, TimeoutTest device declaration
\end_layout

\begin_layout LyX-Code
3 #---------------------------------------------------------
\end_layout

\begin_layout LyX-Code
4 
\end_layout

\begin_layout LyX-Code
5 TimeoutTest/manu/DEVICE/TimeoutTest: "et/to/01",
\backslash
 
\end_layout

\begin_layout LyX-Code
6                                      "et/to/02",
\backslash
 
\end_layout

\begin_layout LyX-Code
7                                      "et/to/03"
\end_layout

\begin_layout LyX-Code
8 
\end_layout

\begin_layout LyX-Code
9 
\end_layout

\begin_layout LyX-Code
10 # --- et/to/01 properties
\end_layout

\begin_layout LyX-Code
11 
\end_layout

\begin_layout LyX-Code
12 et/to/01->StringProp: Property
\end_layout

\begin_layout LyX-Code
13 et/to/01->ArrayProp: 1,
\backslash
 
\end_layout

\begin_layout LyX-Code
14                      2,
\backslash
 
\end_layout

\begin_layout LyX-Code
15                      3
\end_layout

\begin_layout LyX-Code
16 et/to/01->attr_min_poll_period: TheAttr,
\backslash
 
\end_layout

\begin_layout LyX-Code
17                                 1000
\end_layout

\begin_layout LyX-Code
18 et/to/01->AnotherStringProp: "A long string"
\end_layout

\begin_layout LyX-Code
19 et/to/01->ArrayStringProp: "the first prop",
\backslash
 
\end_layout

\begin_layout LyX-Code
20                            "the second prop"
\end_layout

\begin_layout LyX-Code
21 
\end_layout

\begin_layout LyX-Code
22 # --- et/to/01 attribute properties
\end_layout

\begin_layout LyX-Code
23 
\end_layout

\begin_layout LyX-Code
24 et/to/01/TheAttr->display_unit: 1.0
\end_layout

\begin_layout LyX-Code
25 et/to/01/TheAttr->event_period: 1000
\end_layout

\begin_layout LyX-Code
26 et/to/01/TheAttr->format: %4d
\end_layout

\begin_layout LyX-Code
27 et/to/01/TheAttr->min_alarm: -2.0
\end_layout

\begin_layout LyX-Code
28 et/to/01/TheAttr->min_value: -5.0
\end_layout

\begin_layout LyX-Code
29 et/to/01/TheAttr->standard_unit: 1.0
\end_layout

\begin_layout LyX-Code
30 et/to/01/TheAttr->__value: 111
\end_layout

\begin_layout LyX-Code
31 et/to/01/BooAttr->event_period: 1000doc_url
\end_layout

\begin_layout LyX-Code
32 et/to/01/TestAttr->display_unit: 1.0
\end_layout

\begin_layout LyX-Code
33 et/to/01/TestAttr->event_period: 1000
\end_layout

\begin_layout LyX-Code
34 et/to/01/TestAttr->format: %4d
\end_layout

\begin_layout LyX-Code
35 et/to/01/TestAttr->standard_unit: 1.0
\end_layout

\begin_layout LyX-Code
36 et/to/01/DbAttr->abs_change: 1.1
\end_layout

\begin_layout LyX-Code
37 et/to/01/DbAttr->event_period: 1000
\end_layout

\begin_layout LyX-Code
38
\end_layout

\begin_layout LyX-Code
39 CLASS/TimeoutTest->InheritedFrom:   Device_4Impl
\end_layout

\begin_layout LyX-Code
40 CLASS/TimeoutTest->doc_url:   "http://www.esrf.fr/some/path"
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "line.tex"

\end_inset


\end_layout

\begin_layout Standard
Line 1 - 3: Comments.
 Comment starts with the '#' character
\end_layout

\begin_layout Standard
Line 4: Blank line
\end_layout

\begin_layout Standard
Line 5 - 7: Devices definition.
 "DEVICE" is the keyword to declare a device(s) definition sequence.
 The general syntax is:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

<DS name>/<inst name>/DEVICE/<Class name>: dev1,dev2,dev3
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset

Device(s) name can follow on next line if the last line character is '
\backslash
' (see line 5,6).
 The '"' characters around device name are generated by the Jive tool and
 are not mandatory.
\end_layout

\begin_layout Standard
Line 12: Device property definition.
 The general device property syntax is 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

<device name>
\series bold
->
\series default
<property name>: <property value>
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset

In case of array, the array element delimiter is the character ','.
 Array definition can be splitted on several lines if the last line character
 is '
\backslash
'.
 Allowed characters after the ':' delimiter are space, tabulation or nothing.
\end_layout

\begin_layout Standard
Line 13 - 15 and 16 - 17: Device property (array)
\end_layout

\begin_layout Standard
Line 18: A device string property with special characters (spaces).
 The '"' character is used to delimit the string
\end_layout

\begin_layout Standard
Line 24 - 37: Device attribute property definition.
 The general device attribute property syntax is 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

<device name>/<attribute name>
\series bold
->
\series default
<property name>: <property value>
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset

Allowed characters after the ':' delimiter are space, tabulation or nothing.
\end_layout

\begin_layout Standard
Line 39 - 40: Class property definition.
 The general class property syntax is 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

CLASS/<class name>
\series bold
->
\series default
<property name>: <property value>
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset

"CLASS" is the keyword to declare a class property definition.
 Allowed characters after the ':' delimiter are space, tabulation or nothing.
 On line 40, the '"' characters around the property value are mandatory
 due to the '/' character contains in the property value.
\end_layout

\end_body
\end_document
